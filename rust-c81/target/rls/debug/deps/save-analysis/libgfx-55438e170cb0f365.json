{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1","program":"/Users/evance.soumaoro/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","gfx","/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=55438e170cb0f365","-C","extra-filename=-55438e170cb0f365","--out-dir","/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps","-L","dependency=/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps","--extern","bitflags=/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps/libbitflags-8ae5b1aeefe25689.rmeta","--extern","draw_state=/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps/libdraw_state-adc75d0a2a19f42a.rmeta","--extern","log=/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps/liblog-70c591e031331aef.rmeta","--extern","num=/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps/libnum-ed5934ef079db519.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/evance.soumaoro/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps/libgfx-55438e170cb0f365.rmeta"},"prelude":{"crate_id":{"name":"gfx","disambiguator":[13870424280605991133,10534086563426268204]},"crate_root":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src","external_crates":[{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11705364677140973079,7726573435499814070]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9133280923345920065,5169035037401655959]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9811081489243518189,10016862334390338995]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16815776717140451016,2925157999366951619]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5571127662207602070,12081818010283277997]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9872675523737343627,13016261367480270594]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5564630398057371063,5134587089964058144]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[7317189895424764231,14908133925595887831]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7982293983073241509,18348097174152154939]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3938710137457602349,12366108798000803370]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[124527115135685225,16528639863833681107]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14633564717342525671,15444589222019281189]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":13,"id":{"name":"bitflags","disambiguator":[15775771530809590052,16736895993699727198]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":14,"id":{"name":"log","disambiguator":[5200766162944175150,18110966812626654089]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":15,"id":{"name":"log","disambiguator":[10016840466317318819,187834599901648576]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[14963944883158886413,14701138519701982724]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":17,"id":{"name":"draw_state","disambiguator":[2735359379155758389,9177626254274564315]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":18,"id":{"name":"num","disambiguator":[12882949185412181036,17545928137580400603]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":19,"id":{"name":"num_traits","disambiguator":[13495655323497013792,9659343508554922478]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":20,"id":{"name":"num_integer","disambiguator":[1104283549602111766,14250806870370105828]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":21,"id":{"name":"num_iter","disambiguator":[18143739956062506479,17884012909788570734]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":22,"id":{"name":"num_complex","disambiguator":[7689842510732627689,12983590092779354124]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":23,"id":{"name":"rustc_serialize","disambiguator":[15426668906330494309,6019115691366428323]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":24,"id":{"name":"num_bigint","disambiguator":[16784185302642229078,17529921613060583531]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":25,"id":{"name":"rand","disambiguator":[16382203259639205169,7483561531737656298]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":26,"id":{"name":"libc","disambiguator":[13472141932123952470,9033048170607305414]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","num":27,"id":{"name":"num_rational","disambiguator":[4337361002015963764,18116607907009998495]}}],"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":600,"byte_end":2218,"line_start":15,"line_end":63,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":753},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":927,"byte_end":933,"line_start":27,"line_end":27,"column_start":22,"column_end":28},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":714},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":935,"byte_end":942,"line_start":27,"line_end":27,"column_start":30,"column_end":37},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":761},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":944,"byte_end":955,"line_start":27,"line_end":27,"column_start":39,"column_end":50},"alias_span":null,"name":"DeviceFence","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":986,"byte_end":996,"line_start":28,"line_end":28,"column_start":29,"column_end":39},"alias_span":null,"name":"FactoryExt","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":827},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1026,"byte_end":1032,"line_start":29,"line_end":29,"column_start":29,"column_end":35},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":870},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1034,"byte_end":1047,"line_start":29,"line_end":29,"column_start":37,"column_end":50},"alias_span":null,"name":"StreamFactory","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1070,"byte_end":1083,"line_start":30,"line_end":30,"column_start":21,"column_end":34},"alias_span":null,"name":"RenderFactory","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":992},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1112,"byte_end":1124,"line_start":31,"line_end":31,"column_start":28,"column_end":40},"alias_span":null,"name":"ToIndexSlice","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":989},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1126,"byte_end":1133,"line_start":31,"line_end":31,"column_start":42,"column_end":49},"alias_span":null,"name":"ToSlice","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1098},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1164,"byte_end":1170,"line_start":32,"line_end":32,"column_start":29,"column_end":35},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":17,"index":799},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1221,"byte_end":1230,"line_start":36,"line_end":36,"column_start":22,"column_end":31},"alias_span":null,"name":"DrawState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":845},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1232,"byte_end":1243,"line_start":36,"line_end":36,"column_start":33,"column_end":44},"alias_span":null,"name":"BlendPreset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":13},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1266,"byte_end":1271,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1301,"byte_end":1302,"line_start":38,"line_end":38,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":753},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1343,"byte_end":1349,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1351,"byte_end":1361,"line_start":41,"line_end":41,"column_start":26,"column_end":36},"alias_span":null,"name":"SubmitInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":714},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1363,"byte_end":1370,"line_start":41,"line_end":41,"column_start":38,"column_end":45},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":704},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1372,"byte_end":1381,"line_start":41,"line_end":41,"column_start":47,"column_end":56},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1401,"byte_end":1407,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"alias_span":null,"name":"attrib","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1409,"byte_end":1412,"line_start":42,"line_end":42,"column_start":26,"column_end":29},"alias_span":null,"name":"tex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":335},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1414,"byte_end":1420,"line_start":42,"line_end":42,"column_start":31,"column_end":37},"alias_span":null,"name":"handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1439,"byte_end":1452,"line_start":43,"line_end":43,"column_start":17,"column_end":30},"alias_span":null,"name":"as_byte_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2728},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1471,"byte_end":1481,"line_start":44,"line_end":44,"column_start":18,"column_end":28},"alias_span":null,"name":"BufferRole","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2766},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1483,"byte_end":1493,"line_start":44,"line_end":44,"column_start":30,"column_end":40},"alias_span":null,"name":"BufferInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2747},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1495,"byte_end":1506,"line_start":44,"line_end":44,"column_start":42,"column_end":53},"alias_span":null,"name":"BufferUsage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":694},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1526,"byte_end":1537,"line_start":45,"line_end":45,"column_start":18,"column_end":29},"alias_span":null,"name":"VertexCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":695},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1539,"byte_end":1552,"line_start":45,"line_end":45,"column_start":31,"column_end":44},"alias_span":null,"name":"InstanceCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2708},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1571,"byte_end":1584,"line_start":46,"line_end":46,"column_start":17,"column_end":30},"alias_span":null,"name":"PrimitiveType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1609,"byte_end":1622,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"alias_span":null,"name":"CommandBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1625},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1624,"byte_end":1629,"line_start":47,"line_end":47,"column_start":39,"column_end":44},"alias_span":null,"name":"Gamma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1631,"byte_end":1645,"line_start":47,"line_end":47,"column_start":46,"column_end":60},"alias_span":null,"name":"InstanceOption","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2086},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1672,"byte_end":1683,"line_start":48,"line_end":48,"column_start":25,"column_end":36},"alias_span":null,"name":"ProgramInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1990},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1685,"byte_end":1697,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"alias_span":null,"name":"UniformValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1179},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1717,"byte_end":1725,"line_start":49,"line_end":49,"column_start":18,"column_end":26},"alias_span":null,"name":"Renderer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3113},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1727,"byte_end":1736,"line_start":49,"line_end":49,"column_start":28,"column_end":37},"alias_span":null,"name":"BlitError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3148},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1738,"byte_end":1747,"line_start":49,"line_end":49,"column_start":39,"column_end":48},"alias_span":null,"name":"DrawError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3127},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1749,"byte_end":1760,"line_start":49,"line_end":49,"column_start":50,"column_end":61},"alias_span":null,"name":"UpdateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":910},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1779,"byte_end":1784,"line_start":50,"line_end":50,"column_start":17,"column_end":22},"alias_span":null,"name":"batch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2867},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1809,"byte_end":1818,"line_start":51,"line_end":51,"column_start":24,"column_end":33},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2889},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1820,"byte_end":1824,"line_start":51,"line_end":51,"column_start":35,"column_end":39},"alias_span":null,"name":"Mesh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1826,"byte_end":1838,"line_start":51,"line_end":51,"column_start":41,"column_end":53},"alias_span":null,"name":"VertexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2976},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1863,"byte_end":1868,"line_start":52,"line_end":52,"column_start":23,"column_end":28},"alias_span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1872,"byte_end":1881,"line_start":52,"line_end":52,"column_start":32,"column_end":41},"name":"MeshError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2910},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1906,"byte_end":1911,"line_start":53,"line_end":53,"column_start":24,"column_end":29},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":992},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1913,"byte_end":1925,"line_start":53,"line_end":53,"column_start":31,"column_end":43},"alias_span":null,"name":"ToIndexSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":989},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1927,"byte_end":1934,"line_start":53,"line_end":53,"column_start":45,"column_end":52},"alias_span":null,"name":"ToSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2926},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1936,"byte_end":1945,"line_start":53,"line_end":53,"column_start":54,"column_end":63},"alias_span":null,"name":"SliceKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1964,"byte_end":1969,"line_start":54,"line_end":54,"column_start":17,"column_end":22},"alias_span":null,"name":"shade","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3095},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":1996,"byte_end":2001,"line_start":55,"line_end":55,"column_start":26,"column_end":31},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1098},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2003,"byte_end":2009,"line_start":55,"line_end":55,"column_start":33,"column_end":39},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3075},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2011,"byte_end":2016,"line_start":55,"line_end":55,"column_start":41,"column_end":46},"alias_span":null,"name":"Plane","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1160},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2035,"byte_end":2047,"line_start":56,"line_end":56,"column_start":17,"column_end":29},"alias_span":null,"name":"ParamStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2809},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2072,"byte_end":2084,"line_start":57,"line_end":57,"column_start":24,"column_end":36},"alias_span":null,"name":"ShaderSource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2792},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2086,"byte_end":2098,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"alias_span":null,"name":"ProgramError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":854},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2125,"byte_end":2136,"line_start":58,"line_end":58,"column_start":25,"column_end":36},"alias_span":null,"name":"OwnedStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":827},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2138,"byte_end":2144,"line_start":58,"line_end":58,"column_start":38,"column_end":44},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2146,"byte_end":2152,"line_start":58,"line_end":58,"column_start":46,"column_end":52},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":34},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":2955,"byte_end":2961,"line_start":22,"line_end":22,"column_start":21,"column_end":27},"alias_span":null,"name":"target","value":"","parent":{"krate":0,"index":89}},{"kind":"Use","ref_id":{"krate":17,"index":13},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":2983,"byte_end":2988,"line_start":23,"line_end":23,"column_start":21,"column_end":26},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":89}},{"kind":"Use","ref_id":{"krate":0,"index":1973},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":159122,"byte_end":159127,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"alias_span":null,"name":"Stage","value":"","parent":{"krate":0,"index":1014}},{"kind":"Use","ref_id":{"krate":0,"index":2110},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":159129,"byte_end":159146,"line_start":23,"line_end":23,"column_start":32,"column_end":49},"alias_span":null,"name":"CreateShaderError","value":"","parent":{"krate":0,"index":1014}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":600,"byte_end":2218,"line_start":15,"line_end":63,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":89},{"krate":0,"index":765},{"krate":0,"index":877},{"krate":0,"index":880}],"decl_id":null,"docs":" An efficient, low-level, bindless graphics API for Rust. See [the\n blog](http://gfx-rs.github.io/) for explanations and annotated examples.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":897,"byte_end":903,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29}],"decl_id":null,"docs":" public re-exported traits\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":89},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"device","qualname":"::device","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":198},{"krate":0,"index":250},{"krate":0,"index":305},{"krate":0,"index":335},{"krate":0,"index":464},{"krate":0,"index":571},{"krate":0,"index":585},{"krate":0,"index":630},{"krate":0,"index":646},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":2665},{"krate":0,"index":2673},{"krate":0,"index":2671},{"krate":0,"index":2669},{"krate":0,"index":2667},{"krate":0,"index":700},{"krate":0,"index":2674},{"krate":0,"index":2697},{"krate":0,"index":2695},{"krate":0,"index":2693},{"krate":0,"index":2698},{"krate":0,"index":2707},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2727},{"krate":0,"index":2725},{"krate":0,"index":2723},{"krate":0,"index":2721},{"krate":0,"index":703},{"krate":0,"index":2728},{"krate":0,"index":2746},{"krate":0,"index":2744},{"krate":0,"index":2742},{"krate":0,"index":2740},{"krate":0,"index":2737},{"krate":0,"index":2735},{"krate":0,"index":2747},{"krate":0,"index":2765},{"krate":0,"index":2763},{"krate":0,"index":2761},{"krate":0,"index":2759},{"krate":0,"index":2756},{"krate":0,"index":2754},{"krate":0,"index":2766},{"krate":0,"index":2781},{"krate":0,"index":2780},{"krate":0,"index":2778},{"krate":0,"index":2776},{"krate":0,"index":2773},{"krate":0,"index":2770},{"krate":0,"index":2783},{"krate":0,"index":2790},{"krate":0,"index":2788},{"krate":0,"index":2786},{"krate":0,"index":704},{"krate":0,"index":714},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":761}],"decl_id":null,"docs":" Graphics device. Not meant for direct use.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":2820,"byte_end":2842,"line_start":15,"line_end":15,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":96},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attrib","qualname":"::device::attrib","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":1240},{"krate":0,"index":1259},{"krate":0,"index":1257},{"krate":0,"index":1255},{"krate":0,"index":1253},{"krate":0,"index":1250},{"krate":0,"index":1249},{"krate":0,"index":1247},{"krate":0,"index":1245},{"krate":0,"index":1261},{"krate":0,"index":1282},{"krate":0,"index":1280},{"krate":0,"index":1278},{"krate":0,"index":1276},{"krate":0,"index":1273},{"krate":0,"index":1272},{"krate":0,"index":1270},{"krate":0,"index":1268},{"krate":0,"index":1284},{"krate":0,"index":1305},{"krate":0,"index":1303},{"krate":0,"index":1301},{"krate":0,"index":1299},{"krate":0,"index":1296},{"krate":0,"index":1295},{"krate":0,"index":1293},{"krate":0,"index":1291},{"krate":0,"index":1307},{"krate":0,"index":1326},{"krate":0,"index":1324},{"krate":0,"index":1322},{"krate":0,"index":1320},{"krate":0,"index":1317},{"krate":0,"index":1316},{"krate":0,"index":1314},{"krate":0,"index":1312},{"krate":0,"index":1328},{"krate":0,"index":1349},{"krate":0,"index":1347},{"krate":0,"index":1345},{"krate":0,"index":1343},{"krate":0,"index":1340},{"krate":0,"index":1339},{"krate":0,"index":1337},{"krate":0,"index":1335},{"krate":0,"index":1351},{"krate":0,"index":1394},{"krate":0,"index":1392},{"krate":0,"index":1389},{"krate":0,"index":1371},{"krate":0,"index":1368},{"krate":0,"index":1367},{"krate":0,"index":1365},{"krate":0,"index":1363},{"krate":0,"index":102},{"krate":0,"index":1396},{"krate":0,"index":1437},{"krate":0,"index":1435},{"krate":0,"index":1432},{"krate":0,"index":1410},{"krate":0,"index":1407},{"krate":0,"index":1406},{"krate":0,"index":1404},{"krate":0,"index":1402},{"krate":0,"index":1439},{"krate":0,"index":1456},{"krate":0,"index":1454},{"krate":0,"index":1451},{"krate":0,"index":1447},{"krate":0,"index":1443},{"krate":0,"index":105},{"krate":0,"index":1459},{"krate":0,"index":1476},{"krate":0,"index":1474},{"krate":0,"index":1471},{"krate":0,"index":1467},{"krate":0,"index":1463},{"krate":0,"index":116},{"krate":0,"index":127}],"decl_id":null,"docs":" Vertex attribute types.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":14714,"byte_end":14737,"line_start":17,"line_end":17,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":98},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":14841,"byte_end":14846,"line_start":22,"line_end":22,"column_start":10,"column_end":15},"name":"Count","qualname":"::device::attrib::Count","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of elements per attribute, only 1 to 4 are supported\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":14928,"byte_end":14934,"line_start":24,"line_end":24,"column_start":10,"column_end":16},"name":"Offset","qualname":"::device::attrib::Offset","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Offset of an attribute from the start of the buffer, in bytes\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":100},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":14997,"byte_end":15003,"line_start":26,"line_end":26,"column_start":10,"column_end":16},"name":"Stride","qualname":"::device::attrib::Stride","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Offset between attribute values, in bytes\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":101},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15087,"byte_end":15099,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"name":"InstanceRate","qualname":"::device::attrib::InstanceRate","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" The number of instances between each subsequent attribute value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15247,"byte_end":15253,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Signed","qualname":"::device::attrib::SignFlag::Signed","value":"SignFlag::Signed","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15259,"byte_end":15267,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"Unsigned","qualname":"::device::attrib::SignFlag::Unsigned","value":"SignFlag::Unsigned","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15232,"byte_end":15240,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"name":"SignFlag","qualname":"::device::attrib::SignFlag","value":"SignFlag::{Signed, Unsigned}","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1243}],"decl_id":null,"docs":" The signedness of an attribute.\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15211,"byte_end":15222,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15223,"byte_end":15270,"line_start":33,"line_end":36,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15223,"byte_end":15270,"line_start":33,"line_end":36,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1262},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15443,"byte_end":15446,"line_start":42,"line_end":42,"column_start":5,"column_end":8},"name":"Raw","qualname":"::device::attrib::IntSubType::Raw","value":"IntSubType::Raw","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15484,"byte_end":15494,"line_start":43,"line_end":43,"column_start":5,"column_end":15},"name":"Normalized","qualname":"::device::attrib::IntSubType::Normalized","value":"IntSubType::Normalized","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15568,"byte_end":15575,"line_start":44,"line_end":44,"column_start":5,"column_end":12},"name":"AsFloat","qualname":"::device::attrib::IntSubType::AsFloat","value":"IntSubType::AsFloat","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15426,"byte_end":15436,"line_start":41,"line_end":41,"column_start":10,"column_end":20},"name":"IntSubType","qualname":"::device::attrib::IntSubType","value":"IntSubType::{Raw, Normalized, AsFloat}","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266}],"decl_id":null,"docs":" Describes how an integer value is interpreted by the shader.\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15405,"byte_end":15416,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15417,"byte_end":15631,"line_start":41,"line_end":45,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15417,"byte_end":15631,"line_start":41,"line_end":45,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15783,"byte_end":15785,"line_start":51,"line_end":51,"column_start":5,"column_end":7},"name":"U8","qualname":"::device::attrib::IntSize::U8","value":"IntSize::U8","parent":{"krate":0,"index":1284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15791,"byte_end":15794,"line_start":52,"line_end":52,"column_start":5,"column_end":8},"name":"U16","qualname":"::device::attrib::IntSize::U16","value":"IntSize::U16","parent":{"krate":0,"index":1284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15800,"byte_end":15803,"line_start":53,"line_end":53,"column_start":5,"column_end":8},"name":"U32","qualname":"::device::attrib::IntSize::U32","value":"IntSize::U32","parent":{"krate":0,"index":1284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15769,"byte_end":15776,"line_start":50,"line_end":50,"column_start":10,"column_end":17},"name":"IntSize","qualname":"::device::attrib::IntSize","value":"IntSize::{U8, U16, U32}","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1289}],"decl_id":null,"docs":" The size of an integer attribute, in bits.\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15748,"byte_end":15759,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15760,"byte_end":15806,"line_start":50,"line_end":54,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15760,"byte_end":15806,"line_start":50,"line_end":54,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15975,"byte_end":15982,"line_start":60,"line_end":60,"column_start":5,"column_end":12},"name":"Default","qualname":"::device::attrib::FloatSubType::Default","value":"FloatSubType::Default","parent":{"krate":0,"index":1307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16001,"byte_end":16010,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"Precision","qualname":"::device::attrib::FloatSubType::Precision","value":"FloatSubType::Precision","parent":{"krate":0,"index":1307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15956,"byte_end":15968,"line_start":59,"line_end":59,"column_start":10,"column_end":22},"name":"FloatSubType","qualname":"::device::attrib::FloatSubType","value":"FloatSubType::{Default, Precision}","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1310}],"decl_id":null,"docs":" Type of a floating point attribute on the shader side.\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15935,"byte_end":15946,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15947,"byte_end":16024,"line_start":59,"line_end":62,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":15947,"byte_end":16024,"line_start":59,"line_end":62,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16184,"byte_end":16187,"line_start":68,"line_end":68,"column_start":5,"column_end":8},"name":"F16","qualname":"::device::attrib::FloatSize::F16","value":"FloatSize::F16","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16193,"byte_end":16196,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"F32","qualname":"::device::attrib::FloatSize::F32","value":"FloatSize::F32","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16202,"byte_end":16205,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"name":"F64","qualname":"::device::attrib::FloatSize::F64","value":"FloatSize::F64","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16168,"byte_end":16177,"line_start":67,"line_end":67,"column_start":10,"column_end":19},"name":"FloatSize","qualname":"::device::attrib::FloatSize","value":"FloatSize::{F16, F32, F64}","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1333}],"decl_id":null,"docs":" The size of a floating point attribute, in bits.\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16147,"byte_end":16158,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16159,"byte_end":16208,"line_start":67,"line_end":71,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16159,"byte_end":16208,"line_start":67,"line_end":71,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16328,"byte_end":16331,"line_start":76,"line_end":76,"column_start":5,"column_end":8},"name":"Int","qualname":"::device::attrib::Type::Int","value":"Type::Int(IntSubType, IntSize, SignFlag)","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16368,"byte_end":16373,"line_start":77,"line_end":77,"column_start":5,"column_end":10},"name":"Float","qualname":"::device::attrib::Type::Float","value":"Type::Float(FloatSubType, FloatSize)","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16404,"byte_end":16411,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Special","qualname":"::device::attrib::Type::Special","value":"Type::Special","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16317,"byte_end":16321,"line_start":75,"line_end":75,"column_start":10,"column_end":14},"name":"Type","qualname":"::device::attrib::Type","value":"Type::{Int, Float, Special}","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1357},{"krate":0,"index":1361}],"decl_id":null,"docs":" The type of an attribute.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16308,"byte_end":16414,"line_start":75,"line_end":79,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16308,"byte_end":16414,"line_start":75,"line_end":79,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16515,"byte_end":16528,"line_start":83,"line_end":83,"column_start":12,"column_end":25},"name":"is_compatible","qualname":"<Type>::is_compatible","value":"fn (&self, bt: BaseType) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Check if the attribute is compatible with a particular shader type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":17315,"byte_end":17323,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"get_size","qualname":"<Type>::get_size","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the type in bytes.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":17824,"byte_end":17830,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"Format","qualname":"::device::attrib::Format","value":"Format { elem_count, elem_type, offset, stride, instance_rate }","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401}],"decl_id":null,"docs":" Complete format of a vertex attribute.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":17813,"byte_end":18172,"line_start":115,"line_end":126,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":17813,"byte_end":18172,"line_start":115,"line_end":126,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":17879,"byte_end":17889,"line_start":117,"line_end":117,"column_start":9,"column_end":19},"name":"elem_count","qualname":"::device::attrib::Format::elem_count","value":"u8","parent":{"krate":0,"index":1396},"children":[],"decl_id":null,"docs":" Number of elements per vertex\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":17939,"byte_end":17948,"line_start":119,"line_end":119,"column_start":9,"column_end":18},"name":"elem_type","qualname":"::device::attrib::Format::elem_type","value":"device::attrib::Type","parent":{"krate":0,"index":1396},"children":[],"decl_id":null,"docs":" Type of a single element\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18008,"byte_end":18014,"line_start":121,"line_end":121,"column_start":9,"column_end":15},"name":"offset","qualname":"::device::attrib::Format::offset","value":"u32","parent":{"krate":0,"index":1396},"children":[],"decl_id":null,"docs":" Offset in bytes to the first vertex\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18085,"byte_end":18091,"line_start":123,"line_end":123,"column_start":9,"column_end":15},"name":"stride","qualname":"::device::attrib::Format::stride","value":"u8","parent":{"krate":0,"index":1396},"children":[],"decl_id":null,"docs":" Stride in bytes between consecutive vertices\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18142,"byte_end":18155,"line_start":125,"line_end":125,"column_start":9,"column_end":22},"name":"instance_rate","qualname":"::device::attrib::Format::instance_rate","value":"u8","parent":{"krate":0,"index":1396},"children":[],"decl_id":null,"docs":" Instance rate per vertex\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18280,"byte_end":18290,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"FixedPoint","qualname":"::device::attrib::FixedPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Fixed-point version of integer attributes.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18269,"byte_end":18301,"line_start":131,"line_end":131,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18393,"byte_end":18398,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"cast2","qualname":"<FixedPoint<T>>::cast2","value":"fn (a: [T; 2]) -> [FixedPoint<T>; 2]","parent":null,"children":[],"decl_id":null,"docs":" Cast a fixed-size2 array to fixed-point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18545,"byte_end":18550,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"cast3","qualname":"<FixedPoint<T>>::cast3","value":"fn (a: [T; 3]) -> [FixedPoint<T>; 3]","parent":null,"children":[],"decl_id":null,"docs":" Cast a fixed-size3 array to fixed-point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18715,"byte_end":18720,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"cast4","qualname":"<FixedPoint<T>>::cast4","value":"fn (a: [T; 4]) -> [FixedPoint<T>; 4]","parent":null,"children":[],"decl_id":null,"docs":" Cast a fixed-size4 array to fixed-point.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18963,"byte_end":18970,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"Floater","qualname":"::device::attrib::Floater","value":"","parent":null,"children":[],"decl_id":null,"docs":" Floating-point version of integer attributes.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18952,"byte_end":18981,"line_start":151,"line_end":151,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":19073,"byte_end":19078,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"cast2","qualname":"<Floater<T>>::cast2","value":"fn (a: [T; 2]) -> [Floater<T>; 2]","parent":null,"children":[],"decl_id":null,"docs":" Cast a fixed-size2 array to floating-point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":19219,"byte_end":19224,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"cast3","qualname":"<Floater<T>>::cast3","value":"fn (a: [T; 3]) -> [Floater<T>; 3]","parent":null,"children":[],"decl_id":null,"docs":" Cast a fixed-size3 array to floating-point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":19380,"byte_end":19385,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"cast4","qualname":"<Floater<T>>::cast4","value":"fn (a: [T; 4]) -> [Floater<T>; 4]","parent":null,"children":[],"decl_id":null,"docs":" Cast a fixed-size4 array to floating-point.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":19579,"byte_end":19585,"line_start":170,"line_end":170,"column_start":9,"column_end":15},"name":"format","qualname":"::device::attrib::format","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196}],"decl_id":null,"docs":" A service module for deriving `ToFormat` for primitive types.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":139},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":19949,"byte_end":19957,"line_start":181,"line_end":181,"column_start":15,"column_end":23},"name":"ToFormat","qualname":"::device::attrib::format::ToFormat","value":"ToFormat","parent":null,"children":[{"krate":0,"index":140}],"decl_id":null,"docs":" A trait for getting the format out of vertex element types.\n Needed to implement `VertexFormat` with a macro.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":19971,"byte_end":19979,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"describe","qualname":"::device::attrib::format::ToFormat::describe","value":"fn () -> (Count, Type)","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":141},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":20071,"byte_end":20077,"line_start":186,"line_end":186,"column_start":15,"column_end":21},"name":"ToType","qualname":"::device::attrib::format::ToType","value":"ToType","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" A helper trait for implementing ToFormat.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":20091,"byte_end":20099,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"describe","qualname":"::device::attrib::format::ToType::describe","value":"fn () -> Type","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":198},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"command","qualname":"::device::command","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":214},{"krate":0,"index":1479},{"krate":0,"index":1599},{"krate":0,"index":1596},{"krate":0,"index":1593},{"krate":0,"index":217},{"krate":0,"index":221}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23194,"byte_end":23217,"line_start":14,"line_end":14,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":214},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23461,"byte_end":23474,"line_start":23,"line_end":23,"column_start":12,"column_end":25},"name":"CommandBuffer","qualname":"::device::command::CommandBuffer","value":"CommandBuffer {  }","parent":null,"children":[{"krate":0,"index":216}],"decl_id":null,"docs":"Generic command buffer to be used by multiple backends\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23616,"byte_end":23627,"line_start":30,"line_end":30,"column_start":5,"column_end":16},"name":"BindProgram","qualname":"::device::command::Command::BindProgram","value":"Command::BindProgram(R::Program)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1484},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23645,"byte_end":23660,"line_start":31,"line_end":31,"column_start":5,"column_end":20},"name":"BindArrayBuffer","qualname":"::device::command::Command::BindArrayBuffer","value":"Command::BindArrayBuffer(R::ArrayBuffer)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23682,"byte_end":23695,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"name":"BindAttribute","qualname":"::device::command::Command::BindAttribute","value":"Command::BindAttribute(d::AttributeSlot, R::Buffer, d::attrib::Format)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23749,"byte_end":23758,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"name":"BindIndex","qualname":"::device::command::Command::BindIndex","value":"Command::BindIndex(R::Buffer)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23775,"byte_end":23790,"line_start":34,"line_end":34,"column_start":5,"column_end":20},"name":"BindFrameBuffer","qualname":"::device::command::Command::BindFrameBuffer","value":"Command::BindFrameBuffer(Access, R::FrameBuffer, Gamma)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23827,"byte_end":23839,"line_start":35,"line_end":35,"column_start":5,"column_end":17},"name":"UnbindTarget","qualname":"::device::command::Command::UnbindTarget","value":"Command::UnbindTarget(Access, Target)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23861,"byte_end":23878,"line_start":36,"line_end":36,"column_start":5,"column_end":22},"name":"BindTargetSurface","qualname":"::device::command::Command::BindTargetSurface","value":"Command::BindTargetSurface(Access, Target, R::Surface)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23912,"byte_end":23929,"line_start":37,"line_end":37,"column_start":5,"column_end":22},"name":"BindTargetTexture","qualname":"::device::command::Command::BindTargetTexture","value":"Command::BindTargetTexture(Access, Target, R::Texture, Level, Option<Layer>)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23985,"byte_end":24001,"line_start":38,"line_end":38,"column_start":5,"column_end":21},"name":"BindUniformBlock","qualname":"::device::command::Command::BindUniformBlock","value":"Command::BindUniformBlock(R::Program, d::UniformBufferSlot, d::UniformBlockIndex, R::Buffer)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24095,"byte_end":24106,"line_start":40,"line_end":40,"column_start":5,"column_end":16},"name":"BindUniform","qualname":"::device::command::Command::BindUniform","value":"Command::BindUniform(d::shade::Location, d::shade::UniformValue)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24156,"byte_end":24167,"line_start":41,"line_end":41,"column_start":5,"column_end":16},"name":"BindTexture","qualname":"::device::command::Command::BindTexture","value":"Command::BindTexture(d::TextureSlot, d::tex::Kind, R::Texture, Option<(R::Sampler, d::tex::SamplerInfo)>)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24274,"byte_end":24293,"line_start":43,"line_end":43,"column_start":5,"column_end":24},"name":"SetDrawColorBuffers","qualname":"::device::command::Command::SetDrawColorBuffers","value":"Command::SetDrawColorBuffers(usize)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24306,"byte_end":24323,"line_start":44,"line_end":44,"column_start":5,"column_end":22},"name":"SetPrimitiveState","qualname":"::device::command::Command::SetPrimitiveState","value":"Command::SetPrimitiveState(d::state::Primitive)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24350,"byte_end":24361,"line_start":45,"line_end":45,"column_start":5,"column_end":16},"name":"SetViewport","qualname":"::device::command::Command::SetViewport","value":"Command::SetViewport(Rect)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24373,"byte_end":24392,"line_start":46,"line_end":46,"column_start":5,"column_end":24},"name":"SetMultiSampleState","qualname":"::device::command::Command::SetMultiSampleState","value":"Command::SetMultiSampleState(Option<d::state::MultiSample>)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24429,"byte_end":24439,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"name":"SetScissor","qualname":"::device::command::Command::SetScissor","value":"Command::SetScissor(Option<Rect>)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24459,"byte_end":24479,"line_start":48,"line_end":48,"column_start":5,"column_end":25},"name":"SetDepthStencilState","qualname":"::device::command::Command::SetDepthStencilState","value":"Command::SetDepthStencilState(Option<d::state::Depth>, Option<d::state::Stencil>, d::state::CullFace)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24582,"byte_end":24595,"line_start":50,"line_end":50,"column_start":5,"column_end":18},"name":"SetBlendState","qualname":"::device::command::Command::SetBlendState","value":"Command::SetBlendState(Option<d::state::Blend>)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24626,"byte_end":24638,"line_start":51,"line_end":51,"column_start":5,"column_end":17},"name":"SetColorMask","qualname":"::device::command::Command::SetColorMask","value":"Command::SetColorMask(d::state::ColorMask)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24665,"byte_end":24677,"line_start":52,"line_end":52,"column_start":5,"column_end":17},"name":"UpdateBuffer","qualname":"::device::command::Command::UpdateBuffer","value":"Command::UpdateBuffer(R::Buffer, d::draw::DataPointer, usize)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24723,"byte_end":24736,"line_start":53,"line_end":53,"column_start":5,"column_end":18},"name":"UpdateTexture","qualname":"::device::command::Command::UpdateTexture","value":"Command::UpdateTexture(d::tex::Kind, R::Texture, d::tex::ImageInfo, d::draw::DataPointer)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24842,"byte_end":24847,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"Clear","qualname":"::device::command::Command::Clear","value":"Command::Clear(ClearData, Mask)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24870,"byte_end":24874,"line_start":57,"line_end":57,"column_start":5,"column_end":9},"name":"Draw","qualname":"::device::command::Command::Draw","value":"Command::Draw(d::PrimitiveType, d::VertexCount, d::VertexCount, d::draw::InstanceOption)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":24964,"byte_end":24975,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"DrawIndexed","qualname":"::device::command::Command::DrawIndexed","value":"Command::DrawIndexed(d::PrimitiveType, d::IndexType, d::VertexCount, d::VertexCount, d::VertexCount, d::draw::InstanceOption)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1587},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":25102,"byte_end":25106,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"name":"Blit","qualname":"::device::command::Command::Blit","value":"Command::Blit(Rect, Rect, Mirror, Mask)","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23588,"byte_end":23595,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"name":"Command","qualname":"::device::command::Command","value":"Command::{BindProgram, BindArrayBuffer, BindAttribute, BindIndex, BindFrameBuffer, UnbindTarget, BindTargetSurface, BindTargetTexture, BindUniformBlock, BindUniform, BindTexture, SetDrawColorBuffers, SetPrimitiveState, SetViewport, SetMultiSampleState, SetScissor, SetDepthStencilState, SetBlendState, SetColorMask, UpdateBuffer, UpdateTexture, Clear, Draw, DrawIndexed, Blit}","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1500},{"krate":0,"index":1504},{"krate":0,"index":1509},{"krate":0,"index":1516},{"krate":0,"index":1522},{"krate":0,"index":1526},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1558},{"krate":0,"index":1563},{"krate":0,"index":1569},{"krate":0,"index":1573},{"krate":0,"index":1579},{"krate":0,"index":1587}],"decl_id":null,"docs":"Serialized device command.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":23579,"byte_end":25135,"line_start":29,"line_end":62,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":25194,"byte_end":25198,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"iter","qualname":"<CommandBuffer<R>>::iter","value":"fn <'a> (&'a self) -> slice::Iter<'a, Command<R>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":250},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"draw","qualname":"::device::draw","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":1601},{"krate":0,"index":1611},{"krate":0,"index":1610},{"krate":0,"index":1607},{"krate":0,"index":1605},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":1613},{"krate":0,"index":1624},{"krate":0,"index":1622},{"krate":0,"index":1620},{"krate":0,"index":1618},{"krate":0,"index":1625},{"krate":0,"index":1636},{"krate":0,"index":1634},{"krate":0,"index":1632},{"krate":0,"index":1630},{"krate":0,"index":1637},{"krate":0,"index":1654},{"krate":0,"index":1652},{"krate":0,"index":1649},{"krate":0,"index":1647}],"decl_id":null,"docs":" Command Buffer device interface\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":30814,"byte_end":30825,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"DataPointer","qualname":"::device::draw::DataPointer","value":"","parent":null,"children":[],"decl_id":null,"docs":" The place of some data in the data buffer.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":30803,"byte_end":30840,"line_start":26,"line_end":26,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":259},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":30987,"byte_end":30997,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"DataBuffer","qualname":"::device::draw::DataBuffer","value":"DataBuffer {  }","parent":null,"children":[{"krate":0,"index":260}],"decl_id":null,"docs":" A buffer of data accompanying the commands. It can be vertex data, texture\n updates, uniform blocks, or even some draw states.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":31090,"byte_end":31093,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<DataBuffer>::new","value":"fn () -> DataBuffer","parent":null,"children":[],"decl_id":null,"docs":" Create a fresh new data buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":31251,"byte_end":31256,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"clear","qualname":"<DataBuffer>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all the data but retain the allocated storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":31700,"byte_end":31710,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"add_struct","qualname":"<DataBuffer>::add_struct","value":"fn <T> (&mut self, v: &T) -> DataPointer","parent":null,"children":[],"decl_id":null,"docs":" Copy a given structure into the buffer, return the offset and the size.\n","sig":null,"attributes":[{"value":"cfg(not(unstable))","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":31667,"byte_end":31688,"line_start":56,"line_end":56,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":32237,"byte_end":32244,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"add_vec","qualname":"<DataBuffer>::add_vec","value":"fn <T> (&mut self, v: &[T]) -> DataPointer","parent":null,"children":[],"decl_id":null,"docs":" Copy a given vector slice into the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":32779,"byte_end":32786,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DataBuffer>::get_ref","value":"fn (&self, data: DataPointer) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to a stored data object.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":275},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":32990,"byte_end":33004,"line_start":94,"line_end":94,"column_start":10,"column_end":24},"name":"InstanceOption","qualname":"::device::draw::InstanceOption","value":"Option<(super::InstanceCount, super::VertexCount)>","parent":null,"children":[],"decl_id":null,"docs":" Optional instance parameters\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":276},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":33245,"byte_end":33258,"line_start":99,"line_end":99,"column_start":11,"column_end":24},"name":"CommandBuffer","qualname":"::device::draw::CommandBuffer","value":"CommandBuffer<R: Resources>","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" An interface of the abstract command buffer. It collects commands in an\n efficient API-specific manner, to be ready for execution on the device.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":33212,"byte_end":33234,"line_start":98,"line_end":98,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":33311,"byte_end":33314,"line_start":101,"line_end":101,"column_start":8,"column_end":11},"name":"new","qualname":"::device::draw::CommandBuffer::new","value":"fn () -> Self","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" An empty constructor\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":33405,"byte_end":33410,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"clear","qualname":"::device::draw::CommandBuffer::clear","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Clear the command buffer contents, retain the allocated storage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":33460,"byte_end":33472,"line_start":105,"line_end":105,"column_start":8,"column_end":20},"name":"bind_program","qualname":"::device::draw::CommandBuffer::bind_program","value":"fn (&mut self, R::Program) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Bind a shader program\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":33540,"byte_end":33557,"line_start":107,"line_end":107,"column_start":8,"column_end":25},"name":"bind_array_buffer","qualname":"::device::draw::CommandBuffer::bind_array_buffer","value":"fn (&mut self, R::ArrayBuffer) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Bind an array buffer object\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":33625,"byte_end":33639,"line_start":109,"line_end":109,"column_start":8,"column_end":22},"name":"bind_attribute","qualname":"::device::draw::CommandBuffer::bind_attribute","value":"fn (&mut self, super::AttributeSlot, R::Buffer, attrib::Format) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Bind a vertex attribute\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":33737,"byte_end":33747,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"bind_index","qualname":"::device::draw::CommandBuffer::bind_index","value":"fn (&mut self, R::Buffer) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Bind an index buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":33813,"byte_end":33830,"line_start":113,"line_end":113,"column_start":8,"column_end":25},"name":"bind_frame_buffer","qualname":"::device::draw::CommandBuffer::bind_frame_buffer","value":"fn (&mut self, Access, R::FrameBuffer, Gamma) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Bind a frame buffer object\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":33939,"byte_end":33952,"line_start":115,"line_end":115,"column_start":8,"column_end":21},"name":"unbind_target","qualname":"::device::draw::CommandBuffer::unbind_target","value":"fn (&mut self, Access, Target) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Unbind any surface from the specified target slot\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":34040,"byte_end":34059,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"bind_target_surface","qualname":"::device::draw::CommandBuffer::bind_target_surface","value":"fn (&mut self, Access, Target, R::Surface) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Bind a surface to the specified target slot\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":34172,"byte_end":34191,"line_start":119,"line_end":119,"column_start":8,"column_end":27},"name":"bind_target_texture","qualname":"::device::draw::CommandBuffer::bind_target_texture","value":"fn (&mut self, Access, Target, R::Texture, target::Level, Option<target::Layer>) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Bind a level of the texture to the specified target slot\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":34333,"byte_end":34351,"line_start":122,"line_end":122,"column_start":8,"column_end":26},"name":"bind_uniform_block","qualname":"::device::draw::CommandBuffer::bind_uniform_block","value":"fn (&mut self, R::Program, super::UniformBufferSlot, super::UniformBlockIndex, R::Buffer) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Bind a uniform block\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":34549,"byte_end":34561,"line_start":126,"line_end":126,"column_start":8,"column_end":20},"name":"bind_uniform","qualname":"::device::draw::CommandBuffer::bind_uniform","value":"fn (&mut self, shade::Location, shade::UniformValue) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Bind a single uniform in the default block\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":34642,"byte_end":34654,"line_start":128,"line_end":128,"column_start":8,"column_end":20},"name":"bind_texture","qualname":"::device::draw::CommandBuffer::bind_texture","value":"fn (&mut self, super::TextureSlot, tex::Kind, R::Texture, Option<(R::Sampler, tex::SamplerInfo)>) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Bind a texture\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":34853,"byte_end":34875,"line_start":131,"line_end":131,"column_start":8,"column_end":30},"name":"set_draw_color_buffers","qualname":"::device::draw::CommandBuffer::set_draw_color_buffers","value":"fn (&mut self, usize) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Select, which color buffers are going to be targetted by the shader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":34933,"byte_end":34946,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"set_primitive","qualname":"::device::draw::CommandBuffer::set_primitive","value":"fn (&mut self, ::state::Primitive) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Set primitive topology\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":35017,"byte_end":35029,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"set_viewport","qualname":"::device::draw::CommandBuffer::set_viewport","value":"fn (&mut self, target::Rect) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Set viewport rectangle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":35096,"byte_end":35112,"line_start":137,"line_end":137,"column_start":8,"column_end":24},"name":"set_multi_sample","qualname":"::device::draw::CommandBuffer::set_multi_sample","value":"fn (&mut self, Option<::state::MultiSample>) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Set multi-sampling state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":35187,"byte_end":35198,"line_start":139,"line_end":139,"column_start":8,"column_end":19},"name":"set_scissor","qualname":"::device::draw::CommandBuffer::set_scissor","value":"fn (&mut self, Option<target::Rect>) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Set scissor test\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":35277,"byte_end":35294,"line_start":141,"line_end":141,"column_start":8,"column_end":25},"name":"set_depth_stencil","qualname":"::device::draw::CommandBuffer::set_depth_stencil","value":"fn (&mut self, Option<::state::Depth>, Option<::state::Stencil>, ::state::CullFace) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Set depth and stencil states\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":35432,"byte_end":35441,"line_start":144,"line_end":144,"column_start":8,"column_end":17},"name":"set_blend","qualname":"::device::draw::CommandBuffer::set_blend","value":"fn (&mut self, Option<::state::Blend>) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Set blend state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":35531,"byte_end":35545,"line_start":146,"line_end":146,"column_start":8,"column_end":22},"name":"set_color_mask","qualname":"::device::draw::CommandBuffer::set_color_mask","value":"fn (&mut self, ::state::ColorMask) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Set output color mask for all targets\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":35630,"byte_end":35643,"line_start":148,"line_end":148,"column_start":8,"column_end":21},"name":"update_buffer","qualname":"::device::draw::CommandBuffer::update_buffer","value":"fn (&mut self, R::Buffer, DataPointer, usize) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Update a vertex/index/uniform buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":35726,"byte_end":35740,"line_start":150,"line_end":150,"column_start":8,"column_end":22},"name":"update_texture","qualname":"::device::draw::CommandBuffer::update_texture","value":"fn (&mut self, tex::Kind, R::Texture, tex::ImageInfo, DataPointer) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Update a texture region\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":35864,"byte_end":35874,"line_start":153,"line_end":153,"column_start":8,"column_end":18},"name":"call_clear","qualname":"::device::draw::CommandBuffer::call_clear","value":"fn (&mut self, target::ClearData, target::Mask) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Clear target surfaces\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":35952,"byte_end":35961,"line_start":155,"line_end":155,"column_start":8,"column_end":17},"name":"call_draw","qualname":"::device::draw::CommandBuffer::call_draw","value":"fn (&mut self, super::PrimitiveType, super::VertexCount, super::VertexCount, InstanceOption) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Draw a primitive\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36119,"byte_end":36136,"line_start":158,"line_end":158,"column_start":8,"column_end":25},"name":"call_draw_indexed","qualname":"::device::draw::CommandBuffer::call_draw_indexed","value":"fn (&mut self, super::PrimitiveType, super::IndexType, super::VertexCount, super::VertexCount, super::VertexCount, InstanceOption) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Draw a primitive with index buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36362,"byte_end":36371,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"call_blit","qualname":"::device::draw::CommandBuffer::call_blit","value":"fn (&mut self, target::Rect, target::Rect, target::Mirror, target::Mask) -> ()","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Blit from one target to another\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36577,"byte_end":36581,"line_start":170,"line_end":170,"column_start":5,"column_end":9},"name":"Draw","qualname":"::device::draw::Access::Draw","value":"Access::Draw","parent":{"krate":0,"index":1613},"children":[],"decl_id":null,"docs":" Draw access\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36607,"byte_end":36611,"line_start":172,"line_end":172,"column_start":5,"column_end":9},"name":"Read","qualname":"::device::draw::Access::Read","value":"Access::Read","parent":{"krate":0,"index":1613},"children":[],"decl_id":null,"docs":" Read access\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36544,"byte_end":36550,"line_start":168,"line_end":168,"column_start":10,"column_end":16},"name":"Access","qualname":"::device::draw::Access","value":"Access::{Draw, Read}","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1616}],"decl_id":null,"docs":" Type of the frame buffer access.\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36482,"byte_end":36493,"line_start":166,"line_end":166,"column_start":1,"column_end":12}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36535,"byte_end":36614,"line_start":168,"line_end":173,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36790,"byte_end":36798,"line_start":180,"line_end":180,"column_start":5,"column_end":13},"name":"Original","qualname":"::device::draw::Gamma::Original","value":"Gamma::Original","parent":{"krate":0,"index":1625},"children":[],"decl_id":null,"docs":" Process in linear color space.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1628},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36841,"byte_end":36848,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Convert","qualname":"::device::draw::Gamma::Convert","value":"Gamma::Convert","parent":{"krate":0,"index":1625},"children":[],"decl_id":null,"docs":" Convert to sRGB color space.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36739,"byte_end":36744,"line_start":178,"line_end":178,"column_start":10,"column_end":15},"name":"Gamma","qualname":"::device::draw::Gamma","value":"Gamma::{Original, Convert}","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1628}],"decl_id":null,"docs":" Type of the gamma transformation for framebuffer writes.\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36677,"byte_end":36688,"line_start":176,"line_end":176,"column_start":1,"column_end":12}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":36730,"byte_end":36851,"line_start":178,"line_end":183,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":37220,"byte_end":37225,"line_start":194,"line_end":194,"column_start":5,"column_end":10},"name":"Color","qualname":"::device::draw::Target::Color","value":"Target::Color(u8)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" Color data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":37255,"byte_end":37260,"line_start":196,"line_end":196,"column_start":5,"column_end":10},"name":"Depth","qualname":"::device::draw::Target::Depth","value":"Target::Depth","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" Depth data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1643},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":37288,"byte_end":37295,"line_start":198,"line_end":198,"column_start":5,"column_end":12},"name":"Stencil","qualname":"::device::draw::Target::Stencil","value":"Target::Stencil","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" Stencil data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":37359,"byte_end":37371,"line_start":200,"line_end":200,"column_start":5,"column_end":17},"name":"DepthStencil","qualname":"::device::draw::Target::DepthStencil","value":"Target::DepthStencil","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" A target for both depth and stencil data at once.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":37080,"byte_end":37086,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"name":"Target","qualname":"::device::draw::Target","value":"Target::{Color, Depth, Stencil, DepthStencil}","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1645}],"decl_id":null,"docs":" When rendering, each \"output\" of the fragment shader goes to a specific target. A `Plane` can\n be bound to a target, causing writes to that target to affect the `Plane`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":37071,"byte_end":37374,"line_start":188,"line_end":201,"column_start":1,"column_end":2}}]},{"kind":"Mod","id":{"krate":0,"index":305},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dummy","qualname":"::device::dummy","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":1655},{"krate":0,"index":1667},{"krate":0,"index":1665},{"krate":0,"index":1663},{"krate":0,"index":1661},{"krate":0,"index":1658},{"krate":0,"index":1656},{"krate":0,"index":315},{"krate":0,"index":325},{"krate":0,"index":327}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":38249,"byte_end":38272,"line_start":14,"line_end":14,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":38477,"byte_end":38488,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"DummyDevice","qualname":"::device::dummy::DummyDevice","value":"DummyDevice {  }","parent":null,"children":[{"krate":0,"index":314}],"decl_id":null,"docs":"Dummy device which does minimal work, just to allow testing gfx-rs apps for\ncompilation.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":38585,"byte_end":38599,"line_start":25,"line_end":25,"column_start":10,"column_end":24},"name":"DummyResources","qualname":"::device::dummy::DummyResources","value":"DummyResources::{}","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":38576,"byte_end":38601,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":38576,"byte_end":38601,"line_start":25,"line_end":25,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":38942,"byte_end":38945,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<DummyDevice>::new","value":"fn (capabilities: Capabilities) -> DummyDevice","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":335},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"handle","qualname":"::device::handle","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":1668},{"krate":0,"index":1687},{"krate":0,"index":1684},{"krate":0,"index":1681},{"krate":0,"index":1677},{"krate":0,"index":1673},{"krate":0,"index":346},{"krate":0,"index":1690},{"krate":0,"index":1709},{"krate":0,"index":1705},{"krate":0,"index":1700},{"krate":0,"index":1695},{"krate":0,"index":350},{"krate":0,"index":1713},{"krate":0,"index":1728},{"krate":0,"index":1725},{"krate":0,"index":1721},{"krate":0,"index":1717},{"krate":0,"index":359},{"krate":0,"index":1731},{"krate":0,"index":1747},{"krate":0,"index":1744},{"krate":0,"index":1740},{"krate":0,"index":1736},{"krate":0,"index":362},{"krate":0,"index":1750},{"krate":0,"index":1762},{"krate":0,"index":1759},{"krate":0,"index":1755},{"krate":0,"index":366},{"krate":0,"index":1765},{"krate":0,"index":1780},{"krate":0,"index":1777},{"krate":0,"index":1773},{"krate":0,"index":1769},{"krate":0,"index":1783},{"krate":0,"index":1799},{"krate":0,"index":1796},{"krate":0,"index":1792},{"krate":0,"index":1788},{"krate":0,"index":370},{"krate":0,"index":1802},{"krate":0,"index":1818},{"krate":0,"index":1815},{"krate":0,"index":1811},{"krate":0,"index":1807},{"krate":0,"index":374},{"krate":0,"index":1821},{"krate":0,"index":1833},{"krate":0,"index":1830},{"krate":0,"index":1826},{"krate":0,"index":378},{"krate":0,"index":1836},{"krate":0,"index":1847},{"krate":0,"index":1844},{"krate":0,"index":1840},{"krate":0,"index":382},{"krate":0,"index":393},{"krate":0,"index":415},{"krate":0,"index":441}],"decl_id":null,"docs":" Device resource handles\n","sig":null,"attributes":[{"value":"deny(missing_docs, missing_copy_implementations)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40022,"byte_end":40074,"line_start":15,"line_end":15,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40343,"byte_end":40352,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"RawBuffer","qualname":"::device::handle::RawBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) Buffer Handle\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40332,"byte_end":40395,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40470,"byte_end":40478,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"get_info","qualname":"<RawBuffer<R>>::get_info","value":"fn (&self) -> &BufferInfo","parent":null,"children":[],"decl_id":null,"docs":" Get raw buffer info\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40581,"byte_end":40588,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"cmp_ref","qualname":"<RawBuffer<R>>::cmp_ref","value":"fn (&self, lhs: &RawBuffer<R>) -> cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare ethe handle by the reference (not data)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40755,"byte_end":40761,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::device::handle::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694}],"decl_id":null,"docs":" Type-safe buffer handle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40937,"byte_end":40945,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<Buffer<R, T>>::from_raw","value":"fn (handle: RawBuffer<R>) -> Buffer<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a type-safe Buffer from a RawBuffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":41137,"byte_end":41141,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"cast","qualname":"<Buffer<R, T>>::cast","value":"fn <U> (self) -> Buffer<R, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast the type this Buffer references\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":41260,"byte_end":41263,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"raw","qualname":"<Buffer<R, T>>::raw","value":"fn (&self) -> &RawBuffer<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying raw Handle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":41382,"byte_end":41390,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Buffer<R, T>>::get_info","value":"fn (&self) -> &BufferInfo","parent":null,"children":[],"decl_id":null,"docs":" Get the associated information about the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":41555,"byte_end":41558,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"len","qualname":"<Buffer<R, T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of elements in the buffer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":41810,"byte_end":41821,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"ArrayBuffer","qualname":"::device::handle::ArrayBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Array Buffer Handle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":41962,"byte_end":41969,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"cmp_ref","qualname":"<ArrayBuffer<R>>::cmp_ref","value":"fn (&self, lhs: &ArrayBuffer<R>) -> cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare ethe handle by the reference (not data)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42128,"byte_end":42134,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"Shader","qualname":"::device::handle::Shader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shader Handle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42248,"byte_end":42257,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"get_stage","qualname":"<Shader<R>>::get_stage","value":"fn (&self) -> &shade::Stage","parent":null,"children":[],"decl_id":null,"docs":" Get shader stage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42362,"byte_end":42369,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"cmp_ref","qualname":"<Shader<R>>::cmp_ref","value":"fn (&self, lhs: &Shader<R>) -> cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare ethe handle by the reference (not data)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42518,"byte_end":42525,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"Program","qualname":"::device::handle::Program","value":"","parent":null,"children":[],"decl_id":null,"docs":" Program Handle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42647,"byte_end":42655,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Program<R>>::get_info","value":"fn (&self) -> &shade::ProgramInfo","parent":null,"children":[],"decl_id":null,"docs":" Get program info\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42766,"byte_end":42773,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"cmp_ref","qualname":"<Program<R>>::cmp_ref","value":"fn (&self, lhs: &Program<R>) -> cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare ethe handle by the reference (not data)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1765},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42934,"byte_end":42945,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"FrameBuffer","qualname":"::device::handle::FrameBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Frame Buffer Handle\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1783},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43054,"byte_end":43061,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"Surface","qualname":"::device::handle::Surface","value":"","parent":null,"children":[],"decl_id":null,"docs":" Surface Handle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43181,"byte_end":43189,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Surface<R>>::get_info","value":"fn (&self) -> &tex::SurfaceInfo","parent":null,"children":[],"decl_id":null,"docs":" Get surface info\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43298,"byte_end":43305,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"cmp_ref","qualname":"<Surface<R>>::cmp_ref","value":"fn (&self, lhs: &Surface<R>) -> cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare ethe handle by the reference (not data)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43461,"byte_end":43468,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"Texture","qualname":"::device::handle::Texture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Texture Handle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43588,"byte_end":43596,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Texture<R>>::get_info","value":"fn (&self) -> &tex::TextureInfo","parent":null,"children":[],"decl_id":null,"docs":" Get texture info\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43705,"byte_end":43712,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"cmp_ref","qualname":"<Texture<R>>::cmp_ref","value":"fn (&self, lhs: &Texture<R>) -> cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare ethe handle by the reference (not data)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43862,"byte_end":43869,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::device::handle::Sampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sampler Handle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43989,"byte_end":43997,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Sampler<R>>::get_info","value":"fn (&self) -> &tex::SamplerInfo","parent":null,"children":[],"decl_id":null,"docs":" Get sampler info\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":44106,"byte_end":44113,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"cmp_ref","qualname":"<Sampler<R>>::cmp_ref","value":"fn (&self, lhs: &Sampler<R>) -> cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare ethe handle by the reference (not data)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":44261,"byte_end":44266,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"Fence","qualname":"::device::handle::Fence","value":"","parent":null,"children":[],"decl_id":null,"docs":" Fence Handle\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":44581,"byte_end":44588,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"Manager","qualname":"::device::handle::Manager","value":"Manager {  }","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"decl_id":null,"docs":" Stores reference-counted resources used in a command buffer.\n Seals actual resource names behind the interface, automatically\n referencing them both by the Factory on resource creation\n and the Renderer during CommandBuffer population.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":44547,"byte_end":44569,"line_start":174,"line_end":174,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45073,"byte_end":45081,"line_start":189,"line_end":189,"column_start":11,"column_end":19},"name":"Producer","qualname":"::device::handle::Producer","value":"Producer<R: Resources>","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"decl_id":null,"docs":" A service trait to be used by the device implementation\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45040,"byte_end":45062,"line_start":188,"line_end":188,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45105,"byte_end":45116,"line_start":190,"line_end":190,"column_start":8,"column_end":19},"name":"make_buffer","qualname":"::device::handle::Producer::make_buffer","value":"fn (&mut self, R::Buffer, BufferInfo) -> RawBuffer<R>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45175,"byte_end":45192,"line_start":191,"line_end":191,"column_start":8,"column_end":25},"name":"make_array_buffer","qualname":"::device::handle::Producer::make_array_buffer","value":"fn (&mut self, R::ArrayBuffer) -> ArrayBuffer<R>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45246,"byte_end":45257,"line_start":192,"line_end":192,"column_start":8,"column_end":19},"name":"make_shader","qualname":"::device::handle::Producer::make_shader","value":"fn (&mut self, R::Shader, shade::Stage) -> Shader<R>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45315,"byte_end":45327,"line_start":193,"line_end":193,"column_start":8,"column_end":20},"name":"make_program","qualname":"::device::handle::Producer::make_program","value":"fn (&mut self, R::Program, shade::ProgramInfo) -> Program<R>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45393,"byte_end":45410,"line_start":194,"line_end":194,"column_start":8,"column_end":25},"name":"make_frame_buffer","qualname":"::device::handle::Producer::make_frame_buffer","value":"fn (&mut self, R::FrameBuffer) -> FrameBuffer<R>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45464,"byte_end":45476,"line_start":195,"line_end":195,"column_start":8,"column_end":20},"name":"make_surface","qualname":"::device::handle::Producer::make_surface","value":"fn (&mut self, R::Surface, tex::SurfaceInfo) -> Surface<R>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45540,"byte_end":45552,"line_start":196,"line_end":196,"column_start":8,"column_end":20},"name":"make_texture","qualname":"::device::handle::Producer::make_texture","value":"fn (&mut self, R::Texture, tex::TextureInfo) -> Texture<R>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45616,"byte_end":45628,"line_start":197,"line_end":197,"column_start":8,"column_end":20},"name":"make_sampler","qualname":"::device::handle::Producer::make_sampler","value":"fn (&mut self, R::Sampler, tex::SamplerInfo) -> Sampler<R>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45692,"byte_end":45702,"line_start":198,"line_end":198,"column_start":8,"column_end":18},"name":"make_fence","qualname":"::device::handle::Producer::make_fence","value":"fn (&mut self, name: R::Fence) -> Fence<R>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":45905,"byte_end":45915,"line_start":202,"line_end":202,"column_start":8,"column_end":18},"name":"clean_with","qualname":"::device::handle::Producer::clean_with","value":"fn <T, F1, F2, F3, F4, F5, F6, F7, F8, F9> (&mut self, &mut T, F1, F2, F3, F4, F5, F6, F7, F8, F9) -> ()","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Walk through all the handles, keep ones that are reference elsewhere\n and call the provided delete function (resource-specific) for others\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":49713,"byte_end":49716,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"new","qualname":"<Manager<R>>::new","value":"fn () -> Manager<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new handle manager\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":50120,"byte_end":50125,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"clear","qualname":"<Manager<R>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all references\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":50473,"byte_end":50479,"line_start":335,"line_end":335,"column_start":12,"column_end":18},"name":"extend","qualname":"<Manager<R>>::extend","value":"fn (&mut self, other: &Manager<R>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extend with all references of another handle manager\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":51241,"byte_end":51246,"line_start":346,"line_end":346,"column_start":12,"column_end":17},"name":"count","qualname":"<Manager<R>>::count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count the total number of referenced resources\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":51555,"byte_end":51565,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"ref_buffer","qualname":"<Manager<R>>::ref_buffer","value":"fn (&mut self, handle: &RawBuffer<R>) -> R::Buffer","parent":null,"children":[],"decl_id":null,"docs":" Reference a buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":51737,"byte_end":51753,"line_start":362,"line_end":362,"column_start":12,"column_end":28},"name":"ref_array_buffer","qualname":"<Manager<R>>::ref_array_buffer","value":"fn (&mut self, handle: &ArrayBuffer<R>) -> R::ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Reference am array buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":51931,"byte_end":51941,"line_start":367,"line_end":367,"column_start":12,"column_end":22},"name":"ref_shader","qualname":"<Manager<R>>::ref_shader","value":"fn (&mut self, handle: &Shader<R>) -> R::Shader","parent":null,"children":[],"decl_id":null,"docs":" Reference a shader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":52104,"byte_end":52115,"line_start":372,"line_end":372,"column_start":12,"column_end":23},"name":"ref_program","qualname":"<Manager<R>>::ref_program","value":"fn (&mut self, handle: &Program<R>) -> R::Program","parent":null,"children":[],"decl_id":null,"docs":" Reference a program\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":52286,"byte_end":52302,"line_start":377,"line_end":377,"column_start":12,"column_end":28},"name":"ref_frame_buffer","qualname":"<Manager<R>>::ref_frame_buffer","value":"fn (&mut self, handle: &FrameBuffer<R>) -> R::FrameBuffer","parent":null,"children":[],"decl_id":null,"docs":" Reference a frame buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":52481,"byte_end":52492,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"ref_surface","qualname":"<Manager<R>>::ref_surface","value":"fn (&mut self, handle: &Surface<R>) -> R::Surface","parent":null,"children":[],"decl_id":null,"docs":" Reference a surface\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":52658,"byte_end":52669,"line_start":387,"line_end":387,"column_start":12,"column_end":23},"name":"ref_texture","qualname":"<Manager<R>>::ref_texture","value":"fn (&mut self, handle: &Texture<R>) -> R::Texture","parent":null,"children":[],"decl_id":null,"docs":" Reference a texture\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":52835,"byte_end":52846,"line_start":392,"line_end":392,"column_start":12,"column_end":23},"name":"ref_sampler","qualname":"<Manager<R>>::ref_sampler","value":"fn (&mut self, handle: &Sampler<R>) -> R::Sampler","parent":null,"children":[],"decl_id":null,"docs":" Reference a sampler\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":53011,"byte_end":53020,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"ref_fence","qualname":"<Manager<R>>::ref_fence","value":"fn (&mut self, fence: &Fence<R>) -> R::Fence","parent":null,"children":[],"decl_id":null,"docs":" Reference a fence\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":464},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mapping","qualname":"::device::mapping","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":479},{"krate":0,"index":488},{"krate":0,"index":495},{"krate":0,"index":501},{"krate":0,"index":510},{"krate":0,"index":516},{"krate":0,"index":522},{"krate":0,"index":531},{"krate":0,"index":538},{"krate":0,"index":544},{"krate":0,"index":550},{"krate":0,"index":560}],"decl_id":null,"docs":" Memory mapping\n","sig":null,"attributes":[{"value":"deny(missing_docs, missing_copy_implementations)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":53741,"byte_end":53793,"line_start":15,"line_end":15,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":472},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":53965,"byte_end":53968,"line_start":24,"line_end":24,"column_start":11,"column_end":14},"name":"Raw","qualname":"::device::mapping::Raw","value":"Raw","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477}],"decl_id":null,"docs":" Unsafe operations for a buffer mapping\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":54050,"byte_end":54053,"line_start":26,"line_end":26,"column_start":15,"column_end":18},"name":"set","qualname":"::device::mapping::Raw::set","value":"fn <T> (&self, index: usize, val: T) -> ()","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Set the element at `index` to `val`. Not bounds-checked.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":54150,"byte_end":54158,"line_start":28,"line_end":28,"column_start":15,"column_end":23},"name":"to_slice","qualname":"::device::mapping::Raw::to_slice","value":"fn <T> (&self, len: usize) -> &[T]","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Returns a slice of the specified length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":54261,"byte_end":54273,"line_start":30,"line_end":30,"column_start":15,"column_end":27},"name":"to_mut_slice","qualname":"::device::mapping::Raw::to_mut_slice","value":"fn <T> (&self, len: usize) -> &mut [T]","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Returns a mutable slice of the specified length.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":54376,"byte_end":54384,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"Readable","qualname":"::device::mapping::Readable","value":"Readable {  }","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487}],"decl_id":null,"docs":" A handle to a readable map, which can be sliced.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":501},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":55049,"byte_end":55057,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"Writable","qualname":"::device::mapping::Writable","value":"Writable {  }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"decl_id":null,"docs":" A handle to a writable map, which only allows setting elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":55369,"byte_end":55372,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"set","qualname":"<Writable>::set","value":"fn (&mut self, idx: usize, val: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a value in the buffer\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":55856,"byte_end":55858,"line_start":92,"line_end":92,"column_start":12,"column_end":14},"name":"RW","qualname":"::device::mapping::RW","value":"RW {  }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"decl_id":null,"docs":" A handle to a complete readable/writable map, which can be sliced both ways.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":550},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56781,"byte_end":56788,"line_start":130,"line_end":130,"column_start":11,"column_end":18},"name":"Builder","qualname":"::device::mapping::Builder","value":"Builder<'a, R: Resources>","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558}],"decl_id":null,"docs":" A service trait with methods for mapping already implemented.\n To be used by device back ends.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56748,"byte_end":56770,"line_start":129,"line_end":129,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":553},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56818,"byte_end":56828,"line_start":131,"line_end":131,"column_start":10,"column_end":20},"name":"RawMapping","qualname":"::device::mapping::Builder::RawMapping","value":"type RawMapping: Raw;","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56843,"byte_end":56855,"line_start":133,"line_end":133,"column_start":8,"column_end":20},"name":"map_readable","qualname":"::device::mapping::Builder::map_readable","value":"fn <T> (&'a mut self, Self::RawMapping, usize) -> Readable<T, R, Self>","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56975,"byte_end":56987,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"map_writable","qualname":"::device::mapping::Builder::map_writable","value":"fn <T> (&'a mut self, Self::RawMapping, usize) -> Writable<T, R, Self>","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":57107,"byte_end":57121,"line_start":137,"line_end":137,"column_start":8,"column_end":22},"name":"map_read_write","qualname":"::device::mapping::Builder::map_read_write","value":"fn <T> (&'a mut self, Self::RawMapping, usize) -> RW<T, R, Self>","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":571},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shade","qualname":"::device::shade","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":1850},{"krate":0,"index":1861},{"krate":0,"index":1859},{"krate":0,"index":1857},{"krate":0,"index":1855},{"krate":0,"index":1862},{"krate":0,"index":1873},{"krate":0,"index":1871},{"krate":0,"index":1869},{"krate":0,"index":1867},{"krate":0,"index":1874},{"krate":0,"index":1885},{"krate":0,"index":1883},{"krate":0,"index":1881},{"krate":0,"index":1879},{"krate":0,"index":1886},{"krate":0,"index":1897},{"krate":0,"index":1895},{"krate":0,"index":1893},{"krate":0,"index":1891},{"krate":0,"index":1898},{"krate":0,"index":1909},{"krate":0,"index":1907},{"krate":0,"index":1905},{"krate":0,"index":1903},{"krate":0,"index":1910},{"krate":0,"index":1935},{"krate":0,"index":1933},{"krate":0,"index":1930},{"krate":0,"index":1928},{"krate":0,"index":1936},{"krate":0,"index":1953},{"krate":0,"index":1951},{"krate":0,"index":1949},{"krate":0,"index":1947},{"krate":0,"index":1954},{"krate":0,"index":1972},{"krate":0,"index":1970},{"krate":0,"index":1967},{"krate":0,"index":1965},{"krate":0,"index":1973},{"krate":0,"index":1989},{"krate":0,"index":1987},{"krate":0,"index":1985},{"krate":0,"index":1982},{"krate":0,"index":1980},{"krate":0,"index":574},{"krate":0,"index":1990},{"krate":0,"index":2036},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":2037},{"krate":0,"index":2048},{"krate":0,"index":2045},{"krate":0,"index":2043},{"krate":0,"index":2050},{"krate":0,"index":2061},{"krate":0,"index":2058},{"krate":0,"index":2056},{"krate":0,"index":2063},{"krate":0,"index":2072},{"krate":0,"index":2069},{"krate":0,"index":2067},{"krate":0,"index":2074},{"krate":0,"index":2084},{"krate":0,"index":2081},{"krate":0,"index":2079},{"krate":0,"index":2086},{"krate":0,"index":2096},{"krate":0,"index":2093},{"krate":0,"index":2091},{"krate":0,"index":2098},{"krate":0,"index":2108},{"krate":0,"index":2107},{"krate":0,"index":2105},{"krate":0,"index":581},{"krate":0,"index":2110},{"krate":0,"index":2121},{"krate":0,"index":2118},{"krate":0,"index":2116},{"krate":0,"index":2123},{"krate":0,"index":2135},{"krate":0,"index":2132},{"krate":0,"index":2130},{"krate":0,"index":2137},{"krate":0,"index":2156},{"krate":0,"index":2154},{"krate":0,"index":2152},{"krate":0,"index":2150},{"krate":0,"index":2148},{"krate":0,"index":583}],"decl_id":null,"docs":" Shader handling.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":58765,"byte_end":58788,"line_start":17,"line_end":17,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":573},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":58969,"byte_end":58978,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"name":"Dimension","qualname":"::device::shade::Dimension","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of components in a container type (vectors/matrices)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1851},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59096,"byte_end":59101,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"name":"Array","qualname":"::device::shade::IsArray::Array","value":"IsArray::Array","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1853},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59103,"byte_end":59110,"line_start":29,"line_end":29,"column_start":27,"column_end":34},"name":"NoArray","qualname":"::device::shade::IsArray::NoArray","value":"IsArray::NoArray","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59086,"byte_end":59093,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"name":"IsArray","qualname":"::device::shade::IsArray","value":"IsArray::{Array, NoArray}","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1853}],"decl_id":null,"docs":" Whether the sampler samples an array texture.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59077,"byte_end":59112,"line_start":29,"line_end":29,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59258,"byte_end":59264,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"name":"Shadow","qualname":"::device::shade::IsShadow::Shadow","value":"IsShadow::Shadow","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59266,"byte_end":59274,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"name":"NoShadow","qualname":"::device::shade::IsShadow::NoShadow","value":"IsShadow::NoShadow","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59247,"byte_end":59255,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"name":"IsShadow","qualname":"::device::shade::IsShadow","value":"IsShadow::{Shadow, NoShadow}","parent":null,"children":[{"krate":0,"index":1863},{"krate":0,"index":1865}],"decl_id":null,"docs":" Whether the sampler samples a shadow texture (texture with a depth comparison)\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59238,"byte_end":59276,"line_start":33,"line_end":33,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59399,"byte_end":59410,"line_start":37,"line_end":37,"column_start":26,"column_end":37},"name":"MultiSample","qualname":"::device::shade::IsMultiSample::MultiSample","value":"IsMultiSample::MultiSample","parent":{"krate":0,"index":1874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59412,"byte_end":59425,"line_start":37,"line_end":37,"column_start":39,"column_end":52},"name":"NoMultiSample","qualname":"::device::shade::IsMultiSample::NoMultiSample","value":"IsMultiSample::NoMultiSample","parent":{"krate":0,"index":1874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59383,"byte_end":59396,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"name":"IsMultiSample","qualname":"::device::shade::IsMultiSample","value":"IsMultiSample::{MultiSample, NoMultiSample}","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1877}],"decl_id":null,"docs":" Whether the sampler samples a multisample texture.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59374,"byte_end":59427,"line_start":37,"line_end":37,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1887},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59697,"byte_end":59701,"line_start":44,"line_end":44,"column_start":19,"column_end":23},"name":"Rect","qualname":"::device::shade::IsRect::Rect","value":"IsRect::Rect","parent":{"krate":0,"index":1886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59703,"byte_end":59709,"line_start":44,"line_end":44,"column_start":25,"column_end":31},"name":"NoRect","qualname":"::device::shade::IsRect::NoRect","value":"IsRect::NoRect","parent":{"krate":0,"index":1886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59688,"byte_end":59694,"line_start":44,"line_end":44,"column_start":10,"column_end":16},"name":"IsRect","qualname":"::device::shade::IsRect","value":"IsRect::{Rect, NoRect}","parent":null,"children":[{"krate":0,"index":1887},{"krate":0,"index":1889}],"decl_id":null,"docs":" Whether the sampler samples a rectangle texture.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59679,"byte_end":59711,"line_start":44,"line_end":44,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59825,"byte_end":59836,"line_start":48,"line_end":48,"column_start":25,"column_end":36},"name":"ColumnMajor","qualname":"::device::shade::MatrixFormat::ColumnMajor","value":"MatrixFormat::ColumnMajor","parent":{"krate":0,"index":1898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59838,"byte_end":59846,"line_start":48,"line_end":48,"column_start":38,"column_end":46},"name":"RowMajor","qualname":"::device::shade::MatrixFormat::RowMajor","value":"MatrixFormat::RowMajor","parent":{"krate":0,"index":1898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1898},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59810,"byte_end":59822,"line_start":48,"line_end":48,"column_start":10,"column_end":22},"name":"MatrixFormat","qualname":"::device::shade::MatrixFormat","value":"MatrixFormat::{ColumnMajor, RowMajor}","parent":null,"children":[{"krate":0,"index":1899},{"krate":0,"index":1901}],"decl_id":null,"docs":" Whether the matrix is column or row major.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":59801,"byte_end":59848,"line_start":48,"line_end":48,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1911},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60066,"byte_end":60079,"line_start":56,"line_end":56,"column_start":5,"column_end":18},"name":"SamplerBuffer","qualname":"::device::shade::SamplerType::SamplerBuffer","value":"SamplerType::SamplerBuffer","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":" Sample from a buffer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60118,"byte_end":60127,"line_start":58,"line_end":58,"column_start":5,"column_end":14},"name":"Sampler1D","qualname":"::device::shade::SamplerType::Sampler1D","value":"SamplerType::Sampler1D(IsArray, IsShadow)","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":" Sample from a 1D texture\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1917},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60185,"byte_end":60194,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"name":"Sampler2D","qualname":"::device::shade::SamplerType::Sampler2D","value":"SamplerType::Sampler2D(IsArray, IsShadow, IsMultiSample, IsRect)","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":" Sample from a 2D texture\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60275,"byte_end":60284,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"name":"Sampler3D","qualname":"::device::shade::SamplerType::Sampler3D","value":"SamplerType::Sampler3D","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":" Sample from a 3D texture\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60321,"byte_end":60332,"line_start":64,"line_end":64,"column_start":5,"column_end":16},"name":"SamplerCube","qualname":"::device::shade::SamplerType::SamplerCube","value":"SamplerType::SamplerCube(IsShadow)","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":" Sample from a cubemap.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60018,"byte_end":60029,"line_start":54,"line_end":54,"column_start":10,"column_end":21},"name":"SamplerType","qualname":"::device::shade::SamplerType","value":"SamplerType::{SamplerBuffer, Sampler1D, Sampler2D, Sampler3D, SamplerCube}","parent":null,"children":[{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1917},{"krate":0,"index":1923},{"krate":0,"index":1925}],"decl_id":null,"docs":" What texture type this sampler samples from.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60009,"byte_end":60345,"line_start":54,"line_end":65,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60475,"byte_end":60478,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"F32","qualname":"::device::shade::BaseType::F32","value":"BaseType::F32","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1939},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60484,"byte_end":60487,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"F64","qualname":"::device::shade::BaseType::F64","value":"BaseType::F64","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1941},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60493,"byte_end":60496,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"I32","qualname":"::device::shade::BaseType::I32","value":"BaseType::I32","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60502,"byte_end":60505,"line_start":74,"line_end":74,"column_start":5,"column_end":8},"name":"U32","qualname":"::device::shade::BaseType::U32","value":"BaseType::U32","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1945},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60511,"byte_end":60515,"line_start":75,"line_end":75,"column_start":5,"column_end":9},"name":"Bool","qualname":"::device::shade::BaseType::Bool","value":"BaseType::Bool","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1936},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60460,"byte_end":60468,"line_start":70,"line_end":70,"column_start":10,"column_end":18},"name":"BaseType","qualname":"::device::shade::BaseType","value":"BaseType::{F32, F64, I32, U32, Bool}","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945}],"decl_id":null,"docs":" Base type of this shader parameter.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60387,"byte_end":60409,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60451,"byte_end":60518,"line_start":70,"line_end":76,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60663,"byte_end":60669,"line_start":82,"line_end":82,"column_start":5,"column_end":11},"name":"Single","qualname":"::device::shade::ContainerType::Single","value":"ContainerType::Single","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Scalar value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60721,"byte_end":60727,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"Vector","qualname":"::device::shade::ContainerType::Vector","value":"ContainerType::Vector(Dimension)","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" A vector with `Dimension` components.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1960},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60762,"byte_end":60768,"line_start":86,"line_end":86,"column_start":5,"column_end":11},"name":"Matrix","qualname":"::device::shade::ContainerType::Matrix","value":"ContainerType::Matrix(MatrixFormat, Dimension, Dimension)","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" A matrix.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1954},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60622,"byte_end":60635,"line_start":80,"line_end":80,"column_start":10,"column_end":23},"name":"ContainerType","qualname":"::device::shade::ContainerType","value":"ContainerType::{Single, Vector, Matrix}","parent":null,"children":[{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1960}],"decl_id":null,"docs":" Number of components this parameter represents.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60613,"byte_end":60807,"line_start":80,"line_end":87,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60987,"byte_end":60993,"line_start":96,"line_end":96,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::device::shade::Stage::Vertex","value":"Stage::Vertex","parent":{"krate":0,"index":1973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1976},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60999,"byte_end":61007,"line_start":97,"line_end":97,"column_start":5,"column_end":13},"name":"Geometry","qualname":"::device::shade::Stage::Geometry","value":"Stage::Geometry","parent":{"krate":0,"index":1973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1978},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61013,"byte_end":61021,"line_start":98,"line_end":98,"column_start":5,"column_end":13},"name":"Fragment","qualname":"::device::shade::Stage::Fragment","value":"Stage::Fragment","parent":{"krate":0,"index":1973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1973},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60975,"byte_end":60980,"line_start":95,"line_end":95,"column_start":10,"column_end":15},"name":"Stage","qualname":"::device::shade::Stage","value":"Stage::{Vertex, Geometry, Fragment}","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":1978}],"decl_id":null,"docs":" Which program stage this shader represents.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60884,"byte_end":60906,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60954,"byte_end":60965,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":60966,"byte_end":61024,"line_start":95,"line_end":99,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":574},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61107,"byte_end":61115,"line_start":104,"line_end":104,"column_start":10,"column_end":18},"name":"Location","qualname":"::device::shade::Location","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Location of a parameter in the program.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61300,"byte_end":61303,"line_start":111,"line_end":111,"column_start":5,"column_end":8},"name":"I32","qualname":"::device::shade::UniformValue::I32","value":"UniformValue::I32(i32)","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61314,"byte_end":61317,"line_start":112,"line_end":112,"column_start":5,"column_end":8},"name":"F32","qualname":"::device::shade::UniformValue::F32","value":"UniformValue::F32(f32)","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61329,"byte_end":61339,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"I32Vector2","qualname":"::device::shade::UniformValue::I32Vector2","value":"UniformValue::I32Vector2([i32; 2])","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61355,"byte_end":61365,"line_start":115,"line_end":115,"column_start":5,"column_end":15},"name":"I32Vector3","qualname":"::device::shade::UniformValue::I32Vector3","value":"UniformValue::I32Vector3([i32; 3])","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61381,"byte_end":61391,"line_start":116,"line_end":116,"column_start":5,"column_end":15},"name":"I32Vector4","qualname":"::device::shade::UniformValue::I32Vector4","value":"UniformValue::I32Vector4([i32; 4])","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61408,"byte_end":61418,"line_start":118,"line_end":118,"column_start":5,"column_end":15},"name":"F32Vector2","qualname":"::device::shade::UniformValue::F32Vector2","value":"UniformValue::F32Vector2([f32; 2])","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61434,"byte_end":61444,"line_start":119,"line_end":119,"column_start":5,"column_end":15},"name":"F32Vector3","qualname":"::device::shade::UniformValue::F32Vector3","value":"UniformValue::F32Vector3([f32; 3])","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2017},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61460,"byte_end":61470,"line_start":120,"line_end":120,"column_start":5,"column_end":15},"name":"F32Vector4","qualname":"::device::shade::UniformValue::F32Vector4","value":"UniformValue::F32Vector4([f32; 4])","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2021},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61487,"byte_end":61497,"line_start":122,"line_end":122,"column_start":5,"column_end":15},"name":"F32Matrix2","qualname":"::device::shade::UniformValue::F32Matrix2","value":"UniformValue::F32Matrix2([[f32; 2]; 2])","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61518,"byte_end":61528,"line_start":123,"line_end":123,"column_start":5,"column_end":15},"name":"F32Matrix3","qualname":"::device::shade::UniformValue::F32Matrix3","value":"UniformValue::F32Matrix3([[f32; 3]; 3])","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61549,"byte_end":61559,"line_start":124,"line_end":124,"column_start":5,"column_end":15},"name":"F32Matrix4","qualname":"::device::shade::UniformValue::F32Matrix4","value":"UniformValue::F32Matrix4([[f32; 4]; 4])","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61281,"byte_end":61293,"line_start":110,"line_end":110,"column_start":10,"column_end":22},"name":"UniformValue","qualname":"::device::shade::UniformValue","value":"UniformValue::{I32, F32, I32Vector2, I32Vector3, I32Vector4, F32Vector2, F32Vector3, F32Vector4, F32Matrix2, F32Matrix3, F32Matrix4}","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1994},{"krate":0,"index":1997},{"krate":0,"index":2001},{"krate":0,"index":2005},{"krate":0,"index":2009},{"krate":0,"index":2013},{"krate":0,"index":2017},{"krate":0,"index":2021},{"krate":0,"index":2026},{"krate":0,"index":2031}],"decl_id":null,"docs":" A value that can be uploaded to the device as a uniform.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61233,"byte_end":61255,"line_start":108,"line_end":108,"column_start":1,"column_end":23}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61272,"byte_end":61577,"line_start":110,"line_end":125,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61666,"byte_end":61678,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"is_same_type","qualname":"<UniformValue>::is_same_type","value":"fn (&self, other: &UniformValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether two `UniformValue`s have the same type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":65249,"byte_end":65258,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::device::shade::Attribute","value":"Attribute { name, location, count, base_type, container }","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042}],"decl_id":null,"docs":" Vertex information that a shader takes as input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":65301,"byte_end":65305,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"name":"name","qualname":"::device::shade::Attribute::name","value":"std::string::String","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":" Name of this attribute.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":65357,"byte_end":65365,"line_start":217,"line_end":217,"column_start":9,"column_end":17},"name":"location","qualname":"::device::shade::Attribute::location","value":"usize","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":" Vertex attribute binding.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":65436,"byte_end":65441,"line_start":219,"line_end":219,"column_start":9,"column_end":14},"name":"count","qualname":"::device::shade::Attribute::count","value":"usize","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":" Number of elements this attribute represents.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":65507,"byte_end":65516,"line_start":221,"line_end":221,"column_start":9,"column_end":18},"name":"base_type","qualname":"::device::shade::Attribute::base_type","value":"device::shade::BaseType","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":" Type that this attribute is composed of.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":65576,"byte_end":65585,"line_start":223,"line_end":223,"column_start":9,"column_end":18},"name":"container","qualname":"::device::shade::Attribute::container","value":"device::shade::ContainerType","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":" \"Scalarness\" of this attribute.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2050},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":65732,"byte_end":65742,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"UniformVar","qualname":"::device::shade::UniformVar","value":"UniformVar { name, location, count, base_type, container }","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055}],"decl_id":null,"docs":" Uniform, a type of shader parameter representing data passed to the program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2051},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":65783,"byte_end":65787,"line_start":230,"line_end":230,"column_start":9,"column_end":13},"name":"name","qualname":"::device::shade::UniformVar::name","value":"std::string::String","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" Name of this uniform.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2052},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":65854,"byte_end":65862,"line_start":232,"line_end":232,"column_start":9,"column_end":17},"name":"location","qualname":"::device::shade::UniformVar::location","value":"usize","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" Location of this uniform in the program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":65934,"byte_end":65939,"line_start":234,"line_end":234,"column_start":9,"column_end":14},"name":"count","qualname":"::device::shade::UniformVar::count","value":"usize","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" Number of elements this uniform represents.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2054},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66002,"byte_end":66011,"line_start":236,"line_end":236,"column_start":9,"column_end":18},"name":"base_type","qualname":"::device::shade::UniformVar::base_type","value":"device::shade::BaseType","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" Type that this uniform is composed of\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66069,"byte_end":66078,"line_start":238,"line_end":238,"column_start":9,"column_end":18},"name":"container","qualname":"::device::shade::UniformVar::container","value":"device::shade::ContainerType","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" \"Scalarness\" of this uniform.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66165,"byte_end":66173,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"BlockVar","qualname":"::device::shade::BlockVar","value":"BlockVar { name, size, usage }","parent":null,"children":[{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066}],"decl_id":null,"docs":" A uniform block.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66220,"byte_end":66224,"line_start":245,"line_end":245,"column_start":9,"column_end":13},"name":"name","qualname":"::device::shade::BlockVar::name","value":"std::string::String","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":" Name of this uniform block.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66296,"byte_end":66300,"line_start":247,"line_end":247,"column_start":9,"column_end":13},"name":"size","qualname":"::device::shade::BlockVar::size","value":"usize","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":" Size (in bytes) of this uniform block's data.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66393,"byte_end":66398,"line_start":249,"line_end":249,"column_start":9,"column_end":14},"name":"usage","qualname":"::device::shade::BlockVar::usage","value":"u8","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":" What program stage this uniform block can be used in, as a bitflag.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66537,"byte_end":66547,"line_start":254,"line_end":254,"column_start":12,"column_end":22},"name":"SamplerVar","qualname":"::device::shade::SamplerVar","value":"SamplerVar { name, location, base_type, sampler_type }","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078}],"decl_id":null,"docs":" Sampler, a type of shader parameter representing a texture that can be sampled.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66597,"byte_end":66601,"line_start":256,"line_end":256,"column_start":9,"column_end":13},"name":"name","qualname":"::device::shade::SamplerVar::name","value":"std::string::String","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Name of this sampler variable.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2076},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66668,"byte_end":66676,"line_start":258,"line_end":258,"column_start":9,"column_end":17},"name":"location","qualname":"::device::shade::SamplerVar::location","value":"usize","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Location of this sampler in the program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66731,"byte_end":66740,"line_start":260,"line_end":260,"column_start":9,"column_end":18},"name":"base_type","qualname":"::device::shade::SamplerVar::base_type","value":"device::shade::BaseType","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Base type for the sampler.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66790,"byte_end":66802,"line_start":262,"line_end":262,"column_start":9,"column_end":21},"name":"sampler_type","qualname":"::device::shade::SamplerVar::sampler_type","value":"device::shade::SamplerType","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Type of this sampler.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66896,"byte_end":66907,"line_start":267,"line_end":267,"column_start":12,"column_end":23},"name":"ProgramInfo","qualname":"::device::shade::ProgramInfo","value":"ProgramInfo { attributes, uniforms, blocks, textures }","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090}],"decl_id":null,"docs":" Metadata about a program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":66953,"byte_end":66963,"line_start":269,"line_end":269,"column_start":9,"column_end":19},"name":"attributes","qualname":"::device::shade::ProgramInfo::attributes","value":"std::vec::Vec<device::shade::Attribute>","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" Attributes in the program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67021,"byte_end":67029,"line_start":271,"line_end":271,"column_start":9,"column_end":17},"name":"uniforms","qualname":"::device::shade::ProgramInfo::uniforms","value":"std::vec::Vec<device::shade::UniformVar>","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" Uniforms in the program\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67094,"byte_end":67100,"line_start":273,"line_end":273,"column_start":9,"column_end":15},"name":"blocks","qualname":"::device::shade::ProgramInfo::blocks","value":"std::vec::Vec<device::shade::BlockVar>","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" Uniform blocks in the program\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67157,"byte_end":67165,"line_start":275,"line_end":275,"column_start":9,"column_end":17},"name":"textures","qualname":"::device::shade::ProgramInfo::textures","value":"std::vec::Vec<device::shade::SamplerVar>","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" Samplers in the program\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67416,"byte_end":67430,"line_start":282,"line_end":282,"column_start":5,"column_end":19},"name":"ErrorArraySize","qualname":"::device::shade::CompatibilityError::ErrorArraySize","value":"CompatibilityError::ErrorArraySize","parent":{"krate":0,"index":2098},"children":[],"decl_id":null,"docs":" Array sizes differ between the value and the var (trying to upload a vec2 as a vec4, etc)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67531,"byte_end":67544,"line_start":284,"line_end":284,"column_start":5,"column_end":18},"name":"ErrorBaseType","qualname":"::device::shade::CompatibilityError::ErrorBaseType","value":"CompatibilityError::ErrorBaseType","parent":{"krate":0,"index":2098},"children":[],"decl_id":null,"docs":" Base types differ between the value and the var (trying to upload a f32 as a u16, etc)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67662,"byte_end":67676,"line_start":287,"line_end":287,"column_start":5,"column_end":19},"name":"ErrorContainer","qualname":"::device::shade::CompatibilityError::ErrorContainer","value":"CompatibilityError::ErrorContainer","parent":{"krate":0,"index":2098},"children":[],"decl_id":null,"docs":" Container-ness differs between the value and the var (trying to upload a scalar as a vec4,\n etc)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67293,"byte_end":67311,"line_start":280,"line_end":280,"column_start":10,"column_end":28},"name":"CompatibilityError","qualname":"::device::shade::CompatibilityError","value":"CompatibilityError::{ErrorArraySize, ErrorBaseType, ErrorContainer}","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2103}],"decl_id":null,"docs":" Error type for trying to store a UniformValue in a UniformVar.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67284,"byte_end":67679,"line_start":280,"line_end":288,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67835,"byte_end":67848,"line_start":293,"line_end":293,"column_start":12,"column_end":25},"name":"is_compatible","qualname":"<UniformVar>::is_compatible","value":"fn (&self, value: &UniformValue) -> Result<(), CompatibilityError>","parent":null,"children":[],"decl_id":null,"docs":" Whether a value is compatible with this variable. That is, whether the value can be stored\n in this variable.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69409,"byte_end":69426,"line_start":322,"line_end":322,"column_start":5,"column_end":22},"name":"ModelNotSupported","qualname":"::device::shade::CreateShaderError::ModelNotSupported","value":"CreateShaderError::ModelNotSupported","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":" The device does not support the requested shader model.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69470,"byte_end":69493,"line_start":324,"line_end":324,"column_start":5,"column_end":28},"name":"ShaderCompilationFailed","qualname":"::device::shade::CreateShaderError::ShaderCompilationFailed","value":"CreateShaderError::ShaderCompilationFailed(String)","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":" The shader failed to compile.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69321,"byte_end":69338,"line_start":320,"line_end":320,"column_start":10,"column_end":27},"name":"CreateShaderError","qualname":"::device::shade::CreateShaderError","value":"CreateShaderError::{ModelNotSupported, ShaderCompilationFailed}","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2113}],"decl_id":null,"docs":" An error type for creating shaders.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69615,"byte_end":69623,"line_start":330,"line_end":330,"column_start":5,"column_end":13},"name":"LinkFail","qualname":"::device::shade::CreateProgramError::LinkFail","value":"CreateProgramError::LinkFail(String)","parent":{"krate":0,"index":2123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69637,"byte_end":69651,"line_start":331,"line_end":331,"column_start":5,"column_end":19},"name":"TargetMismatch","qualname":"::device::shade::CreateProgramError::TargetMismatch","value":"CreateProgramError::TargetMismatch(Vec<String>)","parent":{"krate":0,"index":2123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69590,"byte_end":69608,"line_start":329,"line_end":329,"column_start":10,"column_end":28},"name":"CreateProgramError","qualname":"::device::shade::CreateProgramError","value":"CreateProgramError::{LinkFail, TargetMismatch}","parent":null,"children":[{"krate":0,"index":2124},{"krate":0,"index":2127}],"decl_id":null,"docs":" An error type for creating programs.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2138},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69853,"byte_end":69864,"line_start":338,"line_end":338,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::device::shade::ShaderModel::Unsupported","value":"ShaderModel::Unsupported","parent":{"krate":0,"index":2137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2140},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69870,"byte_end":69879,"line_start":339,"line_end":339,"column_start":5,"column_end":14},"name":"Version30","qualname":"::device::shade::ShaderModel::Version30","value":"ShaderModel::Version30","parent":{"krate":0,"index":2137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2142},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69885,"byte_end":69894,"line_start":340,"line_end":340,"column_start":5,"column_end":14},"name":"Version40","qualname":"::device::shade::ShaderModel::Version40","value":"ShaderModel::Version40","parent":{"krate":0,"index":2137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69900,"byte_end":69909,"line_start":341,"line_end":341,"column_start":5,"column_end":14},"name":"Version41","qualname":"::device::shade::ShaderModel::Version41","value":"ShaderModel::Version41","parent":{"krate":0,"index":2137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2146},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69915,"byte_end":69924,"line_start":342,"line_end":342,"column_start":5,"column_end":14},"name":"Version50","qualname":"::device::shade::ShaderModel::Version50","value":"ShaderModel::Version50","parent":{"krate":0,"index":2137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69835,"byte_end":69846,"line_start":337,"line_end":337,"column_start":10,"column_end":21},"name":"ShaderModel","qualname":"::device::shade::ShaderModel","value":"ShaderModel::{Unsupported, Version30, Version40, Version41, Version50}","parent":null,"children":[{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2146}],"decl_id":null,"docs":" Shader model supported by the device, corresponds to the HLSL shader models.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69750,"byte_end":69772,"line_start":335,"line_end":335,"column_start":1,"column_end":23}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69826,"byte_end":69927,"line_start":337,"line_end":343,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":70053,"byte_end":70062,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"to_number","qualname":"<ShaderModel>::to_number","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the shader model as a numeric value.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":585},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tex","qualname":"::device::tex","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":2157},{"krate":0,"index":2168},{"krate":0,"index":2166},{"krate":0,"index":2164},{"krate":0,"index":2162},{"krate":0,"index":2169},{"krate":0,"index":2187},{"krate":0,"index":2185},{"krate":0,"index":2182},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":2188},{"krate":0,"index":2219},{"krate":0,"index":2217},{"krate":0,"index":2214},{"krate":0,"index":2204},{"krate":0,"index":2201},{"krate":0,"index":2200},{"krate":0,"index":2198},{"krate":0,"index":2196},{"krate":0,"index":2221},{"krate":0,"index":2244},{"krate":0,"index":2242},{"krate":0,"index":2240},{"krate":0,"index":2238},{"krate":0,"index":2235},{"krate":0,"index":2234},{"krate":0,"index":2232},{"krate":0,"index":2230},{"krate":0,"index":598},{"krate":0,"index":2246},{"krate":0,"index":2267},{"krate":0,"index":2265},{"krate":0,"index":2263},{"krate":0,"index":2261},{"krate":0,"index":2258},{"krate":0,"index":2257},{"krate":0,"index":2255},{"krate":0,"index":2253},{"krate":0,"index":2269},{"krate":0,"index":2356},{"krate":0,"index":2354},{"krate":0,"index":2351},{"krate":0,"index":2325},{"krate":0,"index":2322},{"krate":0,"index":2321},{"krate":0,"index":2319},{"krate":0,"index":2317},{"krate":0,"index":600},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":2359},{"krate":0,"index":2395},{"krate":0,"index":2393},{"krate":0,"index":2390},{"krate":0,"index":2372},{"krate":0,"index":2369},{"krate":0,"index":2368},{"krate":0,"index":2366},{"krate":0,"index":2364},{"krate":0,"index":2397},{"krate":0,"index":2428},{"krate":0,"index":2426},{"krate":0,"index":2423},{"krate":0,"index":2417},{"krate":0,"index":2414},{"krate":0,"index":2413},{"krate":0,"index":2411},{"krate":0,"index":2409},{"krate":0,"index":2430},{"krate":0,"index":2457},{"krate":0,"index":2455},{"krate":0,"index":2453},{"krate":0,"index":2451},{"krate":0,"index":2448},{"krate":0,"index":2447},{"krate":0,"index":2445},{"krate":0,"index":2443},{"krate":0,"index":2459},{"krate":0,"index":2498},{"krate":0,"index":2496},{"krate":0,"index":2493},{"krate":0,"index":2487},{"krate":0,"index":2484},{"krate":0,"index":2483},{"krate":0,"index":2481},{"krate":0,"index":2479},{"krate":0,"index":612},{"krate":0,"index":2500},{"krate":0,"index":2546},{"krate":0,"index":2544},{"krate":0,"index":2541},{"krate":0,"index":2515},{"krate":0,"index":2512},{"krate":0,"index":2511},{"krate":0,"index":2509},{"krate":0,"index":2507},{"krate":0,"index":2548},{"krate":0,"index":2604},{"krate":0,"index":2602},{"krate":0,"index":2599},{"krate":0,"index":2565},{"krate":0,"index":2562},{"krate":0,"index":2561},{"krate":0,"index":2559},{"krate":0,"index":2557},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":2606},{"krate":0,"index":2627},{"krate":0,"index":2625},{"krate":0,"index":2623},{"krate":0,"index":2621},{"krate":0,"index":2618},{"krate":0,"index":2617},{"krate":0,"index":2615},{"krate":0,"index":2613},{"krate":0,"index":2629},{"krate":0,"index":2662},{"krate":0,"index":2640},{"krate":0,"index":2638},{"krate":0,"index":2637},{"krate":0,"index":2635},{"krate":0,"index":628}],"decl_id":null,"docs":" Texture creation and modification.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":71626,"byte_end":71643,"line_start":34,"line_end":34,"column_start":5,"column_end":22},"name":"UnsupportedFormat","qualname":"::device::tex::SurfaceError::UnsupportedFormat","value":"SurfaceError::UnsupportedFormat","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Failed to map a given format to the device.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":71689,"byte_end":71705,"line_start":36,"line_end":36,"column_start":5,"column_end":21},"name":"UnsupportedGamma","qualname":"::device::tex::SurfaceError::UnsupportedGamma","value":"SurfaceError::UnsupportedGamma","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Failed to provide sRGB formats.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":71555,"byte_end":71567,"line_start":32,"line_end":32,"column_start":10,"column_end":22},"name":"SurfaceError","qualname":"::device::tex::SurfaceError","value":"SurfaceError::{UnsupportedFormat, UnsupportedGamma}","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2160}],"decl_id":null,"docs":" Surface creation/update error.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":71546,"byte_end":71708,"line_start":32,"line_end":37,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":71859,"byte_end":71876,"line_start":43,"line_end":43,"column_start":5,"column_end":22},"name":"UnsupportedFormat","qualname":"::device::tex::TextureError::UnsupportedFormat","value":"TextureError::UnsupportedFormat","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" Failed to map a given format to the device.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":71922,"byte_end":71938,"line_start":45,"line_end":45,"column_start":5,"column_end":21},"name":"UnsupportedGamma","qualname":"::device::tex::TextureError::UnsupportedGamma","value":"TextureError::UnsupportedGamma","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" Failed to provide sRGB formats.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":72007,"byte_end":72026,"line_start":47,"line_end":47,"column_start":5,"column_end":24},"name":"UnsupportedSampling","qualname":"::device::tex::TextureError::UnsupportedSampling","value":"TextureError::UnsupportedSampling","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" Failed to map a given multisampled kind to the device.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":72087,"byte_end":72098,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"name":"InvalidInfo","qualname":"::device::tex::TextureError::InvalidInfo","value":"TextureError::InvalidInfo(TextureInfo)","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" The given TextureInfo contains invalid values.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2179},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":72192,"byte_end":72205,"line_start":51,"line_end":51,"column_start":5,"column_end":18},"name":"IncorrectSize","qualname":"::device::tex::TextureError::IncorrectSize","value":"TextureError::IncorrectSize(usize)","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" The given data has a different size than the target texture slice.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":71788,"byte_end":71800,"line_start":41,"line_end":41,"column_start":10,"column_end":22},"name":"TextureError","qualname":"::device::tex::TextureError","value":"TextureError::{UnsupportedFormat, UnsupportedGamma, UnsupportedSampling, InvalidInfo, IncorrectSize}","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2179}],"decl_id":null,"docs":" Texture creation/update error.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":71779,"byte_end":72215,"line_start":41,"line_end":52,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":594},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73323,"byte_end":73327,"line_start":88,"line_end":88,"column_start":10,"column_end":14},"name":"Size","qualname":"::device::tex::Size","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Dimension size\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":595},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73377,"byte_end":73381,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"name":"Bits","qualname":"::device::tex::Bits","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of bits per component\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":596},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73424,"byte_end":73434,"line_start":92,"line_end":92,"column_start":10,"column_end":20},"name":"NumSamples","qualname":"::device::tex::NumSamples","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of MSAA samples\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":597},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73479,"byte_end":73491,"line_start":94,"line_end":94,"column_start":10,"column_end":22},"name":"NumFragments","qualname":"::device::tex::NumFragments","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of EQAA fragments\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2189},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73686,"byte_end":73690,"line_start":100,"line_end":100,"column_start":5,"column_end":9},"name":"Msaa","qualname":"::device::tex::AaMode::Msaa","value":"AaMode::Msaa(NumSamples)","parent":{"krate":0,"index":2188},"children":[],"decl_id":null,"docs":" MultiSampled Anti-Aliasing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73747,"byte_end":73751,"line_start":102,"line_end":102,"column_start":5,"column_end":9},"name":"Eqaa","qualname":"::device::tex::AaMode::Eqaa","value":"AaMode::Eqaa(NumSamples, NumFragments)","parent":{"krate":0,"index":2188},"children":[],"decl_id":null,"docs":" Enhanced Quality Anti-Aliasing\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73638,"byte_end":73644,"line_start":98,"line_end":98,"column_start":10,"column_end":16},"name":"AaMode","qualname":"::device::tex::AaMode","value":"AaMode::{Msaa, Eqaa}","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":2192}],"decl_id":null,"docs":" Describes the configuration of samples inside each texel.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73629,"byte_end":73780,"line_start":98,"line_end":103,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73629,"byte_end":73780,"line_start":98,"line_end":103,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2222},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73955,"byte_end":73956,"line_start":110,"line_end":110,"column_start":5,"column_end":6},"name":"R","qualname":"::device::tex::Components::R","value":"Components::R","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Red only\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73984,"byte_end":73986,"line_start":112,"line_end":112,"column_start":5,"column_end":7},"name":"RG","qualname":"::device::tex::Components::RG","value":"Components::RG","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Red and green\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74017,"byte_end":74020,"line_start":114,"line_end":114,"column_start":5,"column_end":8},"name":"RGB","qualname":"::device::tex::Components::RGB","value":"Components::RGB","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Red, green, blue\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74058,"byte_end":74062,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::device::tex::Components::RGBA","value":"Components::RGBA","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Red, green, blue, alpha\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73921,"byte_end":73931,"line_start":108,"line_end":108,"column_start":10,"column_end":20},"name":"Components","qualname":"::device::tex::Components","value":"Components::{R, RG, RGB, RGBA}","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2228}],"decl_id":null,"docs":" Describes the color components of each texel.\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73900,"byte_end":73911,"line_start":107,"line_end":107,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73912,"byte_end":74065,"line_start":108,"line_end":117,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":73912,"byte_end":74065,"line_start":108,"line_end":117,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74134,"byte_end":74143,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"get_count","qualname":"<Components>::get_count","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of components.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2247},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74554,"byte_end":74562,"line_start":136,"line_end":136,"column_start":5,"column_end":13},"name":"ETC2_RGB","qualname":"::device::tex::Compression::ETC2_RGB","value":"Compression::ETC2_RGB","parent":{"krate":0,"index":2246},"children":[],"decl_id":null,"docs":" Use the EXT2 algorithm on 3 components.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74647,"byte_end":74656,"line_start":138,"line_end":138,"column_start":5,"column_end":14},"name":"ETC2_SRGB","qualname":"::device::tex::Compression::ETC2_SRGB","value":"Compression::ETC2_SRGB","parent":{"krate":0,"index":2246},"children":[],"decl_id":null,"docs":" Use the EXT2 algorithm on 4 components (RGBA) in the sRGB color space.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2251},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74714,"byte_end":74728,"line_start":140,"line_end":140,"column_start":5,"column_end":19},"name":"ETC2_EAC_RGBA8","qualname":"::device::tex::Compression::ETC2_EAC_RGBA8","value":"Compression::ETC2_EAC_RGBA8","parent":{"krate":0,"index":2246},"children":[],"decl_id":null,"docs":" Use the EXT2 EAC algorithm on 4 components.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74488,"byte_end":74499,"line_start":134,"line_end":134,"column_start":10,"column_end":21},"name":"Compression","qualname":"::device::tex::Compression","value":"Compression::{ETC2_RGB, ETC2_SRGB, ETC2_EAC_RGBA8}","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251}],"decl_id":null,"docs":" Codec used to compress image data.\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74448,"byte_end":74478,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74479,"byte_end":74731,"line_start":134,"line_end":141,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74479,"byte_end":74731,"line_start":134,"line_end":141,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74943,"byte_end":74948,"line_start":148,"line_end":148,"column_start":5,"column_end":10},"name":"Float","qualname":"::device::tex::Format::Float","value":"Format::Float(Components, FloatSize)","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" Floating point.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75001,"byte_end":75008,"line_start":150,"line_end":150,"column_start":5,"column_end":12},"name":"Integer","qualname":"::device::tex::Format::Integer","value":"Format::Integer(Components, Bits, IntSubType)","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" Signed integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75070,"byte_end":75078,"line_start":152,"line_end":152,"column_start":5,"column_end":13},"name":"Unsigned","qualname":"::device::tex::Format::Unsigned","value":"Format::Unsigned(Components, Bits, IntSubType)","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" Unsigned integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75139,"byte_end":75149,"line_start":154,"line_end":154,"column_start":5,"column_end":15},"name":"Compressed","qualname":"::device::tex::Format::Compressed","value":"Format::Compressed(Compression)","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" Compressed data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2287},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75200,"byte_end":75208,"line_start":156,"line_end":156,"column_start":5,"column_end":13},"name":"R3_G3_B2","qualname":"::device::tex::Format::R3_G3_B2","value":"Format::R3_G3_B2","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" 3 bits for RG, 2 for B.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2289},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75245,"byte_end":75253,"line_start":158,"line_end":158,"column_start":5,"column_end":13},"name":"R5_G6_B5","qualname":"::device::tex::Format::R5_G6_B5","value":"Format::R5_G6_B5","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" 5 bits for RB, 6 for G\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2291},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75301,"byte_end":75308,"line_start":160,"line_end":160,"column_start":5,"column_end":12},"name":"RGB5_A1","qualname":"::device::tex::Format::RGB5_A1","value":"Format::RGB5_A1","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" 5 bits each for RGB, 1 for Alpha.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75357,"byte_end":75365,"line_start":162,"line_end":162,"column_start":5,"column_end":13},"name":"RGB10_A2","qualname":"::device::tex::Format::RGB10_A2","value":"Format::RGB10_A2","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" 10 bits each for RGB, 2 for Alpha.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75436,"byte_end":75446,"line_start":164,"line_end":164,"column_start":5,"column_end":15},"name":"RGB10_A2UI","qualname":"::device::tex::Format::RGB10_A2UI","value":"Format::RGB10_A2UI","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" 10 bits each for RGB, 2 for Alpha, as unsigned integers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2297},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75533,"byte_end":75547,"line_start":166,"line_end":166,"column_start":5,"column_end":19},"name":"R11F_G11F_B10F","qualname":"::device::tex::Format::R11F_G11F_B10F","value":"Format::R11F_G11F_B10F","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" This uses special 11 and 10-bit floating-point values without sign bits.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75693,"byte_end":75700,"line_start":169,"line_end":169,"column_start":5,"column_end":12},"name":"RGB9_E5","qualname":"::device::tex::Format::RGB9_E5","value":"Format::RGB9_E5","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" This s an RGB format of type floating-point. The 3 color values have\n 9 bits of precision, and they share a single exponent.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75781,"byte_end":75786,"line_start":171,"line_end":171,"column_start":5,"column_end":10},"name":"BGRA8","qualname":"::device::tex::Format::BGRA8","value":"Format::BGRA8","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" Swizzled RGBA color format, used for interaction with Windows DIBs\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2303},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75819,"byte_end":75824,"line_start":173,"line_end":173,"column_start":5,"column_end":10},"name":"SRGB8","qualname":"::device::tex::Format::SRGB8","value":"Format::SRGB8","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" Gamma-encoded RGB8\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75874,"byte_end":75882,"line_start":175,"line_end":175,"column_start":5,"column_end":13},"name":"SRGB8_A8","qualname":"::device::tex::Format::SRGB8_A8","value":"Format::SRGB8_A8","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" Gamma-encoded RGB8, unchanged alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2307},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75914,"byte_end":75921,"line_start":177,"line_end":177,"column_start":5,"column_end":12},"name":"DEPTH16","qualname":"::device::tex::Format::DEPTH16","value":"Format::DEPTH16","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" 16-bit bits depth\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2309},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75949,"byte_end":75956,"line_start":179,"line_end":179,"column_start":5,"column_end":12},"name":"DEPTH24","qualname":"::device::tex::Format::DEPTH24","value":"Format::DEPTH24","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" 24 bits depth\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":75999,"byte_end":76007,"line_start":181,"line_end":181,"column_start":5,"column_end":13},"name":"DEPTH32F","qualname":"::device::tex::Format::DEPTH32F","value":"Format::DEPTH32F","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" 32 floating-point bits depth\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":76054,"byte_end":76070,"line_start":183,"line_end":183,"column_start":5,"column_end":21},"name":"DEPTH24_STENCIL8","qualname":"::device::tex::Format::DEPTH24_STENCIL8","value":"Format::DEPTH24_STENCIL8","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" 24 bits for depth, 8 for stencil\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":76132,"byte_end":76149,"line_start":185,"line_end":185,"column_start":5,"column_end":22},"name":"DEPTH32F_STENCIL8","qualname":"::device::tex::Format::DEPTH32F_STENCIL8","value":"Format::DEPTH32F_STENCIL8","parent":{"krate":0,"index":2269},"children":[],"decl_id":null,"docs":" 32 floating point bits for depth, 8 for stencil\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74906,"byte_end":74912,"line_start":146,"line_end":146,"column_start":10,"column_end":16},"name":"Format","qualname":"::device::tex::Format","value":"Format::{Float, Integer, Unsigned, Compressed, R3_G3_B2, R5_G6_B5, RGB5_A1, RGB10_A2, RGB10_A2UI, R11F_G11F_B10F, RGB9_E5, BGRA8, SRGB8, SRGB8_A8, DEPTH16, DEPTH24, DEPTH32F, DEPTH24_STENCIL8, DEPTH32F_STENCIL8}","parent":null,"children":[{"krate":0,"index":2270},{"krate":0,"index":2274},{"krate":0,"index":2279},{"krate":0,"index":2284},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2291},{"krate":0,"index":2293},{"krate":0,"index":2295},{"krate":0,"index":2297},{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2303},{"krate":0,"index":2305},{"krate":0,"index":2307},{"krate":0,"index":2309},{"krate":0,"index":2311},{"krate":0,"index":2313},{"krate":0,"index":2315}],"decl_id":null,"docs":" Describes the layout of each texel within a surface/texture.\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74866,"byte_end":74896,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74897,"byte_end":76152,"line_start":146,"line_end":186,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74897,"byte_end":76152,"line_start":146,"line_end":186,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":76217,"byte_end":76231,"line_start":190,"line_end":190,"column_start":12,"column_end":26},"name":"get_components","qualname":"<Format>::get_components","value":"fn (&self) -> Option<Components>","parent":null,"children":[],"decl_id":null,"docs":" Extract the components format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":77342,"byte_end":77350,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"is_color","qualname":"<Format>::is_color","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it's a color format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":77692,"byte_end":77701,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"has_depth","qualname":"<Format>::has_depth","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it has a depth component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":78045,"byte_end":78056,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"has_stencil","qualname":"<Format>::has_stencil","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it has a stencil component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":78278,"byte_end":78291,"line_start":252,"line_end":252,"column_start":12,"column_end":25},"name":"is_compressed","qualname":"<Format>::is_compressed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it's a compressed format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":78467,"byte_end":78485,"line_start":260,"line_end":260,"column_start":12,"column_end":30},"name":"does_convert_gamma","qualname":"<Format>::does_convert_gamma","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it's a sRGB color space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":78743,"byte_end":78751,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"get_size","qualname":"<Format>::get_size","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get size of the texel in bytes.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":608},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":79819,"byte_end":79821,"line_start":298,"line_end":298,"column_start":12,"column_end":14},"name":"R8","qualname":"::device::tex::R8","value":"Format","parent":null,"children":[],"decl_id":null,"docs":" A single R-component 8-bit normalized format.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":609},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":79953,"byte_end":79958,"line_start":300,"line_end":300,"column_start":12,"column_end":17},"name":"RGBA8","qualname":"::device::tex::RGBA8","value":"Format","parent":null,"children":[],"decl_id":null,"docs":" A standard RGBA 8-bit normalized format.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":610},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":80095,"byte_end":80102,"line_start":302,"line_end":302,"column_start":12,"column_end":19},"name":"RGBA16F","qualname":"::device::tex::RGBA16F","value":"Format","parent":null,"children":[],"decl_id":null,"docs":" A standard RGBA 16-bit floating-point format.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":611},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":80223,"byte_end":80230,"line_start":304,"line_end":304,"column_start":12,"column_end":19},"name":"RGBA32F","qualname":"::device::tex::RGBA32F","value":"Format","parent":null,"children":[],"decl_id":null,"docs":" A standard RGBA 32-bit floating-point format.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":80433,"byte_end":80444,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"name":"SurfaceInfo","qualname":"::device::tex::SurfaceInfo","value":"SurfaceInfo { width, height, format, aa_mode }","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363}],"decl_id":null,"docs":" Describes the storage of a surface.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":80331,"byte_end":80353,"line_start":307,"line_end":307,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":80422,"byte_end":80548,"line_start":309,"line_end":314,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":80422,"byte_end":80548,"line_start":309,"line_end":314,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":80455,"byte_end":80460,"line_start":310,"line_end":310,"column_start":9,"column_end":14},"name":"width","qualname":"::device::tex::SurfaceInfo::width","value":"u16","parent":{"krate":0,"index":2359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":80476,"byte_end":80482,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"name":"height","qualname":"::device::tex::SurfaceInfo::height","value":"u16","parent":{"krate":0,"index":2359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":80498,"byte_end":80504,"line_start":312,"line_end":312,"column_start":9,"column_end":15},"name":"format","qualname":"::device::tex::SurfaceInfo::format","value":"device::tex::Format","parent":{"krate":0,"index":2359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":80522,"byte_end":80529,"line_start":313,"line_end":313,"column_start":9,"column_end":16},"name":"aa_mode","qualname":"::device::tex::SurfaceInfo::aa_mode","value":"std::option::Option<device::tex::AaMode>","parent":{"krate":0,"index":2359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81377,"byte_end":81382,"line_start":329,"line_end":329,"column_start":5,"column_end":10},"name":"Scale","qualname":"::device::tex::FilterMethod::Scale","value":"FilterMethod::Scale","parent":{"krate":0,"index":2397},"children":[],"decl_id":null,"docs":" The dumbest filtering possible, nearest-neighbor interpolation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81419,"byte_end":81425,"line_start":331,"line_end":331,"column_start":5,"column_end":11},"name":"Mipmap","qualname":"::device::tex::FilterMethod::Mipmap","value":"FilterMethod::Mipmap","parent":{"krate":0,"index":2397},"children":[],"decl_id":null,"docs":" Add simple mipmapping.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81520,"byte_end":81528,"line_start":334,"line_end":334,"column_start":5,"column_end":13},"name":"Bilinear","qualname":"::device::tex::FilterMethod::Bilinear","value":"FilterMethod::Bilinear","parent":{"krate":0,"index":2397},"children":[],"decl_id":null,"docs":" Sample multiple texels within a single mipmap level to increase\n quality.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2404},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81611,"byte_end":81620,"line_start":336,"line_end":336,"column_start":5,"column_end":14},"name":"Trilinear","qualname":"::device::tex::FilterMethod::Trilinear","value":"FilterMethod::Trilinear","parent":{"krate":0,"index":2397},"children":[],"decl_id":null,"docs":" Sample multiple texels across two mipmap levels to increase quality.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81721,"byte_end":81732,"line_start":339,"line_end":339,"column_start":5,"column_end":16},"name":"Anisotropic","qualname":"::device::tex::FilterMethod::Anisotropic","value":"FilterMethod::Anisotropic(u8)","parent":{"krate":0,"index":2397},"children":[],"decl_id":null,"docs":" Anisotropic filtering with a given \"max\", must be between 1 and 16,\n inclusive.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81286,"byte_end":81298,"line_start":327,"line_end":327,"column_start":10,"column_end":22},"name":"FilterMethod","qualname":"::device::tex::FilterMethod","value":"FilterMethod::{Scale, Mipmap, Bilinear, Trilinear, Anisotropic}","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2402},{"krate":0,"index":2404},{"krate":0,"index":2406}],"decl_id":null,"docs":" How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the\n texture when sampling. They correspond to increasing levels of quality,\n but also cost. They \"layer\" on top of each other: it is not possible to\n have bilinear filtering without mipmapping, for example.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81277,"byte_end":81738,"line_start":327,"line_end":340,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81277,"byte_end":81738,"line_start":327,"line_end":340,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81909,"byte_end":81913,"line_start":346,"line_end":346,"column_start":5,"column_end":9},"name":"PosZ","qualname":"::device::tex::CubeFace::PosZ","value":"CubeFace::PosZ","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2433},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81919,"byte_end":81923,"line_start":347,"line_end":347,"column_start":5,"column_end":9},"name":"NegZ","qualname":"::device::tex::CubeFace::NegZ","value":"CubeFace::NegZ","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81929,"byte_end":81933,"line_start":348,"line_end":348,"column_start":5,"column_end":9},"name":"PosX","qualname":"::device::tex::CubeFace::PosX","value":"CubeFace::PosX","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2437},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81939,"byte_end":81943,"line_start":349,"line_end":349,"column_start":5,"column_end":9},"name":"NegX","qualname":"::device::tex::CubeFace::NegX","value":"CubeFace::NegX","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81949,"byte_end":81953,"line_start":350,"line_end":350,"column_start":5,"column_end":9},"name":"PosY","qualname":"::device::tex::CubeFace::PosY","value":"CubeFace::PosY","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81959,"byte_end":81963,"line_start":351,"line_end":351,"column_start":5,"column_end":9},"name":"NegY","qualname":"::device::tex::CubeFace::NegY","value":"CubeFace::NegY","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81894,"byte_end":81902,"line_start":345,"line_end":345,"column_start":10,"column_end":18},"name":"CubeFace","qualname":"::device::tex::CubeFace","value":"CubeFace::{PosZ, NegZ, PosX, NegX, PosY, NegY}","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2433},{"krate":0,"index":2435},{"krate":0,"index":2437},{"krate":0,"index":2439},{"krate":0,"index":2441}],"decl_id":null,"docs":" The face of a cube texture to do an operation on.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81862,"byte_end":81884,"line_start":344,"line_end":344,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81885,"byte_end":81965,"line_start":345,"line_end":352,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":81885,"byte_end":81965,"line_start":345,"line_end":352,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":82451,"byte_end":82453,"line_start":362,"line_end":362,"column_start":5,"column_end":7},"name":"D1","qualname":"::device::tex::Kind::D1","value":"Kind::D1","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" A single row of texels.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":82582,"byte_end":82589,"line_start":365,"line_end":365,"column_start":5,"column_end":12},"name":"D1Array","qualname":"::device::tex::Kind::D1Array","value":"Kind::D1Array","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" An array of rows of texels. Equivalent to Texture2D except that texels\n in a different row are not sampled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":82662,"byte_end":82664,"line_start":367,"line_end":367,"column_start":5,"column_end":7},"name":"D2","qualname":"::device::tex::Kind::D2","value":"Kind::D2","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" A traditional 2D texture, with rows arranged contiguously.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":82798,"byte_end":82805,"line_start":370,"line_end":370,"column_start":5,"column_end":12},"name":"D2Array","qualname":"::device::tex::Kind::D2Array","value":"Kind::D2Array","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" An array of 2D textures. Equivalent to Texture3D except that texels in\n a different depth level are not sampled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":82929,"byte_end":82942,"line_start":373,"line_end":373,"column_start":5,"column_end":18},"name":"D2MultiSample","qualname":"::device::tex::Kind::D2MultiSample","value":"Kind::D2MultiSample(AaMode)","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" A multi-sampled 2D texture. Each pixel may have more than one data value\n (sample) associated with it.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83002,"byte_end":83020,"line_start":375,"line_end":375,"column_start":5,"column_end":23},"name":"D2MultiSampleArray","qualname":"::device::tex::Kind::D2MultiSampleArray","value":"Kind::D2MultiSampleArray(AaMode)","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" A array of multi-sampled 2D textures.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83261,"byte_end":83265,"line_start":380,"line_end":380,"column_start":5,"column_end":9},"name":"Cube","qualname":"::device::tex::Kind::Cube","value":"Kind::Cube(CubeFace)","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" A set of 6 2D textures, one for each face of a cube.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2477},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83349,"byte_end":83351,"line_start":382,"line_end":382,"column_start":5,"column_end":7},"name":"D3","qualname":"::device::tex::Kind::D3","value":"Kind::D3","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" A volume texture, with each 2D layer arranged contiguously.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":82408,"byte_end":82412,"line_start":360,"line_end":360,"column_start":10,"column_end":14},"name":"Kind","qualname":"::device::tex::Kind","value":"Kind::{D1, D1Array, D2, D2Array, D2MultiSample, D2MultiSampleArray, Cube, D3}","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2477}],"decl_id":null,"docs":" Specifies how a given texture may be used. The available texture types are\n restricted by what Metal exposes, though this could conceivably be\n extended in the future. Note that a single texture can *only* ever be of\n one kind. A texture created as `Texture2D` will forever be `Texture2D`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":82399,"byte_end":83354,"line_start":360,"line_end":383,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":82399,"byte_end":83354,"line_start":360,"line_end":383,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83432,"byte_end":83443,"line_start":387,"line_end":387,"column_start":12,"column_end":23},"name":"get_aa_mode","qualname":"<Kind>::get_aa_mode","value":"fn (&self) -> Option<AaMode>","parent":null,"children":[],"decl_id":null,"docs":" Return the anti-aliasing mode of the texture\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83914,"byte_end":83925,"line_start":404,"line_end":404,"column_start":12,"column_end":23},"name":"TextureInfo","qualname":"::device::tex::TextureInfo","value":"TextureInfo { width, height, depth, levels, kind, format }","parent":null,"children":[{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506}],"decl_id":null,"docs":" Describes the storage of a texture.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83812,"byte_end":83834,"line_start":402,"line_end":402,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83903,"byte_end":84327,"line_start":404,"line_end":415,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83903,"byte_end":84327,"line_start":404,"line_end":415,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2501},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83936,"byte_end":83941,"line_start":405,"line_end":405,"column_start":9,"column_end":14},"name":"width","qualname":"::device::tex::TextureInfo::width","value":"u16","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83957,"byte_end":83963,"line_start":406,"line_end":406,"column_start":9,"column_end":15},"name":"height","qualname":"::device::tex::TextureInfo::height","value":"u16","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83979,"byte_end":83984,"line_start":407,"line_end":407,"column_start":9,"column_end":14},"name":"depth","qualname":"::device::tex::TextureInfo::depth","value":"u16","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84270,"byte_end":84276,"line_start":412,"line_end":412,"column_start":9,"column_end":15},"name":"levels","qualname":"::device::tex::TextureInfo::levels","value":"u8","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":" Number of mipmap levels. Defaults to -1, which stands for unlimited.\n Mipmap levels at equal or above `levels` can not be loaded or sampled\n by the shader. width and height of each consecutive mipmap level is\n halved, starting from level 0.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84290,"byte_end":84294,"line_start":413,"line_end":413,"column_start":9,"column_end":13},"name":"kind","qualname":"::device::tex::TextureInfo::kind","value":"device::tex::Kind","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84310,"byte_end":84316,"line_start":414,"line_end":414,"column_start":9,"column_end":15},"name":"format","qualname":"::device::tex::TextureInfo::format","value":"device::tex::Format","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2548},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84510,"byte_end":84519,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"ImageInfo","qualname":"::device::tex::ImageInfo","value":"ImageInfo { xoffset, yoffset, zoffset, width, height, depth, format, mipmap }","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556}],"decl_id":null,"docs":" Describes a subvolume of a texture, which image data can be uploaded into.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84408,"byte_end":84430,"line_start":418,"line_end":418,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84499,"byte_end":84762,"line_start":420,"line_end":431,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84499,"byte_end":84762,"line_start":420,"line_end":431,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84530,"byte_end":84537,"line_start":421,"line_end":421,"column_start":9,"column_end":16},"name":"xoffset","qualname":"::device::tex::ImageInfo::xoffset","value":"u16","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84553,"byte_end":84560,"line_start":422,"line_end":422,"column_start":9,"column_end":16},"name":"yoffset","qualname":"::device::tex::ImageInfo::yoffset","value":"u16","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2551},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84576,"byte_end":84583,"line_start":423,"line_end":423,"column_start":9,"column_end":16},"name":"zoffset","qualname":"::device::tex::ImageInfo::zoffset","value":"u16","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84599,"byte_end":84604,"line_start":424,"line_end":424,"column_start":9,"column_end":14},"name":"width","qualname":"::device::tex::ImageInfo::width","value":"u16","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84620,"byte_end":84626,"line_start":425,"line_end":425,"column_start":9,"column_end":15},"name":"height","qualname":"::device::tex::ImageInfo::height","value":"u16","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84642,"byte_end":84647,"line_start":426,"line_end":426,"column_start":9,"column_end":14},"name":"depth","qualname":"::device::tex::ImageInfo::depth","value":"u16","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84693,"byte_end":84699,"line_start":428,"line_end":428,"column_start":9,"column_end":15},"name":"format","qualname":"::device::tex::ImageInfo::format","value":"device::tex::Format","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Format of each texel.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84749,"byte_end":84755,"line_start":430,"line_end":430,"column_start":9,"column_end":15},"name":"mipmap","qualname":"::device::tex::ImageInfo::mipmap","value":"u8","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Which mipmap to select.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":85375,"byte_end":85378,"line_start":463,"line_end":463,"column_start":12,"column_end":15},"name":"new","qualname":"<TextureInfo>::new","value":"fn () -> TextureInfo","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty texture info.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":85502,"byte_end":85510,"line_start":468,"line_end":468,"column_start":12,"column_end":20},"name":"contains","qualname":"<TextureInfo>::contains","value":"fn (&self, img: &ImageInfo) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if given ImageInfo is a part of the texture.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":86502,"byte_end":86505,"line_start":506,"line_end":506,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageInfo>::new","value":"fn () -> ImageInfo","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ImageInfo`, using default values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":86595,"byte_end":86610,"line_start":508,"line_end":508,"column_start":12,"column_end":27},"name":"get_texel_count","qualname":"<ImageInfo>::get_texel_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of texels.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":86997,"byte_end":87001,"line_start":520,"line_end":520,"column_start":5,"column_end":9},"name":"Tile","qualname":"::device::tex::WrapMode::Tile","value":"WrapMode::Tile","parent":{"krate":0,"index":2606},"children":[],"decl_id":null,"docs":" Tile the texture. That is, sample the coordinate modulo `1.0`. This is\n the default.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2609},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87085,"byte_end":87091,"line_start":522,"line_end":522,"column_start":5,"column_end":11},"name":"Mirror","qualname":"::device::tex::WrapMode::Mirror","value":"WrapMode::Mirror","parent":{"krate":0,"index":2606},"children":[],"decl_id":null,"docs":" Mirror the texture. Like tile, but uses abs(coord) before the modulo.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2611},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87168,"byte_end":87173,"line_start":524,"line_end":524,"column_start":5,"column_end":10},"name":"Clamp","qualname":"::device::tex::WrapMode::Clamp","value":"WrapMode::Clamp","parent":{"krate":0,"index":2606},"children":[],"decl_id":null,"docs":" Clamp the texture to the value at `0.0` or `1.0` respectively.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":86882,"byte_end":86890,"line_start":517,"line_end":517,"column_start":10,"column_end":18},"name":"WrapMode","qualname":"::device::tex::WrapMode","value":"WrapMode::{Tile, Mirror, Clamp}","parent":null,"children":[{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":2611}],"decl_id":null,"docs":" Specifies how texture coordinates outside the range `[0, 1]` are handled.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":86873,"byte_end":87176,"line_start":517,"line_end":525,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":86873,"byte_end":87176,"line_start":517,"line_end":525,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":2629},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87329,"byte_end":87340,"line_start":530,"line_end":530,"column_start":12,"column_end":23},"name":"SamplerInfo","qualname":"::device::tex::SamplerInfo","value":"SamplerInfo { filtering, wrap_mode, lod_bias, lod_range, comparison }","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634}],"decl_id":null,"docs":" Specifies how to sample from a texture.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87318,"byte_end":87955,"line_start":530,"line_end":544,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2630},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87381,"byte_end":87390,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"name":"filtering","qualname":"::device::tex::SamplerInfo::filtering","value":"device::tex::FilterMethod","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Filter method to use.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2631},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87507,"byte_end":87516,"line_start":535,"line_end":535,"column_start":9,"column_end":18},"name":"wrap_mode","qualname":"::device::tex::SamplerInfo::wrap_mode","value":"(device::tex::WrapMode, device::tex::WrapMode, device::tex::WrapMode)","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL\n speak)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2632},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87742,"byte_end":87750,"line_start":539,"line_end":539,"column_start":9,"column_end":17},"name":"lod_bias","qualname":"::device::tex::SamplerInfo::lod_bias","value":"f32","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" This bias is added to every computed mipmap level (N + lod_bias). For\n example, if it would select mipmap level 2 and lod_bias is 1, it will\n use mipmap level 3.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2633},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87829,"byte_end":87838,"line_start":541,"line_end":541,"column_start":9,"column_end":18},"name":"lod_range","qualname":"::device::tex::SamplerInfo::lod_range","value":"(f32, f32)","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" This range is used to clamp LOD level used for sampling\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2634},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87915,"byte_end":87925,"line_start":543,"line_end":543,"column_start":9,"column_end":19},"name":"comparison","qualname":"::device::tex::SamplerInfo::comparison","value":"std::option::Option<draw_state::state::Comparison>","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" comparison mode, used primary for a shadow map\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":88110,"byte_end":88113,"line_start":549,"line_end":549,"column_start":12,"column_end":15},"name":"new","qualname":"<SamplerInfo>::new","value":"fn (filtering: FilterMethod, wrap: WrapMode) -> SamplerInfo","parent":null,"children":[],"decl_id":null,"docs":" Create a new sampler description with a given filter method and wrapping mode, using no LOD\n modifications.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":630},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"program","qualname":"::device::program","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":638}],"decl_id":null,"docs":" Program creating and modification\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":633},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":89163,"byte_end":89170,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Builder","qualname":"::device::program::Builder","value":"Builder { shaders, targets }","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637}],"decl_id":null,"docs":" A program builder is used to `bind` shader/target/transform_vearyings\n together\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":636},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":89494,"byte_end":89501,"line_start":38,"line_end":38,"column_start":9,"column_end":16},"name":"shaders","qualname":"::device::program::Builder::shaders","value":"std::vec::Vec<&'a device::handle::Shader<R>>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" The shaders bound to the program\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":637},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":89574,"byte_end":89581,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"name":"targets","qualname":"::device::program::Builder::targets","value":"std::vec::Vec<&'a str>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" the targets for the output\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":90058,"byte_end":90061,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder<'a, R>","parent":null,"children":[],"decl_id":null,"docs":" Create's a new program builder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":90281,"byte_end":90291,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"add_shader","qualname":"<Builder>::add_shader","value":"fn (mut self, shader: &'a handle::Shader<R>) -> Builder<'a, R>","parent":null,"children":[],"decl_id":null,"docs":" add a shader into to the program\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":90448,"byte_end":90459,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"add_shaders","qualname":"<Builder>::add_shaders","value":"fn (mut self, shaders: &[&'a handle::Shader<R>]) -> Builder<'a, R>","parent":null,"children":[],"decl_id":null,"docs":" add multiple shaders\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":90667,"byte_end":90677,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"add_target","qualname":"<Builder>::add_target","value":"fn (mut self, target: &'a str) -> Builder<'a, R>","parent":null,"children":[],"decl_id":null,"docs":" add a target to the shader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":90820,"byte_end":90831,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"add_targets","qualname":"<Builder>::add_targets","value":"fn (mut self, targets: &[&'a str]) -> Builder<'a, R>","parent":null,"children":[],"decl_id":null,"docs":" add multiple targets\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":694},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3174,"byte_end":3185,"line_start":38,"line_end":38,"column_start":10,"column_end":21},"name":"VertexCount","qualname":"::device::VertexCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Draw vertex count.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":695},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3231,"byte_end":3244,"line_start":40,"line_end":40,"column_start":10,"column_end":23},"name":"InstanceCount","qualname":"::device::InstanceCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Draw number of instances\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":696},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3291,"byte_end":3308,"line_start":42,"line_end":42,"column_start":10,"column_end":27},"name":"UniformBlockIndex","qualname":"::device::UniformBlockIndex","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Index of a uniform block.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":697},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3351,"byte_end":3364,"line_start":44,"line_end":44,"column_start":10,"column_end":23},"name":"AttributeSlot","qualname":"::device::AttributeSlot","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Slot for an attribute.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":698},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3418,"byte_end":3435,"line_start":46,"line_end":46,"column_start":10,"column_end":27},"name":"UniformBufferSlot","qualname":"::device::UniformBufferSlot","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Slot for a uniform buffer object.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":699},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3487,"byte_end":3498,"line_start":48,"line_end":48,"column_start":10,"column_end":21},"name":"TextureSlot","qualname":"::device::TextureSlot","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Slot a texture can be bound to.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2665},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3644,"byte_end":3656,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"NotSupported","qualname":"::device::NotSupported","value":"","parent":null,"children":[],"decl_id":null,"docs":" Generic error for features that are not supported\n by the device capabilities.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3633,"byte_end":3657,"line_start":53,"line_end":53,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":700},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3729,"byte_end":3742,"line_start":56,"line_end":56,"column_start":8,"column_end":21},"name":"as_byte_slice","qualname":"::device::as_byte_slice","value":"fn <T> (slice: &[T]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Treat a given slice as `&[u8]` for the given function call\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4063,"byte_end":4075,"line_start":67,"line_end":67,"column_start":12,"column_end":24},"name":"Capabilities","qualname":"::device::Capabilities","value":"Capabilities { shader_model, max_vertex_count, max_index_count, max_draw_buffers, max_texture_size, max_vertex_attributes, buffer_role_change_allowed, array_buffer_supported, fragment_output_supported, immutable_storage_supported, instance_base_supported, instance_call_supported, instance_rate_supported, render_targets_supported, sampler_objects_supported, srgb_color_supported, uniform_block_supported, vertex_base_supported }","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692}],"decl_id":null,"docs":" Features that the device supports.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3994,"byte_end":4016,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4052,"byte_end":4889,"line_start":67,"line_end":91,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4086,"byte_end":4098,"line_start":68,"line_end":68,"column_start":9,"column_end":21},"name":"shader_model","qualname":"::device::Capabilities::shader_model","value":"device::shade::ShaderModel","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4129,"byte_end":4145,"line_start":70,"line_end":70,"column_start":9,"column_end":25},"name":"max_vertex_count","qualname":"::device::Capabilities::max_vertex_count","value":"usize","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4162,"byte_end":4177,"line_start":71,"line_end":71,"column_start":9,"column_end":24},"name":"max_index_count","qualname":"::device::Capabilities::max_index_count","value":"usize","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4194,"byte_end":4210,"line_start":72,"line_end":72,"column_start":9,"column_end":25},"name":"max_draw_buffers","qualname":"::device::Capabilities::max_draw_buffers","value":"usize","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4227,"byte_end":4243,"line_start":73,"line_end":73,"column_start":9,"column_end":25},"name":"max_texture_size","qualname":"::device::Capabilities::max_texture_size","value":"usize","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4260,"byte_end":4281,"line_start":74,"line_end":74,"column_start":9,"column_end":30},"name":"max_vertex_attributes","qualname":"::device::Capabilities::max_vertex_attributes","value":"usize","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4421,"byte_end":4447,"line_start":78,"line_end":78,"column_start":9,"column_end":35},"name":"buffer_role_change_allowed","qualname":"::device::Capabilities::buffer_role_change_allowed","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" In GLES it is not allowed to re-bind a buffer to a different\n target than the one it was initialized with.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4464,"byte_end":4486,"line_start":80,"line_end":80,"column_start":9,"column_end":31},"name":"array_buffer_supported","qualname":"::device::Capabilities::array_buffer_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2683},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4502,"byte_end":4527,"line_start":81,"line_end":81,"column_start":9,"column_end":34},"name":"fragment_output_supported","qualname":"::device::Capabilities::fragment_output_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2684},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4543,"byte_end":4570,"line_start":82,"line_end":82,"column_start":9,"column_end":36},"name":"immutable_storage_supported","qualname":"::device::Capabilities::immutable_storage_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2685},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4586,"byte_end":4609,"line_start":83,"line_end":83,"column_start":9,"column_end":32},"name":"instance_base_supported","qualname":"::device::Capabilities::instance_base_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2686},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4625,"byte_end":4648,"line_start":84,"line_end":84,"column_start":9,"column_end":32},"name":"instance_call_supported","qualname":"::device::Capabilities::instance_call_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2687},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4664,"byte_end":4687,"line_start":85,"line_end":85,"column_start":9,"column_end":32},"name":"instance_rate_supported","qualname":"::device::Capabilities::instance_rate_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2688},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4703,"byte_end":4727,"line_start":86,"line_end":86,"column_start":9,"column_end":33},"name":"render_targets_supported","qualname":"::device::Capabilities::render_targets_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2689},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4743,"byte_end":4768,"line_start":87,"line_end":87,"column_start":9,"column_end":34},"name":"sampler_objects_supported","qualname":"::device::Capabilities::sampler_objects_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4784,"byte_end":4804,"line_start":88,"line_end":88,"column_start":9,"column_end":29},"name":"srgb_color_supported","qualname":"::device::Capabilities::srgb_color_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2691},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4820,"byte_end":4843,"line_start":89,"line_end":89,"column_start":9,"column_end":32},"name":"uniform_block_supported","qualname":"::device::Capabilities::uniform_block_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2692},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4859,"byte_end":4880,"line_start":90,"line_end":90,"column_start":9,"column_end":30},"name":"vertex_base_supported","qualname":"::device::Capabilities::vertex_base_supported","value":"bool","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2699},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":5019,"byte_end":5027,"line_start":97,"line_end":97,"column_start":5,"column_end":13},"name":"Readable","qualname":"::device::MapAccess::Readable","value":"MapAccess::Readable","parent":{"krate":0,"index":2698},"children":[],"decl_id":null,"docs":" Only allow reads.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2701},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":5060,"byte_end":5068,"line_start":99,"line_end":99,"column_start":5,"column_end":13},"name":"Writable","qualname":"::device::MapAccess::Writable","value":"MapAccess::Writable","parent":{"krate":0,"index":2698},"children":[],"decl_id":null,"docs":" Only allow writes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2703},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":5101,"byte_end":5103,"line_start":101,"line_end":101,"column_start":5,"column_end":7},"name":"RW","qualname":"::device::MapAccess::RW","value":"MapAccess::RW","parent":{"krate":0,"index":2698},"children":[],"decl_id":null,"docs":" Allow full access.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4977,"byte_end":4986,"line_start":95,"line_end":95,"column_start":10,"column_end":19},"name":"MapAccess","qualname":"::device::MapAccess","value":"MapAccess::{Readable, Writable, RW}","parent":null,"children":[{"krate":0,"index":2699},{"krate":0,"index":2701},{"krate":0,"index":2703}],"decl_id":null,"docs":" Specifies the access allowed to a buffer mapping.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":4968,"byte_end":5105,"line_start":95,"line_end":102,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2709},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":5306,"byte_end":5311,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Point","qualname":"::device::PrimitiveType::Point","value":"PrimitiveType::Point","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Each vertex represents a single point.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":5497,"byte_end":5501,"line_start":112,"line_end":112,"column_start":5,"column_end":9},"name":"Line","qualname":"::device::PrimitiveType::Line","value":"PrimitiveType::Line","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,\n e]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":5746,"byte_end":5755,"line_start":116,"line_end":116,"column_start":5,"column_end":14},"name":"LineStrip","qualname":"::device::PrimitiveType::LineStrip","value":"PrimitiveType::LineStrip","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Every two consecutive vertices represent a single line segment. Visually forms a \"path\" of\n lines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line\n line, and `b` and `c` form a line.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2715},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":5930,"byte_end":5942,"line_start":119,"line_end":119,"column_start":5,"column_end":17},"name":"TriangleList","qualname":"::device::PrimitiveType::TriangleList","value":"PrimitiveType::TriangleList","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,\n `a`, `b`, and `c` form a triangle, `d` and `e` are discarded.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":6134,"byte_end":6147,"line_start":122,"line_end":122,"column_start":5,"column_end":18},"name":"TriangleStrip","qualname":"::device::PrimitiveType::TriangleStrip","value":"PrimitiveType::TriangleStrip","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,\n d]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":6338,"byte_end":6349,"line_start":125,"line_end":125,"column_start":5,"column_end":16},"name":"TriangleFan","qualname":"::device::PrimitiveType::TriangleFan","value":"PrimitiveType::TriangleFan","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" The first vertex with the last two are forming a triangle. For example, with `[a, b, c, d\n ]`, `a` , `b`, and `c` form a triangle, and `a`, `c`, and `d` form a triangle.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2708},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":5239,"byte_end":5252,"line_start":107,"line_end":107,"column_start":10,"column_end":23},"name":"PrimitiveType","qualname":"::device::PrimitiveType","value":"PrimitiveType::{Point, Line, LineStrip, TriangleList, TriangleStrip, TriangleFan}","parent":null,"children":[{"krate":0,"index":2709},{"krate":0,"index":2711},{"krate":0,"index":2713},{"krate":0,"index":2715},{"krate":0,"index":2717},{"krate":0,"index":2719}],"decl_id":null,"docs":" Describes what geometric primitives are created from vertex data.\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":5218,"byte_end":5229,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":5230,"byte_end":6364,"line_start":107,"line_end":127,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":703},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":6433,"byte_end":6442,"line_start":130,"line_end":130,"column_start":10,"column_end":19},"name":"IndexType","qualname":"::device::IndexType","value":"attrib::IntSize","parent":null,"children":[],"decl_id":null,"docs":" A type of each index value in the mesh's index buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2729},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":6659,"byte_end":6665,"line_start":137,"line_end":137,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::device::BufferRole::Vertex","value":"BufferRole::Vertex","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" Generic vertex buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":6692,"byte_end":6697,"line_start":139,"line_end":139,"column_start":5,"column_end":10},"name":"Index","qualname":"::device::BufferRole::Index","value":"BufferRole::Index","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" Index buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":6732,"byte_end":6739,"line_start":141,"line_end":141,"column_start":5,"column_end":12},"name":"Uniform","qualname":"::device::BufferRole::Uniform","value":"BufferRole::Uniform","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" Uniform block buffer\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":6612,"byte_end":6622,"line_start":135,"line_end":135,"column_start":10,"column_end":20},"name":"BufferRole","qualname":"::device::BufferRole","value":"BufferRole::{Vertex, Index, Uniform}","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2731},{"krate":0,"index":2733}],"decl_id":null,"docs":" Role of the memory buffer. GLES doesn't chaning bind points for buffers.\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":6591,"byte_end":6602,"line_start":134,"line_end":134,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":6603,"byte_end":6742,"line_start":135,"line_end":142,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":6603,"byte_end":6742,"line_start":135,"line_end":142,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2748},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7198,"byte_end":7204,"line_start":153,"line_end":153,"column_start":5,"column_end":11},"name":"Static","qualname":"::device::BufferUsage::Static","value":"BufferUsage::Static","parent":{"krate":0,"index":2747},"children":[],"decl_id":null,"docs":" Once uploaded, this buffer will rarely change, but will be read from often.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7322,"byte_end":7329,"line_start":156,"line_end":156,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::device::BufferUsage::Dynamic","value":"BufferUsage::Dynamic","parent":{"krate":0,"index":2747},"children":[],"decl_id":null,"docs":" This buffer will be updated \"frequently\", and will be read from multiple times between\n updates.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2752},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7407,"byte_end":7413,"line_start":158,"line_end":158,"column_start":5,"column_end":11},"name":"Stream","qualname":"::device::BufferUsage::Stream","value":"BufferUsage::Stream","parent":{"krate":0,"index":2747},"children":[],"decl_id":null,"docs":" This buffer always or almost always be updated after each read.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2747},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7096,"byte_end":7107,"line_start":151,"line_end":151,"column_start":10,"column_end":21},"name":"BufferUsage","qualname":"::device::BufferUsage","value":"BufferUsage::{Static, Dynamic, Stream}","parent":null,"children":[{"krate":0,"index":2748},{"krate":0,"index":2750},{"krate":0,"index":2752}],"decl_id":null,"docs":" A hint as to how this buffer will be used.","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7075,"byte_end":7086,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7087,"byte_end":7416,"line_start":151,"line_end":159,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7087,"byte_end":7416,"line_start":151,"line_end":159,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7555,"byte_end":7565,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"BufferInfo","qualname":"::device::BufferInfo","value":"BufferInfo { role, usage, size }","parent":null,"children":[{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769}],"decl_id":null,"docs":" An information block that is immutable and associated with each buffer\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7544,"byte_end":7698,"line_start":163,"line_end":170,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7544,"byte_end":7698,"line_start":163,"line_end":170,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2767},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7589,"byte_end":7593,"line_start":165,"line_end":165,"column_start":9,"column_end":13},"name":"role","qualname":"::device::BufferInfo::role","value":"device::BufferRole","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" Role\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2768},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7634,"byte_end":7639,"line_start":167,"line_end":167,"column_start":9,"column_end":14},"name":"usage","qualname":"::device::BufferInfo::usage","value":"device::BufferUsage","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" Usage hint\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7684,"byte_end":7688,"line_start":169,"line_end":169,"column_start":9,"column_end":13},"name":"size","qualname":"::device::BufferInfo::size","value":"usize","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" Size in bytes\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7875,"byte_end":7886,"line_start":176,"line_end":176,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::device::BufferUpdateError::OutOfBounds","value":"BufferUpdateError::OutOfBounds","parent":{"krate":0,"index":2783},"children":[],"decl_id":null,"docs":" Trying to change the contents outside of the allocation.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2783},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7786,"byte_end":7803,"line_start":174,"line_end":174,"column_start":10,"column_end":27},"name":"BufferUpdateError","qualname":"::device::BufferUpdateError","value":"BufferUpdateError::{OutOfBounds}","parent":null,"children":[{"krate":0,"index":2784}],"decl_id":null,"docs":" An error happening on buffer updates.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":704},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7968,"byte_end":7977,"line_start":181,"line_end":181,"column_start":11,"column_end":20},"name":"Resources","qualname":"::device::Resources","value":"Resources: Clone + Hash + fmt::Debug + Eq + PartialEq","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"decl_id":null,"docs":" Resources pertaining to a specific API.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7935,"byte_end":7957,"line_start":180,"line_end":180,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":705},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8043,"byte_end":8049,"line_start":182,"line_end":182,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::device::Resources::Buffer","value":"type Buffer:        Copy + Clone + Hash + fmt::Debug + Eq + PartialEq + Send + Sync;","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":706},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8132,"byte_end":8143,"line_start":183,"line_end":183,"column_start":10,"column_end":21},"name":"ArrayBuffer","qualname":"::device::Resources::ArrayBuffer","value":"type ArrayBuffer:   Copy + Clone + Hash + fmt::Debug + Eq + PartialEq + Send + Sync;","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":707},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8221,"byte_end":8227,"line_start":184,"line_end":184,"column_start":10,"column_end":16},"name":"Shader","qualname":"::device::Resources::Shader","value":"type Shader:        Copy + Clone + Hash + fmt::Debug + Eq + PartialEq + Send + Sync;","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":708},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8310,"byte_end":8317,"line_start":185,"line_end":185,"column_start":10,"column_end":17},"name":"Program","qualname":"::device::Resources::Program","value":"type Program:       Copy + Clone + Hash + fmt::Debug + Eq + PartialEq + Send + Sync;","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":709},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8399,"byte_end":8410,"line_start":186,"line_end":186,"column_start":10,"column_end":21},"name":"FrameBuffer","qualname":"::device::Resources::FrameBuffer","value":"type FrameBuffer:   Copy + Clone + Hash + fmt::Debug + Eq + PartialEq + Send + Sync;","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":710},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8488,"byte_end":8495,"line_start":187,"line_end":187,"column_start":10,"column_end":17},"name":"Surface","qualname":"::device::Resources::Surface","value":"type Surface:       Copy + Clone + Hash + fmt::Debug + Eq + PartialEq + Send + Sync;","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":711},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8577,"byte_end":8584,"line_start":188,"line_end":188,"column_start":10,"column_end":17},"name":"Texture","qualname":"::device::Resources::Texture","value":"type Texture:       Copy + Clone + Hash + fmt::Debug + Eq + PartialEq + Send + Sync;","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":712},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8666,"byte_end":8673,"line_start":189,"line_end":189,"column_start":10,"column_end":17},"name":"Sampler","qualname":"::device::Resources::Sampler","value":"type Sampler:       Copy + Clone + Hash + fmt::Debug + Eq + PartialEq + Send + Sync;","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":713},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8755,"byte_end":8760,"line_start":190,"line_end":190,"column_start":10,"column_end":15},"name":"Fence","qualname":"::device::Resources::Fence","value":"type Fence:         Copy + Clone + Hash + fmt::Debug + Eq + PartialEq + Send + Sync;","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":714},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8871,"byte_end":8878,"line_start":194,"line_end":194,"column_start":11,"column_end":18},"name":"Factory","qualname":"::device::Factory","value":"Factory<R: Resources>","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":747}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8838,"byte_end":8860,"line_start":193,"line_end":193,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":716},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8935,"byte_end":8941,"line_start":196,"line_end":196,"column_start":10,"column_end":16},"name":"Mapper","qualname":"::device::Factory::Mapper","value":"type Mapper: Clone + mapping::Raw;","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Associated mapper type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":9051,"byte_end":9067,"line_start":199,"line_end":199,"column_start":8,"column_end":24},"name":"get_capabilities","qualname":"::device::Factory::get_capabilities","value":"fn <'a> (&'a self) -> &'a Capabilities","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Returns the capabilities available to the specific API implementation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":9136,"byte_end":9153,"line_start":202,"line_end":202,"column_start":8,"column_end":25},"name":"create_buffer_raw","qualname":"::device::Factory::create_buffer_raw","value":"fn (&mut self, size: usize, BufferRole, BufferUsage) -> handle::RawBuffer<R>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":9235,"byte_end":9259,"line_start":203,"line_end":203,"column_start":8,"column_end":32},"name":"create_buffer_static_raw","qualname":"::device::Factory::create_buffer_static_raw","value":"fn (&mut self, data: &[u8], BufferRole) -> handle::RawBuffer<R>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":9328,"byte_end":9348,"line_start":204,"line_end":204,"column_start":8,"column_end":28},"name":"create_buffer_static","qualname":"::device::Factory::create_buffer_static","value":"fn <T> (&mut self, data: &[T], role: BufferRole) -> handle::Buffer<R, T>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":9536,"byte_end":9557,"line_start":208,"line_end":208,"column_start":8,"column_end":29},"name":"create_buffer_dynamic","qualname":"::device::Factory::create_buffer_dynamic","value":"fn <T> (&mut self, num: usize, role: BufferRole) -> handle::Buffer<R, T>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":9766,"byte_end":9785,"line_start":213,"line_end":213,"column_start":8,"column_end":27},"name":"create_array_buffer","qualname":"::device::Factory::create_array_buffer","value":"fn (&mut self) -> Result<handle::ArrayBuffer<R>, NotSupported>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":9853,"byte_end":9866,"line_start":214,"line_end":214,"column_start":8,"column_end":21},"name":"create_shader","qualname":"::device::Factory::create_shader","value":"fn (&mut self, stage: shade::Stage, code: &[u8]) -> Result<handle::Shader<R>, shade::CreateShaderError>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":9996,"byte_end":10010,"line_start":216,"line_end":216,"column_start":8,"column_end":22},"name":"create_program","qualname":"::device::Factory::create_program","value":"fn (&mut self, builder: &program::Builder<R>) -> Result<handle::Program<R>, shade::CreateProgramError>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":10140,"byte_end":10159,"line_start":218,"line_end":218,"column_start":8,"column_end":27},"name":"create_frame_buffer","qualname":"::device::Factory::create_frame_buffer","value":"fn (&mut self) -> Result<handle::FrameBuffer<R>, NotSupported>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":10227,"byte_end":10241,"line_start":219,"line_end":219,"column_start":8,"column_end":22},"name":"create_surface","qualname":"::device::Factory::create_surface","value":"fn (&mut self, tex::SurfaceInfo) -> Result<handle::Surface<R>, tex::SurfaceError>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":10328,"byte_end":10342,"line_start":220,"line_end":220,"column_start":8,"column_end":22},"name":"create_texture","qualname":"::device::Factory::create_texture","value":"fn (&mut self, tex::TextureInfo) -> Result<handle::Texture<R>, tex::TextureError>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":10429,"byte_end":10443,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"create_sampler","qualname":"::device::Factory::create_sampler","value":"fn (&mut self, tex::SamplerInfo) -> handle::Sampler<R>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":10563,"byte_end":10580,"line_start":224,"line_end":224,"column_start":8,"column_end":25},"name":"update_buffer_raw","qualname":"::device::Factory::update_buffer_raw","value":"fn (&mut self, buf: &handle::RawBuffer<R>, data: &[u8], offset_bytes: usize) -> Result<(), BufferUpdateError>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Update the information stored in a specific buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":10720,"byte_end":10733,"line_start":226,"line_end":226,"column_start":8,"column_end":21},"name":"update_buffer","qualname":"::device::Factory::update_buffer","value":"fn <T> (&mut self, buf: &handle::Buffer<R, T>, data: &[T], offset_elements: usize) -> Result<(), BufferUpdateError>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":10986,"byte_end":11000,"line_start":230,"line_end":230,"column_start":8,"column_end":22},"name":"map_buffer_raw","qualname":"::device::Factory::map_buffer_raw","value":"fn (&mut self, &handle::RawBuffer<R>, MapAccess) -> Self::Mapper","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":11070,"byte_end":11086,"line_start":231,"line_end":231,"column_start":8,"column_end":24},"name":"unmap_buffer_raw","qualname":"::device::Factory::unmap_buffer_raw","value":"fn (&mut self, Self::Mapper) -> ()","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":11120,"byte_end":11139,"line_start":232,"line_end":232,"column_start":8,"column_end":27},"name":"map_buffer_readable","qualname":"::device::Factory::map_buffer_readable","value":"fn <T> (&mut self, &handle::Buffer<R, T>) -> mapping::Readable<T, R, Self>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":11250,"byte_end":11269,"line_start":234,"line_end":234,"column_start":8,"column_end":27},"name":"map_buffer_writable","qualname":"::device::Factory::map_buffer_writable","value":"fn <T> (&mut self, &handle::Buffer<R, T>) -> mapping::Writable<T, R, Self>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":11380,"byte_end":11393,"line_start":236,"line_end":236,"column_start":8,"column_end":21},"name":"map_buffer_rw","qualname":"::device::Factory::map_buffer_rw","value":"fn <T> (&mut self, &handle::Buffer<R, T>) -> mapping::RW<T, R, Self>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":11550,"byte_end":11568,"line_start":240,"line_end":240,"column_start":8,"column_end":26},"name":"update_texture_raw","qualname":"::device::Factory::update_texture_raw","value":"fn (&mut self, tex: &handle::Texture<R>, img: &tex::ImageInfo, data: &[u8], kind: Option<tex::Kind>) -> Result<(), tex::TextureError>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Update the information stored in a texture\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":11760,"byte_end":11774,"line_start":244,"line_end":244,"column_start":8,"column_end":22},"name":"update_texture","qualname":"::device::Factory::update_texture","value":"fn <T> (&mut self, tex: &handle::Texture<R>, img: &tex::ImageInfo, data: &[T], kind: Option<tex::Kind>) -> Result<(), tex::TextureError>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":12042,"byte_end":12057,"line_start":250,"line_end":250,"column_start":8,"column_end":23},"name":"generate_mipmap","qualname":"::device::Factory::generate_mipmap","value":"fn (&mut self, &handle::Texture<R>) -> ()","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":12144,"byte_end":12165,"line_start":253,"line_end":253,"column_start":8,"column_end":29},"name":"create_texture_static","qualname":"::device::Factory::create_texture_static","value":"fn <T> (&mut self, info: tex::TextureInfo, data: &[T]) -> Result<handle::Texture<R>, tex::TextureError>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Create a new texture with given data\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":750},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":12664,"byte_end":12674,"line_start":266,"line_end":266,"column_start":10,"column_end":20},"name":"SubmitInfo","qualname":"::device::SubmitInfo","value":"(&'a D::CommandBuffer, &'a draw::DataBuffer,\n &'a handle::Manager<D::Resources>)","parent":null,"children":[],"decl_id":null,"docs":" All the data needed simultaneously for submitting a command buffer for\n execution on a device.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":753},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":12871,"byte_end":12877,"line_start":273,"line_end":273,"column_start":11,"column_end":17},"name":"Device","qualname":"::device::Device","value":"Device","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"decl_id":null,"docs":" An interface for performing draw calls using a specific graphics API\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":754},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":12924,"byte_end":12933,"line_start":275,"line_end":275,"column_start":10,"column_end":19},"name":"Resources","qualname":"::device::Device::Resources","value":"type Resources: Resources;","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Associated resources type.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":755},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":12995,"byte_end":13008,"line_start":277,"line_end":277,"column_start":10,"column_end":23},"name":"CommandBuffer","qualname":"::device::Device::CommandBuffer","value":"type CommandBuffer: draw::CommandBuffer<Self::Resources>;","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Associated command buffer type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":13135,"byte_end":13151,"line_start":280,"line_end":280,"column_start":8,"column_end":24},"name":"get_capabilities","qualname":"::device::Device::get_capabilities","value":"fn <'a> (&'a self) -> &'a Capabilities","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Returns the capabilities available to the specific API implementation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":13245,"byte_end":13256,"line_start":283,"line_end":283,"column_start":8,"column_end":19},"name":"reset_state","qualname":"::device::Device::reset_state","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Reset all the states to disabled/default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":13324,"byte_end":13330,"line_start":286,"line_end":286,"column_start":8,"column_end":14},"name":"submit","qualname":"::device::Device::submit","value":"fn (&mut self, SubmitInfo<Self>) -> ()","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Submit a command buffer for execution.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":13432,"byte_end":13439,"line_start":289,"line_end":289,"column_start":8,"column_end":15},"name":"cleanup","qualname":"::device::Device::cleanup","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Cleanup unused resources, to be called between frames.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":761},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":13551,"byte_end":13562,"line_start":294,"line_end":294,"column_start":11,"column_end":22},"name":"DeviceFence","qualname":"::device::DeviceFence","value":"DeviceFence<R: Resources>: Device<Resources = R>","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764}],"decl_id":null,"docs":" Extension to the Device that allows for submitting of commands\n around a fence\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":13828,"byte_end":13841,"line_start":299,"line_end":299,"column_start":8,"column_end":21},"name":"fenced_submit","qualname":"::device::DeviceFence::fenced_submit","value":"fn (&mut self, SubmitInfo<Self>, after: Option<handle::Fence<R>>) -> handle::Fence<R>","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":" Submit a command buffer to the stream creating a fence\n the fence is signaled after the GPU has executed all commands\n in the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":14033,"byte_end":14043,"line_start":303,"line_end":303,"column_start":8,"column_end":18},"name":"fence_wait","qualname":"::device::DeviceFence::fence_wait","value":"fn (&mut self, fence: &handle::Fence<R>) -> ()","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":" Wait on the supplied fence stalling the current thread until\n the fence is satisfied\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":765},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"extra","qualname":"::extra","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/mod.rs","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":794},{"krate":0,"index":803}],"decl_id":null,"docs":" Renderer extensions.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/mod.rs","byte_start":95694,"byte_end":95716,"line_start":17,"line_end":17,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":766},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"factory","qualname":"::extra::factory","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":791}],"decl_id":null,"docs":" Factory extensions\n Factory extension. Provides resource construction shortcuts.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":778},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":96683,"byte_end":96693,"line_start":25,"line_end":25,"column_start":11,"column_end":21},"name":"FactoryExt","qualname":"::extra::factory::FactoryExt","value":"FactoryExt<R: device::Resources>: device::Factory<R>","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" Factory extension trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":96799,"byte_end":96810,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"create_mesh","qualname":"::extra::factory::FactoryExt::create_mesh","value":"fn <T> (&mut self, data: &[T]) -> Mesh<R>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Create a new mesh from the given vertex data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":97192,"byte_end":97204,"line_start":35,"line_end":35,"column_start":8,"column_end":20},"name":"link_program","qualname":"::extra::factory::FactoryExt::link_program","value":"fn (&mut self, vs_code: &[u8], fs_code: &[u8]) -> Result<handle::Program<R>, ProgramError>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Create a simple program given a vertex shader with a fragment one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":97944,"byte_end":97965,"line_start":56,"line_end":56,"column_start":8,"column_end":29},"name":"compile_shader_source","qualname":"::extra::factory::FactoryExt::compile_shader_source","value":"fn (&mut self, stage: Stage, source: ShaderSource) -> Result<handle::Shader<R>, CreateShaderError>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Compile a single shader of a given stage, automatically picking the right\n shader variant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":98455,"byte_end":98474,"line_start":66,"line_end":66,"column_start":8,"column_end":27},"name":"link_program_source","qualname":"::extra::factory::FactoryExt::link_program_source","value":"fn (&mut self, vs_src: ShaderSource, fs_src: ShaderSource) -> Result<handle::Program<R>, ProgramError>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Create a simple program given `ShaderSource` versions of vertex and\n fragment shaders, automatically picking available shader variant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":99224,"byte_end":99244,"line_start":86,"line_end":86,"column_start":8,"column_end":28},"name":"create_texture_rgba8","qualname":"::extra::factory::FactoryExt::create_texture_rgba8","value":"fn (&mut self, width: u16, height: u16) -> Result<handle::Texture<R>, tex::TextureError>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Create a simple RGBA8 2D texture.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":99666,"byte_end":99693,"line_start":99,"line_end":99,"column_start":8,"column_end":35},"name":"create_texture_rgba8_static","qualname":"::extra::factory::FactoryExt::create_texture_rgba8_static","value":"fn (&mut self, width: u16, height: u16, data: &[u32]) -> Result<handle::Texture<R>, tex::TextureError>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Create RGBA8 2D texture with given contents and mipmap chain.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":100320,"byte_end":100348,"line_start":119,"line_end":119,"column_start":8,"column_end":36},"name":"create_texture_depth_stencil","qualname":"::extra::factory::FactoryExt::create_texture_depth_stencil","value":"fn (&mut self, width: u16, height: u16) -> Result<handle::Texture<R>, tex::TextureError>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Create a simple depth+stencil 2D texture.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":100784,"byte_end":100805,"line_start":132,"line_end":132,"column_start":8,"column_end":29},"name":"create_sampler_linear","qualname":"::extra::factory::FactoryExt::create_sampler_linear","value":"fn (&mut self) -> handle::Sampler<R>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Create a linear sampler with clamping to border.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":794},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shade","qualname":"::extra::shade","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":2792},{"krate":0,"index":2807},{"krate":0,"index":2804},{"krate":0,"index":2802},{"krate":0,"index":2809},{"krate":0,"index":2827},{"krate":0,"index":2824},{"krate":0,"index":2820},{"krate":0,"index":2817},{"krate":0,"index":799}],"decl_id":null,"docs":" Shader extensions\n Shader source extension\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":101898,"byte_end":101904,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::extra::shade::ProgramError::Vertex","value":"ProgramError::Vertex(CreateShaderError)","parent":{"krate":0,"index":2792},"children":[],"decl_id":null,"docs":" Unable to compile the vertex shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2796},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":101975,"byte_end":101983,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Fragment","qualname":"::extra::shade::ProgramError::Fragment","value":"ProgramError::Fragment(CreateShaderError)","parent":{"krate":0,"index":2792},"children":[],"decl_id":null,"docs":" Unable to compile the fragment shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102031,"byte_end":102035,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Link","qualname":"::extra::shade::ProgramError::Link","value":"ProgramError::Link(CreateProgramError)","parent":{"krate":0,"index":2792},"children":[],"decl_id":null,"docs":" Unable to link\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2792},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":101835,"byte_end":101847,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"ProgramError","qualname":"::extra::shade::ProgramError","value":"ProgramError::{Vertex, Fragment, Link}","parent":null,"children":[{"krate":0,"index":2793},{"krate":0,"index":2796},{"krate":0,"index":2799}],"decl_id":null,"docs":" Program linking error\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2809},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102210,"byte_end":102222,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"ShaderSource","qualname":"::extra::shade::ShaderSource","value":"ShaderSource { glsl_120, glsl_130, glsl_140, glsl_150, glsl_430, targets }","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816}],"decl_id":null,"docs":" A type storing shader source for different graphics APIs and versions.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102135,"byte_end":102157,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102199,"byte_end":102468,"line_start":33,"line_end":41,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2811},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102237,"byte_end":102245,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"name":"glsl_120","qualname":"::extra::shade::ShaderSource::glsl_120","value":"std::option::Option<&'a [u8]>","parent":{"krate":0,"index":2809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2812},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102273,"byte_end":102281,"line_start":35,"line_end":35,"column_start":9,"column_end":17},"name":"glsl_130","qualname":"::extra::shade::ShaderSource::glsl_130","value":"std::option::Option<&'a [u8]>","parent":{"krate":0,"index":2809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2813},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102309,"byte_end":102317,"line_start":36,"line_end":36,"column_start":9,"column_end":17},"name":"glsl_140","qualname":"::extra::shade::ShaderSource::glsl_140","value":"std::option::Option<&'a [u8]>","parent":{"krate":0,"index":2809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2814},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102345,"byte_end":102353,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"glsl_150","qualname":"::extra::shade::ShaderSource::glsl_150","value":"std::option::Option<&'a [u8]>","parent":{"krate":0,"index":2809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2815},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102381,"byte_end":102389,"line_start":38,"line_end":38,"column_start":9,"column_end":17},"name":"glsl_430","qualname":"::extra::shade::ShaderSource::glsl_430","value":"std::option::Option<&'a [u8]>","parent":{"krate":0,"index":2809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2816},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102443,"byte_end":102450,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"name":"targets","qualname":"::extra::shade::ShaderSource::targets","value":"&'a [&'a str]","parent":{"krate":0,"index":2809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102629,"byte_end":102634,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"empty","qualname":"<ShaderSource>::empty","value":"fn () -> ShaderSource<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty shader source. Useful for specifying the remaining\n structure members upon construction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102961,"byte_end":102967,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"choose","qualname":"<ShaderSource>::choose","value":"fn (&self, model: ShaderModel) -> Result<&'a [u8], ()>","parent":null,"children":[],"decl_id":null,"docs":" Pick one of the stored versions that is the highest supported by the device.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":803},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::extra::stream","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":815},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":845},{"krate":0,"index":854},{"krate":0,"index":859},{"krate":0,"index":866},{"krate":0,"index":870},{"krate":0,"index":874}],"decl_id":null,"docs":" Render stream\n Render stream extension. Stream is something you can send batches to.\n It includes a renderer and an output, stored by constrained types.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":824},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":104643,"byte_end":104649,"line_start":28,"line_end":28,"column_start":11,"column_end":17},"name":"Window","qualname":"::extra::stream::Window","value":"Window<R: Resources>: Output<R>","parent":null,"children":[{"krate":0,"index":826}],"decl_id":null,"docs":" Generic output window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":104721,"byte_end":104733,"line_start":30,"line_end":30,"column_start":8,"column_end":20},"name":"swap_buffers","qualname":"::extra::stream::Window::swap_buffers","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Swap front and back buffers.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":827},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":104790,"byte_end":104796,"line_start":34,"line_end":34,"column_start":11,"column_end":17},"name":"Stream","qualname":"::extra::stream::Stream","value":"Stream<R: Resources>","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":843}],"decl_id":null,"docs":" Render stream abstraction.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":829},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":104880,"byte_end":104893,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"name":"CommandBuffer","qualname":"::extra::stream::Stream::CommandBuffer","value":"type CommandBuffer: CommandBuffer<R>;","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Command buffer type to constraint the `Renderer`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":830},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":104957,"byte_end":104963,"line_start":38,"line_end":38,"column_start":10,"column_end":16},"name":"Output","qualname":"::extra::stream::Stream::Output","value":"type Output: Output<R>;","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Constrained `Output` type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":105013,"byte_end":105023,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"get_output","qualname":"::extra::stream::Stream::get_output","value":"fn (&self) -> &Self::Output","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Get the output only.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":105103,"byte_end":105109,"line_start":44,"line_end":44,"column_start":8,"column_end":14},"name":"access","qualname":"::extra::stream::Stream::access","value":"fn (&mut self) -> (&mut Renderer<R, Self::CommandBuffer>, &Self::Output)","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Access both of the stream components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":105245,"byte_end":105261,"line_start":47,"line_end":47,"column_start":8,"column_end":24},"name":"get_aspect_ratio","qualname":"::extra::stream::Stream::get_aspect_ratio","value":"fn (&self) -> f32","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Get width/height aspect, needed for projections.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":105397,"byte_end":105402,"line_start":53,"line_end":53,"column_start":8,"column_end":13},"name":"clear","qualname":"::extra::stream::Stream::clear","value":"fn (&mut self, data: ClearData) -> ()","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Clear the canvas.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":105609,"byte_end":105616,"line_start":60,"line_end":60,"column_start":8,"column_end":15},"name":"blit_on","qualname":"::extra::stream::Stream::blit_on","value":"fn <I> (&mut self, source: &I, source_rect: Rect, dest_rect: Rect, mirror: Mirror, mask: Mask) -> Result<(), BlitError>","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Blit on this stream from another `Output`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":105962,"byte_end":105969,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"blit_to","qualname":"::extra::stream::Stream::blit_to","value":"fn <O> (&mut self, destination: &O, dest_rect: Rect, source_rect: Rect, mirror: Mirror, mask: Mask) -> Result<(), BlitError>","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Blit this stream to another `Output`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":106310,"byte_end":106314,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"draw","qualname":"::extra::stream::Stream::draw","value":"fn <B> (&mut self, batch: &B) -> Result<(), DrawError<Error>>","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Draw a simple `Batch`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":106665,"byte_end":106679,"line_start":90,"line_end":90,"column_start":8,"column_end":22},"name":"draw_instanced","qualname":"::extra::stream::Stream::draw_instanced","value":"fn <B> (&mut self, batch: &B, count: InstanceCount, base: VertexCount) -> Result<(), DrawError<Error>>","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Draw an instanced `Batch`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":107004,"byte_end":107009,"line_start":98,"line_end":98,"column_start":8,"column_end":13},"name":"flush","qualname":"::extra::stream::Stream::flush","value":"fn <D> (&mut self, device: &mut D) -> ()","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Execute everything and clear the command buffer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":854},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":107589,"byte_end":107600,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"OwnedStream","qualname":"::extra::stream::OwnedStream","value":"OwnedStream { ren, out }","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"decl_id":null,"docs":" A stream that owns its components.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":857},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":107641,"byte_end":107644,"line_start":124,"line_end":124,"column_start":9,"column_end":12},"name":"ren","qualname":"::extra::stream::OwnedStream::ren","value":"render::Renderer<<D as device::Device>::Resources, <D as device::Device>::CommandBuffer>","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":" Renderer\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":858},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":107711,"byte_end":107714,"line_start":126,"line_end":126,"column_start":9,"column_end":12},"name":"out","qualname":"::extra::stream::OwnedStream::out","value":"O","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":" Output\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":108192,"byte_end":108199,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"present","qualname":"<OwnedStream<D, W>>::present","value":"fn (&mut self, device: &mut D) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Show what we've been drawing all this time.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":870},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":108415,"byte_end":108428,"line_start":155,"line_end":155,"column_start":11,"column_end":24},"name":"StreamFactory","qualname":"::extra::stream::StreamFactory","value":"StreamFactory<D: Device>: RenderFactory<D::Resources, D::CommandBuffer>","parent":null,"children":[{"krate":0,"index":872}],"decl_id":null,"docs":" A render factory extension that allows creating streams with new renderers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":108545,"byte_end":108558,"line_start":157,"line_end":157,"column_start":8,"column_end":21},"name":"create_stream","qualname":"::extra::stream::StreamFactory::create_stream","value":"fn <O> (&mut self, output: O) -> OwnedStream<D, O>","parent":{"krate":0,"index":870},"children":[],"decl_id":null,"docs":" Create a new stream from a given output.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":877},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879}],"decl_id":null,"docs":" Macros for deriving `VertexFormat` and `ShaderParam`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":880},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"render","qualname":"::render","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":962},{"krate":0,"index":1014},{"krate":0,"index":1085},{"krate":0,"index":1124},{"krate":0,"index":3113},{"krate":0,"index":3125},{"krate":0,"index":3123},{"krate":0,"index":3120},{"krate":0,"index":3127},{"krate":0,"index":3145},{"krate":0,"index":3142},{"krate":0,"index":3138},{"krate":0,"index":1145},{"krate":0,"index":1147},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1165},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":3148},{"krate":0,"index":3169},{"krate":0,"index":3166},{"krate":0,"index":3162},{"krate":0,"index":1179},{"krate":0,"index":1191},{"krate":0,"index":1230},{"krate":0,"index":1234},{"krate":0,"index":1235}],"decl_id":null,"docs":" High-level, platform independent, bindless rendering API.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":115064,"byte_end":115086,"line_start":17,"line_end":17,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":910},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"batch","qualname":"::render::batch","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":2829},{"krate":0,"index":2844},{"krate":0,"index":2842},{"krate":0,"index":2839},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":2846},{"krate":0,"index":2855},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":2858},{"krate":0,"index":2864},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":957}],"decl_id":null,"docs":" Batches\n Batches are structures containing all the data required for the draw call,\n except for the target frame. Here we define the `Batch` trait as well as\n `RefBatch` and `OwnedBatch` implementations.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2830},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":141841,"byte_end":141845,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"name":"Mesh","qualname":"::render::batch::Error::Mesh","value":"Error::Mesh(mesh::Error)","parent":{"krate":0,"index":2829},"children":[],"decl_id":null,"docs":" Error connecting mesh attributes\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2833},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":141907,"byte_end":141917,"line_start":34,"line_end":34,"column_start":5,"column_end":15},"name":"Parameters","qualname":"::render::batch::Error::Parameters","value":"Error::Parameters(ParameterError)","parent":{"krate":0,"index":2829},"children":[],"decl_id":null,"docs":" Error connecting shader parameters\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2836},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":141969,"byte_end":141974,"line_start":36,"line_end":36,"column_start":5,"column_end":10},"name":"Other","qualname":"::render::batch::Error::Other","value":"Error::Other(String)","parent":{"krate":0,"index":2829},"children":[],"decl_id":null,"docs":" Another kind of error\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2829},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":141788,"byte_end":141793,"line_start":30,"line_end":30,"column_start":10,"column_end":15},"name":"Error","qualname":"::render::batch::Error","value":"Error::{Mesh, Parameters, Other}","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":2833},{"krate":0,"index":2836}],"decl_id":null,"docs":" An error occurring at batch creation\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":922},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":142037,"byte_end":142046,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"name":"BatchData","qualname":"::render::batch::BatchData","value":"(&'a mesh::Mesh<R>, mesh::AttributeIter, &'a mesh::Slice<R>, &'a DrawState)","parent":null,"children":[],"decl_id":null,"docs":" Return type for `Batch::get_data()``\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":925},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":142220,"byte_end":142225,"line_start":44,"line_end":44,"column_start":11,"column_end":16},"name":"Batch","qualname":"::render::batch::Batch","value":"Batch<R: Resources>","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"decl_id":null,"docs":" Abstract batch trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":142311,"byte_end":142319,"line_start":46,"line_end":46,"column_start":8,"column_end":16},"name":"get_data","qualname":"::render::batch::Batch::get_data","value":"fn (&self) -> Result<BatchData<R>, Error>","parent":{"krate":0,"index":925},"children":[],"decl_id":null,"docs":" Obtain information about the mesh, program, and state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":142403,"byte_end":142414,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"fill_params","qualname":"::render::batch::Batch::fill_params","value":"fn (&self, &mut ParamStorage<R>) -> Result<&ProgramHandle<R>, Error>","parent":{"krate":0,"index":925},"children":[],"decl_id":null,"docs":" Fill shader parameter values\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":929},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":142594,"byte_end":142602,"line_start":53,"line_end":53,"column_start":10,"column_end":18},"name":"Implicit","qualname":"::render::batch::Implicit","value":"(&'a mesh::Mesh<T::Resources>, mesh::Slice<T::Resources>,\n &'a ProgramHandle<T::Resources>, &'a T, &'a DrawState)","parent":null,"children":[],"decl_id":null,"docs":" A batch that is constructed on the fly when rendering.\n Meant to be a struct, blocked by #614\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":932},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":142798,"byte_end":142802,"line_start":62,"line_end":62,"column_start":8,"column_end":12},"name":"bind","qualname":"::render::batch::bind","value":"fn <'a, T> (draw_state: &'a DrawState, mesh: &'a mesh::Mesh<T::Resources>, slice: mesh::Slice<T::Resources>, program: &'a ProgramHandle<T::Resources>, data: &'a T) -> Implicit<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Create an implicit batch\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":144063,"byte_end":144067,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"Full","qualname":"::render::batch::Full","value":"Full { slice, params, state }","parent":null,"children":[{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2853},{"krate":0,"index":2854}],"decl_id":null,"docs":" Full batch - contains everything needed for rendering.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":144176,"byte_end":144181,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"slice","qualname":"::render::batch::Full::slice","value":"render::mesh::Slice<<T as render::shade::ShaderParam>::Resources>","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":" Mesh slice\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":144242,"byte_end":144248,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"params","qualname":"::render::batch::Full::params","value":"T","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":" Parameter data.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2854},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":144347,"byte_end":144352,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"state","qualname":"::render::batch::Full::state","value":"draw_state::DrawState","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":" Draw state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":144442,"byte_end":144445,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<Full<T>>::new","value":"fn (mesh: mesh::Mesh<T::Resources>, program: ProgramHandle<T::Resources>, params: T) -> Result<Full<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new full batch\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2858},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":145781,"byte_end":145785,"line_start":149,"line_end":149,"column_start":12,"column_end":16},"name":"Core","qualname":"::render::batch::Core","value":"Core {  }","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863}],"decl_id":null,"docs":" Core batch - a minimal sealed batch.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":947},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":146192,"byte_end":146200,"line_start":160,"line_end":160,"column_start":10,"column_end":18},"name":"Complete","qualname":"::render::batch::Complete","value":"(&'a Core<T>, &'a mesh::Slice<T::Resources>, &'a T, &'a DrawState)","parent":null,"children":[],"decl_id":null,"docs":" A `Core` completed by a mesh slice, shader parameters, and a state.\n Implements `Batch` thus can be drawn.\n It is meant to be a struct, but we have lots of lifetime issues\n with associated resources, binding which looks nasty (#614)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":146385,"byte_end":146388,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"new","qualname":"<Core<T>>::new","value":"fn (mesh: mesh::Mesh<T::Resources>, program: ProgramHandle<T::Resources>) -> Result<Core<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new core batch.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":147078,"byte_end":147082,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"with","qualname":"<Core<T>>::with","value":"fn <'a> (&'a self, slice: &'a mesh::Slice<T::Resources>, params: &'a T, state: &'a DrawState) -> Complete<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Add missing components to complete the batch for rendering.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":147311,"byte_end":147318,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"program","qualname":"<Core<T>>::program","value":"fn (&self) -> &ProgramHandle<T::Resources>","parent":null,"children":[],"decl_id":null,"docs":" Read the ProgramHandle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":147422,"byte_end":147426,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"mesh","qualname":"<Core<T>>::mesh","value":"fn (&self) -> &mesh::Mesh<T::Resources>","parent":null,"children":[],"decl_id":null,"docs":" Read the Mesh\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":962},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mesh","qualname":"::render::mesh","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":969},{"krate":0,"index":2867},{"krate":0,"index":2886},{"krate":0,"index":2883},{"krate":0,"index":2880},{"krate":0,"index":2876},{"krate":0,"index":2872},{"krate":0,"index":973},{"krate":0,"index":2889},{"krate":0,"index":2907},{"krate":0,"index":2904},{"krate":0,"index":2901},{"krate":0,"index":2897},{"krate":0,"index":2893},{"krate":0,"index":976},{"krate":0,"index":2910},{"krate":0,"index":2923},{"krate":0,"index":2920},{"krate":0,"index":2916},{"krate":0,"index":985},{"krate":0,"index":2926},{"krate":0,"index":2949},{"krate":0,"index":2946},{"krate":0,"index":2942},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":2952},{"krate":0,"index":2955},{"krate":0,"index":2960},{"krate":0,"index":2963},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":1000},{"krate":0,"index":2976},{"krate":0,"index":2995},{"krate":0,"index":2993},{"krate":0,"index":2990},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":2997},{"krate":0,"index":3000},{"krate":0,"index":2999},{"krate":0,"index":1004},{"krate":0,"index":3002},{"krate":0,"index":3005},{"krate":0,"index":3004},{"krate":0,"index":1007}],"decl_id":null,"docs":" Meshes\n Mesh loading.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2867},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":149334,"byte_end":149343,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::render::mesh::Attribute","value":"Attribute { name, buffer, format }","parent":null,"children":[{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871}],"decl_id":null,"docs":" Describes a single attribute of a vertex buffer, including its type, name, etc.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":149323,"byte_end":149568,"line_start":28,"line_end":35,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":149409,"byte_end":149413,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"name","qualname":"::render::mesh::Attribute::name","value":"std::string::String","parent":{"krate":0,"index":2867},"children":[],"decl_id":null,"docs":" A name to match the shader input\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2870},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":149473,"byte_end":149479,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"buffer","qualname":"::render::mesh::Attribute::buffer","value":"device::handle::RawBuffer<R>","parent":{"krate":0,"index":2867},"children":[],"decl_id":null,"docs":" Vertex buffer to contain the data\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2871},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":149543,"byte_end":149549,"line_start":34,"line_end":34,"column_start":9,"column_end":15},"name":"format","qualname":"::render::mesh::Attribute::format","value":"device::attrib::Format","parent":{"krate":0,"index":2867},"children":[],"decl_id":null,"docs":" Format of the attribute\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":973},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":149679,"byte_end":149691,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"VertexFormat","qualname":"::render::mesh::VertexFormat","value":"VertexFormat","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" A trait implemented automatically for user vertex structure by\n `#[vertex_format] attribute\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":149770,"byte_end":149778,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"generate","qualname":"::render::mesh::VertexFormat::generate","value":"fn <R> (buffer: &handle::Buffer<R, Self>) -> Vec<Attribute<R>>","parent":{"krate":0,"index":973},"children":[],"decl_id":null,"docs":" Create the attributes for this type, using the given buffer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2889},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":149960,"byte_end":149964,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Mesh","qualname":"::render::mesh::Mesh","value":"Mesh { num_vertices, attributes }","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2892}],"decl_id":null,"docs":" Describes geometry to render.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":149949,"byte_end":150130,"line_start":46,"line_end":51,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2891},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":150029,"byte_end":150041,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"name":"num_vertices","qualname":"::render::mesh::Mesh::num_vertices","value":"u32","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Number of vertices in the mesh.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2892},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":150098,"byte_end":150108,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"attributes","qualname":"::render::mesh::Mesh::attributes","value":"std::vec::Vec<render::mesh::Attribute<R>>","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Vertex attributes to use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":150263,"byte_end":150266,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<Mesh<R>>::new","value":"fn (nv: VertexCount) -> Mesh<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh, which is a `TriangleList` with no attributes and `nv` vertices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":150493,"byte_end":150504,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"from_format","qualname":"<Mesh<R>>::from_format","value":"fn <V> (buf: handle::Buffer<R, V>, nv: VertexCount) -> Mesh<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Mesh` from a struct that implements `VertexFormat` and a buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":150870,"byte_end":150891,"line_start":74,"line_end":74,"column_start":12,"column_end":33},"name":"from_format_instanced","qualname":"<Mesh<R>>::from_format_instanced","value":"fn <V, U> (buf: handle::Buffer<R, V>, nv: VertexCount, inst: handle::Buffer<R, U>) -> Mesh<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new intanced `Mesh` given a vertex buffer and an instance buffer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2910},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":151919,"byte_end":151924,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"Slice","qualname":"::render::mesh::Slice","value":"Slice { start, end, prim_type, kind }","parent":null,"children":[{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915}],"decl_id":null,"docs":" Description of a subset of `Mesh` data to render.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2912},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":151990,"byte_end":151995,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"start","qualname":"::render::mesh::Slice::start","value":"u32","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Start index of vertices to draw.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":152057,"byte_end":152060,"line_start":107,"line_end":107,"column_start":9,"column_end":12},"name":"end","qualname":"::render::mesh::Slice::end","value":"u32","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" End index of vertices to draw.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":152144,"byte_end":152153,"line_start":109,"line_end":109,"column_start":9,"column_end":18},"name":"prim_type","qualname":"::render::mesh::Slice::prim_type","value":"device::PrimitiveType","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Primitive type to render collections of vertices as.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":152230,"byte_end":152234,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"name":"kind","qualname":"::render::mesh::Slice::kind","value":"render::mesh::SliceKind<R>","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Source of the vertex ordering when drawing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":152346,"byte_end":152360,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"get_prim_count","qualname":"<Slice<R>>::get_prim_count","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of primitives in this slice.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2928},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":152869,"byte_end":152875,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::render::mesh::SliceKind::Vertex","value":"SliceKind::Vertex","parent":{"krate":0,"index":2926},"children":[],"decl_id":null,"docs":" Render vertex data directly from the `Mesh`'s buffer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2930},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":153509,"byte_end":153515,"line_start":143,"line_end":143,"column_start":5,"column_end":11},"name":"Index8","qualname":"::render::mesh::SliceKind::Index8","value":"SliceKind::Index8(handle::Buffer<R, u8>, VertexCount)","parent":{"krate":0,"index":2926},"children":[],"decl_id":null,"docs":" The `Index*` buffer contains a list of indices into the `Mesh`\n data, so every vertex attribute does not need to be duplicated, only\n its position in the `Mesh`. The base index is added to this index\n before fetching the vertex from the buffer.  For example, when drawing\n a square, two triangles are needed.  Using only `Vertex`, one\n would need 6 separate vertices, 3 for each triangle. However, two of\n the vertices will be identical, wasting space for the duplicated\n attributes.  Instead, the `Mesh` can store 4 vertices and an\n `Index8` can be used instead.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2934},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":153600,"byte_end":153607,"line_start":145,"line_end":145,"column_start":5,"column_end":12},"name":"Index16","qualname":"::render::mesh::SliceKind::Index16","value":"SliceKind::Index16(handle::Buffer<R, u16>, VertexCount)","parent":{"krate":0,"index":2926},"children":[],"decl_id":null,"docs":" As `Index8` but with `u16` indices\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2938},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":153693,"byte_end":153700,"line_start":147,"line_end":147,"column_start":5,"column_end":12},"name":"Index32","qualname":"::render::mesh::SliceKind::Index32","value":"SliceKind::Index32(handle::Buffer<R, u32>, VertexCount)","parent":{"krate":0,"index":2926},"children":[],"decl_id":null,"docs":" As `Index8` but with `u32` indices\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2926},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":152777,"byte_end":152786,"line_start":131,"line_end":131,"column_start":10,"column_end":19},"name":"SliceKind","qualname":"::render::mesh::SliceKind","value":"SliceKind::{Vertex, Index8, Index16, Index32}","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2930},{"krate":0,"index":2934},{"krate":0,"index":2938}],"decl_id":null,"docs":" Source of vertex ordering for a slice\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":989},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":153812,"byte_end":153819,"line_start":151,"line_end":151,"column_start":11,"column_end":18},"name":"ToSlice","qualname":"::render::mesh::ToSlice","value":"ToSlice<R: Resources>","parent":null,"children":[{"krate":0,"index":991}],"decl_id":null,"docs":" A helper trait for cleanly getting the slice of a type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":153876,"byte_end":153884,"line_start":153,"line_end":153,"column_start":8,"column_end":16},"name":"to_slice","qualname":"::render::mesh::ToSlice::to_slice","value":"fn (&self, pt: PrimitiveType) -> Slice<R>","parent":{"krate":0,"index":989},"children":[],"decl_id":null,"docs":" Get the slice of a type.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":992},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":153989,"byte_end":154001,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"ToIndexSlice","qualname":"::render::mesh::ToIndexSlice","value":"ToIndexSlice<R: Resources>","parent":null,"children":[{"krate":0,"index":994}],"decl_id":null,"docs":" A helper trait to build index slices from data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":154054,"byte_end":154062,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"to_slice","qualname":"::render::mesh::ToIndexSlice::to_slice","value":"fn <F> (self, factory: &mut F, prim: PrimitiveType) -> Slice<R>","parent":{"krate":0,"index":992},"children":[],"decl_id":null,"docs":" Make an index slice.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":155387,"byte_end":155401,"line_start":201,"line_end":201,"column_start":10,"column_end":24},"name":"AttributeIndex","qualname":"::render::mesh::AttributeIndex","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Index of a vertex attribute inside the mesh\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2977},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":155575,"byte_end":155591,"line_start":207,"line_end":207,"column_start":5,"column_end":21},"name":"AttributeMissing","qualname":"::render::mesh::Error::AttributeMissing","value":"Error::AttributeMissing(String)","parent":{"krate":0,"index":2976},"children":[],"decl_id":null,"docs":" A required attribute was missing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":155699,"byte_end":155712,"line_start":209,"line_end":209,"column_start":5,"column_end":18},"name":"AttributeType","qualname":"::render::mesh::Error::AttributeType","value":"Error::AttributeType(String, shade::BaseType)","parent":{"krate":0,"index":2976},"children":[],"decl_id":null,"docs":" An attribute's type from the vertex format differed from the type used in the shader.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":155797,"byte_end":155811,"line_start":211,"line_end":211,"column_start":5,"column_end":19},"name":"AttributeIndex","qualname":"::render::mesh::Error::AttributeIndex","value":"Error::AttributeIndex(AttributeIndex)","parent":{"krate":0,"index":2976},"children":[],"decl_id":null,"docs":" An attribute index is out of supported bounds\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2987},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":155883,"byte_end":155899,"line_start":213,"line_end":213,"column_start":5,"column_end":21},"name":"ShaderInputIndex","qualname":"::render::mesh::Error::ShaderInputIndex","value":"Error::ShaderInputIndex(usize)","parent":{"krate":0,"index":2976},"children":[],"decl_id":null,"docs":" An input index is out of supported bounds\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2976},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":155521,"byte_end":155526,"line_start":205,"line_end":205,"column_start":10,"column_end":15},"name":"Error","qualname":"::render::mesh::Error","value":"Error::{AttributeMissing, AttributeType, AttributeIndex, ShaderInputIndex}","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2984},{"krate":0,"index":2987}],"decl_id":null,"docs":" Describes kinds of errors that may occur in the mesh linking\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2997},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":156163,"byte_end":156176,"line_start":222,"line_end":222,"column_start":12,"column_end":25},"name":"AttributeIter","qualname":"::render::mesh::AttributeIter","value":"AttributeIter {  }","parent":null,"children":[{"krate":0,"index":2998}],"decl_id":null,"docs":" An iterator over mesh attributes.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":156152,"byte_end":156196,"line_start":222,"line_end":224,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":3002},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":156557,"byte_end":156561,"line_start":238,"line_end":238,"column_start":12,"column_end":16},"name":"Link","qualname":"::render::mesh::Link","value":"Link {  }","parent":null,"children":[{"krate":0,"index":3003}],"decl_id":null,"docs":" Holds a remapping table from shader inputs to mesh attributes.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":156546,"byte_end":156581,"line_start":238,"line_end":240,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":156759,"byte_end":156762,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<Link>::new","value":"fn <R> (mesh: &Mesh<R>, pinfo: &shade::ProgramInfo) -> Result<Link, Error>","parent":null,"children":[],"decl_id":null,"docs":" Match mesh attributes against shader inputs, produce a mesh link.\n Exposed to public to allow external `Batch` implementations to use it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":157577,"byte_end":157586,"line_start":262,"line_end":262,"column_start":12,"column_end":21},"name":"from_iter","qualname":"<Link>::from_iter","value":"fn <I> (iter: I) -> Result<Link, Error>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new link from an iterator over attribute indices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":158223,"byte_end":158230,"line_start":280,"line_end":280,"column_start":12,"column_end":19},"name":"to_iter","qualname":"<Link>::to_iter","value":"fn (&self) -> AttributeIter","parent":null,"children":[],"decl_id":null,"docs":" Convert to an iterator returning attribute indices\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shade","qualname":"::render::shade","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":3007},{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3033},{"krate":0,"index":3037},{"krate":0,"index":1026},{"krate":0,"index":3041},{"krate":0,"index":3067},{"krate":0,"index":3064},{"krate":0,"index":3062},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1035},{"krate":0,"index":1040},{"krate":0,"index":1044},{"krate":0,"index":1049},{"krate":0,"index":1053},{"krate":0,"index":1058},{"krate":0,"index":1064},{"krate":0,"index":1068},{"krate":0,"index":3069},{"krate":0,"index":3073},{"krate":0,"index":1073}],"decl_id":null,"docs":" Shaders\n Shader parameter handling.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":159950,"byte_end":159962,"line_start":54,"line_end":54,"column_start":10,"column_end":22},"name":"TextureParam","qualname":"::render::shade::TextureParam","value":"(handle::Texture<R>, Option<handle::Sampler<R>>)","parent":null,"children":[],"decl_id":null,"docs":" A texture parameter: consists of a texture handle with an optional sampler.\n Not all textures need a sampler (i.e. MSAA ones do not). Optimally, we'd want to\n encode this logic into the type system (TODO).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3042},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":160242,"byte_end":160253,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"MissingSelf","qualname":"::render::shade::ParameterError::MissingSelf","value":"ParameterError::MissingSelf","parent":{"krate":0,"index":3041},"children":[],"decl_id":null,"docs":" The parameter requires 'self' to be assigned, but none was provided.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3044},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":160327,"byte_end":160341,"line_start":62,"line_end":62,"column_start":5,"column_end":19},"name":"MissingUniform","qualname":"::render::shade::ParameterError::MissingUniform","value":"ParameterError::MissingUniform(String)","parent":{"krate":0,"index":3041},"children":[],"decl_id":null,"docs":" Shader requested a uniform that the parameters do not have.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3047},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":160424,"byte_end":160434,"line_start":64,"line_end":64,"column_start":5,"column_end":15},"name":"BadUniform","qualname":"::render::shade::ParameterError::BadUniform","value":"ParameterError::BadUniform(String)","parent":{"krate":0,"index":3041},"children":[],"decl_id":null,"docs":" Shader requested a uniform that the parameters do not match.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":160514,"byte_end":160526,"line_start":66,"line_end":66,"column_start":5,"column_end":17},"name":"MissingBlock","qualname":"::render::shade::ParameterError::MissingBlock","value":"ParameterError::MissingBlock(String)","parent":{"krate":0,"index":3041},"children":[],"decl_id":null,"docs":" Shader requested a block that the parameters do not have.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3053},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":160607,"byte_end":160615,"line_start":68,"line_end":68,"column_start":5,"column_end":13},"name":"BadBlock","qualname":"::render::shade::ParameterError::BadBlock","value":"ParameterError::BadBlock(String)","parent":{"krate":0,"index":3041},"children":[],"decl_id":null,"docs":" Shader requested a block that the parameters do not match.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3056},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":160697,"byte_end":160711,"line_start":70,"line_end":70,"column_start":5,"column_end":19},"name":"MissingTexture","qualname":"::render::shade::ParameterError::MissingTexture","value":"ParameterError::MissingTexture(String)","parent":{"krate":0,"index":3041},"children":[],"decl_id":null,"docs":" Shader requested a texture that the parameters do not have.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":160794,"byte_end":160804,"line_start":72,"line_end":72,"column_start":5,"column_end":15},"name":"BadTexture","qualname":"::render::shade::ParameterError::BadTexture","value":"ParameterError::BadTexture(String)","parent":{"krate":0,"index":3041},"children":[],"decl_id":null,"docs":" Shader requested a texture that the parameters do not match.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3041},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":160144,"byte_end":160158,"line_start":58,"line_end":58,"column_start":10,"column_end":24},"name":"ParameterError","qualname":"::render::shade::ParameterError","value":"ParameterError::{MissingSelf, MissingUniform, BadUniform, MissingBlock, BadBlock, MissingTexture, BadTexture}","parent":null,"children":[{"krate":0,"index":3042},{"krate":0,"index":3044},{"krate":0,"index":3047},{"krate":0,"index":3050},{"krate":0,"index":3053},{"krate":0,"index":3056},{"krate":0,"index":3059}],"decl_id":null,"docs":" An error type on either the parameter storage or the program side\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":160847,"byte_end":160858,"line_start":76,"line_end":76,"column_start":10,"column_end":21},"name":"ParameterId","qualname":"::render::shade::ParameterId","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Parameter index.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":160907,"byte_end":160916,"line_start":79,"line_end":79,"column_start":11,"column_end":20},"name":"Parameter","qualname":"::render::shade::Parameter","value":"Parameter<R: Resources>","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034}],"decl_id":null,"docs":" General shader parameter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":161001,"byte_end":161014,"line_start":81,"line_end":81,"column_start":8,"column_end":21},"name":"check_uniform","qualname":"::render::shade::Parameter::check_uniform","value":"fn (&shade::UniformVar) -> bool","parent":{"krate":0,"index":1029},"children":[],"decl_id":null,"docs":" Check if this parameter is good for a given uniform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":161119,"byte_end":161130,"line_start":83,"line_end":83,"column_start":8,"column_end":19},"name":"check_block","qualname":"::render::shade::Parameter::check_block","value":"fn (&shade::BlockVar) -> bool","parent":{"krate":0,"index":1029},"children":[],"decl_id":null,"docs":" Check if this parameter is good for a given block.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":161235,"byte_end":161248,"line_start":85,"line_end":85,"column_start":8,"column_end":21},"name":"check_texture","qualname":"::render::shade::Parameter::check_texture","value":"fn (&shade::SamplerVar) -> bool","parent":{"krate":0,"index":1029},"children":[],"decl_id":null,"docs":" Check if this parameter is good for a given texture.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":161350,"byte_end":161353,"line_start":87,"line_end":87,"column_start":8,"column_end":11},"name":"put","qualname":"::render::shade::Parameter::put","value":"fn (&self, ParameterId, &mut ParamStorage<R>) -> ()","parent":{"krate":0,"index":1029},"children":[],"decl_id":null,"docs":" Write into the parameter storage for rendering.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":162632,"byte_end":162643,"line_start":133,"line_end":133,"column_start":11,"column_end":22},"name":"ShaderParam","qualname":"::render::shade::ShaderParam","value":"ShaderParam","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057}],"decl_id":null,"docs":" Abstracts the shader parameter structure, generated by the `shader_param` attribute\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":162599,"byte_end":162621,"line_start":132,"line_end":132,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":162655,"byte_end":162664,"line_start":134,"line_end":134,"column_start":10,"column_end":19},"name":"Resources","qualname":"::render::shade::ShaderParam::Resources","value":"type Resources: Resources;","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":162759,"byte_end":162763,"line_start":136,"line_end":136,"column_start":10,"column_end":14},"name":"Link","qualname":"::render::shade::ShaderParam::Link","value":"type Link: Clone;","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" A helper structure to contain variable indices inside the shader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":162837,"byte_end":162848,"line_start":138,"line_end":138,"column_start":8,"column_end":19},"name":"create_link","qualname":"::render::shade::ShaderParam::create_link","value":"fn (Option<&Self>, &shade::ProgramInfo) -> Result<Self::Link, ParameterError>","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Create a new link to be used with a given program\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":162998,"byte_end":163009,"line_start":140,"line_end":140,"column_start":8,"column_end":19},"name":"fill_params","qualname":"::render::shade::ShaderParam::fill_params","value":"fn (&self, &Self::Link, &mut ParamStorage<Self::Resources>) -> ()","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Get all the contained parameter values, using a given link\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":163899,"byte_end":163908,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"NamedCell","qualname":"::render::shade::NamedCell","value":"NamedCell { name, value }","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"decl_id":null,"docs":" A named cell containing arbitrary value\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":163935,"byte_end":163939,"line_start":171,"line_end":171,"column_start":9,"column_end":13},"name":"name","qualname":"::render::shade::NamedCell::name","value":"std::string::String","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":" Name\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":163971,"byte_end":163976,"line_start":173,"line_end":173,"column_start":9,"column_end":14},"name":"value","qualname":"::render::shade::NamedCell::value","value":"std::cell::RefCell<T>","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":" Value\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":164082,"byte_end":164097,"line_start":177,"line_end":177,"column_start":12,"column_end":27},"name":"ParamDictionary","qualname":"::render::shade::ParamDictionary","value":"ParamDictionary { uniforms, blocks, textures }","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072}],"decl_id":null,"docs":" A dictionary of parameters, meant to be shared between different programs\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":164149,"byte_end":164157,"line_start":179,"line_end":179,"column_start":9,"column_end":17},"name":"uniforms","qualname":"::render::shade::ParamDictionary::uniforms","value":"std::vec::Vec<render::shade::NamedCell<device::shade::UniformValue>>","parent":{"krate":0,"index":1068},"children":[],"decl_id":null,"docs":" Uniform dictionary\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":164229,"byte_end":164235,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"name":"blocks","qualname":"::render::shade::ParamDictionary::blocks","value":"std::vec::Vec<render::shade::NamedCell<device::handle::RawBuffer<R>>>","parent":{"krate":0,"index":1068},"children":[],"decl_id":null,"docs":" Block dictionary\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":164310,"byte_end":164318,"line_start":183,"line_end":183,"column_start":9,"column_end":17},"name":"textures","qualname":"::render::shade::ParamDictionary::textures","value":"std::vec::Vec<render::shade::NamedCell<(device::handle::Texture<R>, std::option::Option<device::handle::Sampler<R>>)>>","parent":{"krate":0,"index":1068},"children":[],"decl_id":null,"docs":" Texture dictionary\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3069},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":164449,"byte_end":164468,"line_start":188,"line_end":188,"column_start":12,"column_end":31},"name":"ParamDictionaryLink","qualname":"::render::shade::ParamDictionaryLink","value":"ParamDictionaryLink {  }","parent":null,"children":[{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072}],"decl_id":null,"docs":" Redirects program input to the relevant ParamDictionary cell\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"target","qualname":"::render::target","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":3075},{"krate":0,"index":3092},{"krate":0,"index":3088},{"krate":0,"index":3085},{"krate":0,"index":1094},{"krate":0,"index":1098},{"krate":0,"index":1108},{"krate":0,"index":3095},{"krate":0,"index":3110},{"krate":0,"index":3106},{"krate":0,"index":3103},{"krate":0,"index":1114},{"krate":0,"index":1117}],"decl_id":null,"docs":" Render targets\n Render target specification.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":166954,"byte_end":166961,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"Surface","qualname":"::render::target::Plane::Surface","value":"Plane::Surface(device::handle::Surface<R>)","parent":{"krate":0,"index":3075},"children":[],"decl_id":null,"docs":" Render to a `Surface` (corresponds to a renderbuffer in GL).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":167133,"byte_end":167140,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Texture","qualname":"::render::target::Plane::Texture","value":"Plane::Texture(device::handle::Texture<R>, Level, Option<Layer>)","parent":{"krate":0,"index":3075},"children":[],"decl_id":null,"docs":" Render to a texture at a specific mipmap level\n If `Layer` is set, it is selecting a single 2D slice of a given 3D texture\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":166859,"byte_end":166864,"line_start":26,"line_end":26,"column_start":10,"column_end":15},"name":"Plane","qualname":"::render::target::Plane","value":"Plane::{Surface, Texture}","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3080}],"decl_id":null,"docs":" A single buffer that can be bound to a render target.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":167266,"byte_end":167282,"line_start":36,"line_end":36,"column_start":12,"column_end":28},"name":"get_surface_info","qualname":"<Plane<R>>::get_surface_info","value":"fn (&self) -> device::tex::SurfaceInfo","parent":null,"children":[],"decl_id":null,"docs":" Get the surface info.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":167533,"byte_end":167543,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"get_format","qualname":"<Plane<R>>::get_format","value":"fn (&self) -> device::tex::Format","parent":null,"children":[],"decl_id":null,"docs":" Get surface/texture format.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":167820,"byte_end":167826,"line_start":53,"line_end":53,"column_start":11,"column_end":17},"name":"Output","qualname":"::render::target::Output","value":"Output<R: Resources>","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106}],"decl_id":null,"docs":" A generic rendering output, consisting of multiple planes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":167899,"byte_end":167909,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"get_handle","qualname":"::render::target::Output::get_handle","value":"fn (&self) -> Option<&device::handle::FrameBuffer<R>>","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Get an associated device handle, if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":168007,"byte_end":168015,"line_start":57,"line_end":57,"column_start":8,"column_end":16},"name":"get_size","qualname":"::render::target::Output::get_size","value":"fn (&self) -> (Size, Size)","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Get canvas dimensions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":168082,"byte_end":168092,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"get_colors","qualname":"::render::target::Output::get_colors","value":"fn (&self) -> &[Plane<R>]","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Get array of color planes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":168163,"byte_end":168172,"line_start":61,"line_end":61,"column_start":8,"column_end":17},"name":"get_depth","qualname":"::render::target::Output::get_depth","value":"fn (&self) -> Option<&Plane<R>>","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Get depth plane, if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":168252,"byte_end":168263,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"get_stencil","qualname":"::render::target::Output::get_stencil","value":"fn (&self) -> Option<&Plane<R>>","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Get stencil plane, if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":168365,"byte_end":168374,"line_start":65,"line_end":65,"column_start":8,"column_end":17},"name":"get_gamma","qualname":"::render::target::Output::get_gamma","value":"fn (&self) -> Gamma","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Check if it converts gamma of the output colors.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":168455,"byte_end":168463,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"get_mask","qualname":"::render::target::Output::get_mask","value":"fn (&self) -> Mask","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Get the output surface mask.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3095},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170007,"byte_end":170012,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"Frame","qualname":"::render::target::Frame","value":"Frame { width, height, colors, depth, stencil, gamma }","parent":null,"children":[{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102}],"decl_id":null,"docs":" A complete `Frame`, which is the result of rendering.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170072,"byte_end":170077,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"name":"width","qualname":"::render::target::Frame::width","value":"u16","parent":{"krate":0,"index":3095},"children":[],"decl_id":null,"docs":" The width of the viewport.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3098},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170129,"byte_end":170135,"line_start":134,"line_end":134,"column_start":9,"column_end":15},"name":"height","qualname":"::render::target::Frame::height","value":"u16","parent":{"krate":0,"index":3095},"children":[],"decl_id":null,"docs":" The height of the viewport.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3099},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170200,"byte_end":170206,"line_start":136,"line_end":136,"column_start":9,"column_end":15},"name":"colors","qualname":"::render::target::Frame::colors","value":"std::vec::Vec<render::target::Plane<R>>","parent":{"krate":0,"index":3095},"children":[],"decl_id":null,"docs":" Each color component has its own buffer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3100},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170272,"byte_end":170277,"line_start":138,"line_end":138,"column_start":9,"column_end":14},"name":"depth","qualname":"::render::target::Frame::depth","value":"std::option::Option<render::target::Plane<R>>","parent":{"krate":0,"index":3095},"children":[],"decl_id":null,"docs":" The depth buffer for this frame.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3101},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170348,"byte_end":170355,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"stencil","qualname":"::render::target::Frame::stencil","value":"std::option::Option<render::target::Plane<R>>","parent":{"krate":0,"index":3095},"children":[],"decl_id":null,"docs":" The stencil buffer for this frame.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3102},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170404,"byte_end":170409,"line_start":142,"line_end":142,"column_start":9,"column_end":14},"name":"gamma","qualname":"::render::target::Frame::gamma","value":"device::draw::Gamma","parent":{"krate":0,"index":3095},"children":[],"decl_id":null,"docs":" Color space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170495,"byte_end":170500,"line_start":147,"line_end":147,"column_start":12,"column_end":17},"name":"empty","qualname":"<Frame<R>>::empty","value":"fn (width: Size, height: Size) -> Frame<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Frame`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3114},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":115862,"byte_end":115881,"line_start":49,"line_end":49,"column_start":5,"column_end":24},"name":"SourcePlanesMissing","qualname":"::render::BlitError::SourcePlanesMissing","value":"BlitError::SourcePlanesMissing(Mask)","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":" The source doesn't have some of the requested planes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":115960,"byte_end":115984,"line_start":51,"line_end":51,"column_start":5,"column_end":29},"name":"DestinationPlanesMissing","qualname":"::render::BlitError::DestinationPlanesMissing","value":"BlitError::DestinationPlanesMissing(Mask)","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":" The destination doesn't have some of the requested planes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":115784,"byte_end":115793,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"name":"BlitError","qualname":"::render::BlitError","value":"BlitError::{SourcePlanesMissing, DestinationPlanesMissing}","parent":null,"children":[{"krate":0,"index":3114},{"krate":0,"index":3117}],"decl_id":null,"docs":" An error occuring in surface blits.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":116132,"byte_end":116143,"line_start":58,"line_end":58,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::render::UpdateError::OutOfBounds","value":"UpdateError::OutOfBounds { target, source }","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3132},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":116195,"byte_end":116211,"line_start":62,"line_end":62,"column_start":5,"column_end":21},"name":"UnitSizeMismatch","qualname":"::render::UpdateError::UnitSizeMismatch","value":"UpdateError::UnitSizeMismatch { target, source }","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":116265,"byte_end":116282,"line_start":66,"line_end":66,"column_start":5,"column_end":22},"name":"UnitCountMismatch","qualname":"::render::UpdateError::UnitCountMismatch","value":"UpdateError::UnitCountMismatch { target, slice }","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":116111,"byte_end":116122,"line_start":57,"line_end":57,"column_start":10,"column_end":21},"name":"UpdateError","qualname":"::render::UpdateError","value":"UpdateError::{OutOfBounds, UnitSizeMismatch, UnitCountMismatch}","parent":null,"children":[{"krate":0,"index":3129},{"krate":0,"index":3132},{"krate":0,"index":3135}],"decl_id":null,"docs":" An error occuring in buffer/texture updates.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":116044,"byte_end":116066,"line_start":55,"line_end":55,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":117369,"byte_end":117381,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"ParamStorage","qualname":"::render::ParamStorage","value":"ParamStorage { uniforms, blocks, textures }","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164}],"decl_id":null,"docs":" Temporary parameter storage, used for shader activation.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":117444,"byte_end":117452,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"name":"uniforms","qualname":"::render::ParamStorage::uniforms","value":"std::vec::Vec<std::option::Option<device::shade::UniformValue>>","parent":{"krate":0,"index":1160},"children":[],"decl_id":null,"docs":" uniform values to be provided\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":117528,"byte_end":117534,"line_start":109,"line_end":109,"column_start":9,"column_end":15},"name":"blocks","qualname":"::render::ParamStorage::blocks","value":"std::vec::Vec<std::option::Option<device::handle::RawBuffer<R>>>","parent":{"krate":0,"index":1160},"children":[],"decl_id":null,"docs":" uniform buffers to be provided\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":117613,"byte_end":117621,"line_start":111,"line_end":111,"column_start":9,"column_end":17},"name":"textures","qualname":"::render::ParamStorage::textures","value":"std::vec::Vec<std::option::Option<(device::handle::Texture<R>, std::option::Option<device::handle::Sampler<R>>)>>","parent":{"krate":0,"index":1160},"children":[],"decl_id":null,"docs":" textures to be provided\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3150},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":119406,"byte_end":119418,"line_start":161,"line_end":161,"column_start":5,"column_end":17},"name":"InvalidBatch","qualname":"::render::DrawError::InvalidBatch","value":"DrawError::InvalidBatch(E)","parent":{"krate":0,"index":3148},"children":[],"decl_id":null,"docs":" Tha batch is not valid\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3153},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":119583,"byte_end":119596,"line_start":164,"line_end":164,"column_start":5,"column_end":18},"name":"MissingTarget","qualname":"::render::DrawError::MissingTarget","value":"DrawError::MissingTarget(Mask)","parent":{"krate":0,"index":3148},"children":[],"decl_id":null,"docs":" The `DrawState` interacts with a target that does not present in the\n frame. For example, the depth test is enabled while there is no depth.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3156},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":119681,"byte_end":119692,"line_start":166,"line_end":166,"column_start":5,"column_end":16},"name":"BadViewport","qualname":"::render::DrawError::BadViewport","value":"DrawError::BadViewport","parent":{"krate":0,"index":3148},"children":[],"decl_id":null,"docs":" The viewport either covers zero space or exceeds HW limitations.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3158},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":119743,"byte_end":119757,"line_start":168,"line_end":168,"column_start":5,"column_end":19},"name":"BadVertexCount","qualname":"::render::DrawError::BadVertexCount","value":"DrawError::BadVertexCount","parent":{"krate":0,"index":3148},"children":[],"decl_id":null,"docs":" Vertex count exceeds HW limitations.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":119807,"byte_end":119820,"line_start":170,"line_end":170,"column_start":5,"column_end":18},"name":"BadIndexCount","qualname":"::render::DrawError::BadIndexCount","value":"DrawError::BadIndexCount","parent":{"krate":0,"index":3148},"children":[],"decl_id":null,"docs":" Index count exceeds HW limitations.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":119356,"byte_end":119365,"line_start":159,"line_end":159,"column_start":10,"column_end":19},"name":"DrawError","qualname":"::render::DrawError","value":"DrawError::{InvalidBatch, MissingTarget, BadViewport, BadVertexCount, BadIndexCount}","parent":null,"children":[{"krate":0,"index":3150},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":3158},{"krate":0,"index":3160}],"decl_id":null,"docs":" Draw-time error, showing inconsistencies in draw parameters and data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":119859,"byte_end":119867,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"Renderer","qualname":"::render::Renderer","value":"Renderer {  }","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190}],"decl_id":null,"docs":" Renderer front-end\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":120470,"byte_end":120475,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"reset","qualname":"<Renderer<R, C>>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset all commands for the command buffer re-usal.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":120760,"byte_end":120769,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"as_buffer","qualname":"<Renderer<R, C>>::as_buffer","value":"fn (&self) -> (&C, &DataBuffer, &handle::Manager<R>)","parent":null,"children":[],"decl_id":null,"docs":" Get command and data buffers to be submitted to the device.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":120968,"byte_end":120979,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"clone_empty","qualname":"<Renderer<R, C>>::clone_empty","value":"fn (&self) -> Renderer<R, C>","parent":null,"children":[],"decl_id":null,"docs":" Clone the renderer shared data but ignore the commands.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":121625,"byte_end":121630,"line_start":217,"line_end":217,"column_start":12,"column_end":17},"name":"clear","qualname":"<Renderer<R, C>>::clear","value":"fn <O> (&mut self, data: ClearData, mask: Mask, output: &O) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the output with given `ClearData`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":122263,"byte_end":122267,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"draw","qualname":"<Renderer<R, C>>::draw","value":"fn <B, O> (&mut self, batch: &B, instances: InstanceOption, output: &O) -> Result<(), DrawError<Error>>","parent":null,"children":[],"decl_id":null,"docs":" Draw a 'batch' with all known parameters specified, internal use only.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":123434,"byte_end":123438,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"blit","qualname":"<Renderer<R, C>>::blit","value":"fn <I, O> (&mut self, source: &I, source_rect: Rect, destination: &O, dest_rect: Rect, mirror: Mirror, mask: Mask) -> Result<(), BlitError>","parent":null,"children":[],"decl_id":null,"docs":" Blit one frame onto another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":124277,"byte_end":124290,"line_start":278,"line_end":278,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<Renderer<R, C>>::update_buffer","value":"fn <T> (&mut self, buf: &handle::RawBuffer<R>, data: &[T], offset_elements: usize) -> Result<(), UpdateError<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a slice of data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":125149,"byte_end":125161,"line_start":302,"line_end":302,"column_start":12,"column_end":24},"name":"update_block","qualname":"<Renderer<R, C>>::update_block","value":"fn <U, T> (&mut self, buf: &handle::Buffer<R, U>, data: &T) -> Result<(), UpdateError<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a data struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":125783,"byte_end":125797,"line_start":320,"line_end":320,"column_start":12,"column_end":26},"name":"update_texture","qualname":"<Renderer<R, C>>::update_texture","value":"fn <T> (&mut self, tex: &handle::Texture<R>, img: device::tex::ImageInfo, data: &[T]) -> Result<(), UpdateError<[Size; 3]>>","parent":null,"children":[],"decl_id":null,"docs":" Update the contents of a texture.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":139714,"byte_end":139727,"line_start":631,"line_end":631,"column_start":11,"column_end":24},"name":"RenderFactory","qualname":"::render::RenderFactory","value":"RenderFactory<R: Resources, C: CommandBuffer<R>>","parent":null,"children":[{"krate":0,"index":1233}],"decl_id":null,"docs":" Factory extension that allows creating new renderers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":139802,"byte_end":139817,"line_start":633,"line_end":633,"column_start":8,"column_end":23},"name":"create_renderer","qualname":"::render::RenderFactory::create_renderer","value":"fn (&mut self) -> Renderer<R, C>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Create a new renderer\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16421,"byte_end":16425,"line_start":81,"line_end":81,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18317,"byte_end":18327,"line_start":133,"line_end":133,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18997,"byte_end":19004,"line_start":153,"line_end":153,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":20151,"byte_end":20152,"line_start":190,"line_end":190,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21359,"byte_end":21369,"line_start":236,"line_end":236,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21466,"byte_end":21476,"line_start":239,"line_end":239,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21575,"byte_end":21585,"line_start":242,"line_end":242,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21684,"byte_end":21694,"line_start":245,"line_end":245,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21789,"byte_end":21799,"line_start":248,"line_end":248,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21896,"byte_end":21906,"line_start":251,"line_end":251,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22004,"byte_end":22011,"line_start":255,"line_end":255,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22105,"byte_end":22112,"line_start":258,"line_end":258,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22208,"byte_end":22215,"line_start":261,"line_end":261,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22311,"byte_end":22318,"line_start":264,"line_end":264,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22410,"byte_end":22417,"line_start":267,"line_end":267,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22511,"byte_end":22518,"line_start":270,"line_end":270,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":25145,"byte_end":25158,"line_start":64,"line_end":64,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":25317,"byte_end":25330,"line_start":70,"line_end":70,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":31026,"byte_end":31036,"line_start":34,"line_end":34,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":269},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":38622,"byte_end":38636,"line_start":27,"line_end":27,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":38917,"byte_end":38928,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":39087,"byte_end":39098,"line_start":47,"line_end":47,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40416,"byte_end":40425,"line_start":31,"line_end":31,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40860,"byte_end":40866,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":41878,"byte_end":41889,"line_start":85,"line_end":85,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42200,"byte_end":42206,"line_start":96,"line_end":96,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42598,"byte_end":42605,"line_start":110,"line_end":110,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43132,"byte_end":43139,"line_start":128,"line_end":128,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43539,"byte_end":43546,"line_start":142,"line_end":142,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43940,"byte_end":43947,"line_start":156,"line_end":156,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":46356,"byte_end":46363,"line_start":215,"line_end":215,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":49653,"byte_end":49660,"line_start":308,"line_end":308,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":54618,"byte_end":54626,"line_start":43,"line_end":43,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":54832,"byte_end":54840,"line_start":53,"line_end":53,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":55276,"byte_end":55284,"line_start":71,"line_end":71,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":55626,"byte_end":55634,"line_start":83,"line_end":83,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56097,"byte_end":56099,"line_start":101,"line_end":101,"column_start":63,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56314,"byte_end":56316,"line_start":111,"line_end":111,"column_start":66,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56514,"byte_end":56516,"line_start":119,"line_end":119,"column_start":57,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":57289,"byte_end":57290,"line_start":142,"line_end":142,"column_start":58,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61584,"byte_end":61596,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":62664,"byte_end":62676,"line_start":151,"line_end":151,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":63563,"byte_end":63575,"line_start":172,"line_end":172,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67686,"byte_end":67696,"line_start":290,"line_end":290,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69934,"byte_end":69945,"line_start":345,"line_end":345,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":72237,"byte_end":72249,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74072,"byte_end":74082,"line_start":119,"line_end":119,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":76159,"byte_end":76165,"line_start":188,"line_end":188,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83361,"byte_end":83365,"line_start":385,"line_end":385,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84781,"byte_end":84790,"line_start":433,"line_end":433,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":85069,"byte_end":85080,"line_start":448,"line_end":448,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":85309,"byte_end":85320,"line_start":461,"line_end":461,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":85845,"byte_end":85854,"line_start":478,"line_end":478,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":86182,"byte_end":86193,"line_start":493,"line_end":493,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":86423,"byte_end":86432,"line_start":504,"line_end":504,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87962,"byte_end":87973,"line_start":546,"line_end":546,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":89727,"byte_end":89734,"line_start":48,"line_end":48,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":92322,"byte_end":92325,"line_start":36,"line_end":36,"column_start":35,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":92366,"byte_end":92369,"line_start":37,"line_end":37,"column_start":35,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":92395,"byte_end":92398,"line_start":39,"line_end":39,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":92823,"byte_end":92826,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93127,"byte_end":93130,"line_start":71,"line_end":71,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93301,"byte_end":93304,"line_start":80,"line_end":80,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93458,"byte_end":93461,"line_start":89,"line_end":89,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93607,"byte_end":93610,"line_start":95,"line_end":95,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93725,"byte_end":93728,"line_start":101,"line_end":101,"column_start":20,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93771,"byte_end":93774,"line_start":103,"line_end":103,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93900,"byte_end":93903,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":101056,"byte_end":101057,"line_start":140,"line_end":140,"column_start":69,"column_end":70},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102479,"byte_end":102491,"line_start":43,"line_end":43,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":107799,"byte_end":107810,"line_start":132,"line_end":132,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":108109,"byte_end":108120,"line_start":145,"line_end":145,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":108823,"byte_end":108824,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":143145,"byte_end":143153,"line_start":70,"line_end":70,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":144389,"byte_end":144393,"line_start":108,"line_end":108,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":145272,"byte_end":145276,"line_start":133,"line_end":133,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":146331,"byte_end":146335,"line_start":167,"line_end":167,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":147547,"byte_end":147555,"line_start":205,"line_end":205,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":150151,"byte_end":150155,"line_start":53,"line_end":53,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":152272,"byte_end":152277,"line_start":114,"line_end":114,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":154172,"byte_end":154176,"line_start":162,"line_end":162,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":156216,"byte_end":156229,"line_start":226,"line_end":226,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":156588,"byte_end":156592,"line_start":242,"line_end":242,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":161467,"byte_end":161468,"line_start":90,"line_end":90,"column_start":68,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":161743,"byte_end":161752,"line_start":100,"line_end":100,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":162013,"byte_end":162019,"line_start":110,"line_end":110,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":162278,"byte_end":162290,"line_start":120,"line_end":120,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":163105,"byte_end":163111,"line_start":143,"line_end":143,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":164585,"byte_end":164600,"line_start":194,"line_end":194,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":167214,"byte_end":167219,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":169029,"byte_end":169034,"line_start":86,"line_end":86,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170440,"byte_end":170445,"line_start":145,"line_end":145,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170784,"byte_end":170789,"line_start":159,"line_end":159,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/texture_cache.rs","byte_start":172161,"byte_end":172173,"line_start":33,"line_end":33,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":116862,"byte_end":116873,"line_start":88,"line_end":88,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":117682,"byte_end":117694,"line_start":114,"line_end":114,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":118699,"byte_end":118700,"line_start":144,"line_end":144,"column_start":65,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":120383,"byte_end":120391,"line_start":186,"line_end":186,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1217},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":140062,"byte_end":140063,"line_start":643,"line_end":643,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2164,"byte_end":2170,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":89}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":2999,"byte_end":3005,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":96}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3015,"byte_end":3022,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":198}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3032,"byte_end":3036,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":250}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3046,"byte_end":3051,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":305}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3061,"byte_end":3067,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":335}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3077,"byte_end":3084,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":464}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3094,"byte_end":3099,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":571}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3109,"byte_end":3112,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":585}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":3122,"byte_end":3129,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":630}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2180,"byte_end":2185,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":765}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/mod.rs","byte_start":95749,"byte_end":95756,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":766}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/mod.rs","byte_start":95788,"byte_end":95793,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":794}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/mod.rs","byte_start":95821,"byte_end":95827,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":803}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2195,"byte_end":2201,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":877}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/lib.rs","byte_start":2211,"byte_end":2217,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":880}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":115543,"byte_end":115548,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":910}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":115569,"byte_end":115573,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":962}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":115595,"byte_end":115600,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1014}},{"kind":"Mod","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":115629,"byte_end":115635,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1085}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":16421,"byte_end":16425,"line_start":81,"line_end":81,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18317,"byte_end":18327,"line_start":133,"line_end":133,"column_start":15,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":18997,"byte_end":19004,"line_start":153,"line_end":153,"column_start":15,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":20151,"byte_end":20152,"line_start":190,"line_end":190,"column_start":34,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":144},"to":{"krate":0,"index":139}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21359,"byte_end":21369,"line_start":236,"line_end":236,"column_start":21,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21466,"byte_end":21476,"line_start":239,"line_end":239,"column_start":21,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21575,"byte_end":21585,"line_start":242,"line_end":242,"column_start":21,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21684,"byte_end":21694,"line_start":245,"line_end":245,"column_start":21,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21789,"byte_end":21799,"line_start":248,"line_end":248,"column_start":21,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":21896,"byte_end":21906,"line_start":251,"line_end":251,"column_start":21,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22004,"byte_end":22011,"line_start":255,"line_end":255,"column_start":21,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1459},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22105,"byte_end":22112,"line_start":258,"line_end":258,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1459},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22208,"byte_end":22215,"line_start":261,"line_end":261,"column_start":21,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1459},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22311,"byte_end":22318,"line_start":264,"line_end":264,"column_start":21,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1459},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22410,"byte_end":22417,"line_start":267,"line_end":267,"column_start":21,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1459},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/attrib.rs","byte_start":22511,"byte_end":22518,"line_start":270,"line_end":270,"column_start":21,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1459},"to":{"krate":0,"index":141}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":25145,"byte_end":25158,"line_start":64,"line_end":64,"column_start":9,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/command.rs","byte_start":25317,"byte_end":25330,"line_start":70,"line_end":70,"column_start":39,"column_end":52},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":214},"to":{"krate":0,"index":276}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/draw.rs","byte_start":31026,"byte_end":31036,"line_start":34,"line_end":34,"column_start":6,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":38622,"byte_end":38636,"line_start":27,"line_end":27,"column_start":20,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1655},"to":{"krate":0,"index":704}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":38917,"byte_end":38928,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/dummy.rs","byte_start":39087,"byte_end":39098,"line_start":47,"line_end":47,"column_start":17,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":313},"to":{"krate":0,"index":753}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40416,"byte_end":40425,"line_start":31,"line_end":31,"column_start":20,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":40860,"byte_end":40866,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":41878,"byte_end":41889,"line_start":85,"line_end":85,"column_start":20,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42200,"byte_end":42206,"line_start":96,"line_end":96,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":42598,"byte_end":42605,"line_start":110,"line_end":110,"column_start":20,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43132,"byte_end":43139,"line_start":128,"line_end":128,"column_start":20,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43539,"byte_end":43546,"line_start":142,"line_end":142,"column_start":20,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":43940,"byte_end":43947,"line_start":156,"line_end":156,"column_start":20,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":46356,"byte_end":46363,"line_start":215,"line_end":215,"column_start":36,"column_end":43},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":382},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/handle.rs","byte_start":49653,"byte_end":49660,"line_start":308,"line_end":308,"column_start":20,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":54618,"byte_end":54626,"line_start":43,"line_end":43,"column_start":58,"column_end":66},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":1550}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":54832,"byte_end":54840,"line_start":53,"line_end":53,"column_start":57,"column_end":65},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":1572}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":55276,"byte_end":55284,"line_start":71,"line_end":71,"column_start":48,"column_end":56},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":55626,"byte_end":55634,"line_start":83,"line_end":83,"column_start":57,"column_end":65},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":501},"to":{"krate":2,"index":1572}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56097,"byte_end":56099,"line_start":101,"line_end":101,"column_start":63,"column_end":65},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":1550}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56314,"byte_end":56316,"line_start":111,"line_end":111,"column_start":66,"column_end":68},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":1561}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":56514,"byte_end":56516,"line_start":119,"line_end":119,"column_start":57,"column_end":59},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":1572}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mapping.rs","byte_start":57289,"byte_end":57290,"line_start":142,"line_end":142,"column_start":58,"column_end":59},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":61584,"byte_end":61596,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":62664,"byte_end":62676,"line_start":151,"line_end":151,"column_start":16,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":2002}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":63563,"byte_end":63575,"line_start":172,"line_end":172,"column_start":21,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":6702}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":67686,"byte_end":67696,"line_start":290,"line_end":290,"column_start":6,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/shade.rs","byte_start":69934,"byte_end":69945,"line_start":345,"line_end":345,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":72237,"byte_end":72249,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2169},"to":{"krate":2,"index":6702}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":74072,"byte_end":74082,"line_start":119,"line_end":119,"column_start":6,"column_end":16},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":76159,"byte_end":76165,"line_start":188,"line_end":188,"column_start":6,"column_end":12},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":83361,"byte_end":83365,"line_start":385,"line_end":385,"column_start":6,"column_end":10},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":84781,"byte_end":84790,"line_start":433,"line_end":433,"column_start":18,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":85069,"byte_end":85080,"line_start":448,"line_end":448,"column_start":18,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":85309,"byte_end":85320,"line_start":461,"line_end":461,"column_start":6,"column_end":17},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":85845,"byte_end":85854,"line_start":478,"line_end":478,"column_start":28,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":2042}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":86182,"byte_end":86193,"line_start":493,"line_end":493,"column_start":28,"column_end":39},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2359},"to":{"krate":2,"index":2042}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":86423,"byte_end":86432,"line_start":504,"line_end":504,"column_start":6,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/tex.rs","byte_start":87962,"byte_end":87973,"line_start":546,"line_end":546,"column_start":6,"column_end":17},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/program.rs","byte_start":89727,"byte_end":89734,"line_start":48,"line_end":48,"column_start":13,"column_end":20},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":92322,"byte_end":92325,"line_start":36,"line_end":36,"column_start":35,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":1386}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":92366,"byte_end":92369,"line_start":37,"line_end":37,"column_start":35,"column_end":38},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":1395}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":92395,"byte_end":92398,"line_start":39,"line_end":39,"column_start":19,"column_end":22},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":92823,"byte_end":92826,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93127,"byte_end":93130,"line_start":71,"line_end":71,"column_start":19,"column_end":22},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":2002}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93301,"byte_end":93304,"line_start":80,"line_end":80,"column_start":19,"column_end":22},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":1550}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93458,"byte_end":93461,"line_start":89,"line_end":89,"column_start":36,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":6702}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93607,"byte_end":93610,"line_start":95,"line_end":95,"column_start":34,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93725,"byte_end":93728,"line_start":101,"line_end":101,"column_start":20,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":1886}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93771,"byte_end":93774,"line_start":103,"line_end":103,"column_start":36,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":6359}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/arc.rs","byte_start":93900,"byte_end":93903,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":1572}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7989,"byte_end":7994,"line_start":181,"line_end":181,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2002},"to":{"krate":0,"index":704}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":7997,"byte_end":8001,"line_start":181,"line_end":181,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":6359},"to":{"krate":0,"index":704}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8009,"byte_end":8014,"line_start":181,"line_end":181,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":6702},"to":{"krate":0,"index":704}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8017,"byte_end":8019,"line_start":181,"line_end":181,"column_start":60,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":1886},"to":{"krate":0,"index":704}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":8022,"byte_end":8031,"line_start":181,"line_end":181,"column_start":65,"column_end":74},"kind":"SuperTrait","from":{"krate":2,"index":1882},"to":{"krate":0,"index":704}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/device/mod.rs","byte_start":13578,"byte_end":13584,"line_start":294,"line_end":294,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":753},"to":{"krate":0,"index":761}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":96725,"byte_end":96732,"line_start":25,"line_end":25,"column_start":53,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":714},"to":{"krate":0,"index":778}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/factory.rs","byte_start":101056,"byte_end":101057,"line_start":140,"line_end":140,"column_start":69,"column_end":70},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":793},"to":{"krate":0,"index":778}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/shade.rs","byte_start":102479,"byte_end":102491,"line_start":43,"line_end":43,"column_start":10,"column_end":22},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":104665,"byte_end":104671,"line_start":28,"line_end":28,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":1098},"to":{"krate":0,"index":824}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":107799,"byte_end":107810,"line_start":132,"line_end":132,"column_start":28,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":854},"to":{"krate":0,"index":827}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":108109,"byte_end":108120,"line_start":145,"line_end":145,"column_start":42,"column_end":53},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":108441,"byte_end":108454,"line_start":155,"line_end":155,"column_start":37,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":1230},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/extra/stream.rs","byte_start":108823,"byte_end":108824,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":876},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":143145,"byte_end":143153,"line_start":70,"line_end":70,"column_start":50,"column_end":58},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":929},"to":{"krate":0,"index":925}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":144389,"byte_end":144393,"line_start":108,"line_end":108,"column_start":22,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":145272,"byte_end":145276,"line_start":133,"line_end":133,"column_start":46,"column_end":50},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2846},"to":{"krate":0,"index":925}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":146331,"byte_end":146335,"line_start":167,"line_end":167,"column_start":22,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/batch.rs","byte_start":147547,"byte_end":147555,"line_start":205,"line_end":205,"column_start":55,"column_end":63},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":947},"to":{"krate":0,"index":925}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":150151,"byte_end":150155,"line_start":53,"line_end":53,"column_start":20,"column_end":24},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":152272,"byte_end":152277,"line_start":114,"line_end":114,"column_start":20,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":154172,"byte_end":154176,"line_start":162,"line_end":162,"column_start":35,"column_end":39},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2889},"to":{"krate":0,"index":989}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":156216,"byte_end":156229,"line_start":226,"line_end":226,"column_start":19,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2997},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mesh.rs","byte_start":156588,"byte_end":156592,"line_start":242,"line_end":242,"column_start":6,"column_end":10},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":161467,"byte_end":161468,"line_start":90,"line_end":90,"column_start":68,"column_end":69},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1036},"to":{"krate":0,"index":1029}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":161743,"byte_end":161752,"line_start":100,"line_end":100,"column_start":45,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1668},"to":{"krate":0,"index":1029}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":162013,"byte_end":162019,"line_start":110,"line_end":110,"column_start":48,"column_end":54},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1690},"to":{"krate":0,"index":1029}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":162278,"byte_end":162290,"line_start":120,"line_end":120,"column_start":37,"column_end":49},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1026},"to":{"krate":0,"index":1029}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":163105,"byte_end":163111,"line_start":143,"line_end":143,"column_start":36,"column_end":42},"kind":{"Impl":{"id":97}},"from":{"krate":2,"index":32771},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/shade.rs","byte_start":164585,"byte_end":164600,"line_start":194,"line_end":194,"column_start":36,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1068},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":167214,"byte_end":167219,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":169029,"byte_end":169034,"line_start":86,"line_end":86,"column_start":34,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3075},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170440,"byte_end":170445,"line_start":145,"line_end":145,"column_start":20,"column_end":25},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/target.rs","byte_start":170784,"byte_end":170789,"line_start":159,"line_end":159,"column_start":34,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3095},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/texture_cache.rs","byte_start":172161,"byte_end":172173,"line_start":33,"line_end":33,"column_start":9,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":116862,"byte_end":116873,"line_start":88,"line_end":88,"column_start":20,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":117682,"byte_end":117694,"line_start":114,"line_end":114,"column_start":20,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":118459,"byte_end":118472,"line_start":138,"line_end":138,"column_start":39,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":276},"to":{"krate":0,"index":1172}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":118699,"byte_end":118700,"line_start":144,"line_end":144,"column_start":65,"column_end":66},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":1172}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":120383,"byte_end":120391,"line_start":186,"line_end":186,"column_start":41,"column_end":49},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.8.1/src/render/mod.rs","byte_start":140062,"byte_end":140063,"line_start":643,"line_end":643,"column_start":27,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1238},"to":{"krate":0,"index":1230}}]}