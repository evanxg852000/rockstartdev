{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20","program":"/Users/evance.soumaoro/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","flate2","/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"miniz-sys\"","-C","metadata=54ac9aaead1ba200","-C","extra-filename=-54ac9aaead1ba200","--out-dir","/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps","-L","dependency=/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps","--extern","libc=/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps/liblibc-0bb7d6a3a3bf34b3.rmeta","--extern","miniz_sys=/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps/libminiz_sys-ca9871e96a391ef5.rmeta","--cap-lints","allow","-L","native=/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/build/miniz-sys-7923558c2385c6d9/out","--error-format=json","--sysroot","/Users/evance.soumaoro/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps/libflate2-54ac9aaead1ba200.rmeta"},"prelude":{"crate_id":{"name":"flate2","disambiguator":[15801828894015124938,446461088042168967]},"crate_root":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src","external_crates":[{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11705364677140973079,7726573435499814070]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9133280923345920065,5169035037401655959]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9811081489243518189,10016862334390338995]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16815776717140451016,2925157999366951619]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5571127662207602070,12081818010283277997]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9872675523737343627,13016261367480270594]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5564630398057371063,5134587089964058144]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[7317189895424764231,14908133925595887831]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7982293983073241509,18348097174152154939]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3938710137457602349,12366108798000803370]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[124527115135685225,16528639863833681107]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14633564717342525671,15444589222019281189]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":13,"id":{"name":"libc","disambiguator":[13472141932123952470,9033048170607305414]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","num":14,"id":{"name":"miniz_sys","disambiguator":[10972767559811408196,15561984884325926470]}}],"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":0,"byte_end":10102,"line_start":1,"line_end":308,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3848,"byte_end":3855,"line_start":119,"line_end":119,"column_start":13,"column_end":20},"alias_span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3859,"byte_end":3868,"line_start":119,"line_end":119,"column_start":24,"column_end":33},"name":"GzBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3882,"byte_end":3888,"line_start":120,"line_end":120,"column_start":13,"column_end":19},"alias_span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3892,"byte_end":3900,"line_start":120,"line_end":120,"column_start":23,"column_end":31},"name":"GzHeader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":857},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3916,"byte_end":3924,"line_start":121,"line_end":121,"column_start":15,"column_end":23},"alias_span":null,"name":"Compress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":908},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3926,"byte_end":3935,"line_start":121,"line_end":121,"column_start":25,"column_end":34},"alias_span":null,"name":"DataError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":861},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3937,"byte_end":3947,"line_start":121,"line_end":121,"column_start":36,"column_end":46},"alias_span":null,"name":"Decompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":880},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3949,"byte_end":3954,"line_start":121,"line_end":121,"column_start":48,"column_end":53},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3956,"byte_end":3962,"line_start":121,"line_end":121,"column_start":55,"column_end":61},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":728},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3979,"byte_end":3982,"line_start":122,"line_end":122,"column_start":15,"column_end":18},"alias_span":null,"name":"Crc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":733},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3984,"byte_end":3993,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"CrcReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":754},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4288,"byte_end":4302,"line_start":138,"line_end":138,"column_start":28,"column_end":42},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":684}},{"kind":"Use","ref_id":{"krate":0,"index":760},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4331,"byte_end":4345,"line_start":139,"line_end":139,"column_start":28,"column_end":42},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":684}},{"kind":"Use","ref_id":{"krate":0,"index":943},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4371,"byte_end":4382,"line_start":140,"line_end":140,"column_start":25,"column_end":36},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":684}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4408,"byte_end":4419,"line_start":141,"line_end":141,"column_start":25,"column_end":36},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":684}},{"kind":"Use","ref_id":{"krate":0,"index":803},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4443,"byte_end":4452,"line_start":142,"line_end":142,"column_start":23,"column_end":32},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":684}},{"kind":"Use","ref_id":{"krate":0,"index":809},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4476,"byte_end":4485,"line_start":143,"line_end":143,"column_start":23,"column_end":32},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":684}},{"kind":"Use","ref_id":{"krate":0,"index":815},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4509,"byte_end":4523,"line_start":144,"line_end":144,"column_start":23,"column_end":37},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":684}},{"kind":"Use","ref_id":{"krate":0,"index":766},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4741,"byte_end":4755,"line_start":152,"line_end":152,"column_start":29,"column_end":43},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4785,"byte_end":4799,"line_start":153,"line_end":153,"column_start":29,"column_end":43},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":0,"index":955},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4826,"byte_end":4837,"line_start":154,"line_end":154,"column_start":26,"column_end":37},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":0,"index":961},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4864,"byte_end":4875,"line_start":155,"line_end":155,"column_start":26,"column_end":37},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":0,"index":821},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4900,"byte_end":4909,"line_start":156,"line_end":156,"column_start":24,"column_end":33},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5137,"byte_end":5151,"line_start":164,"line_end":164,"column_start":31,"column_end":45},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":698}},{"kind":"Use","ref_id":{"krate":0,"index":747},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5183,"byte_end":5197,"line_start":165,"line_end":165,"column_start":31,"column_end":45},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":698}},{"kind":"Use","ref_id":{"krate":0,"index":929},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5226,"byte_end":5237,"line_start":166,"line_end":166,"column_start":28,"column_end":39},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":698}},{"kind":"Use","ref_id":{"krate":0,"index":936},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5266,"byte_end":5277,"line_start":167,"line_end":167,"column_start":28,"column_end":39},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":698}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5304,"byte_end":5313,"line_start":168,"line_end":168,"column_start":26,"column_end":35},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":698}},{"kind":"Use","ref_id":{"krate":0,"index":787},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5340,"byte_end":5349,"line_start":169,"line_end":169,"column_start":26,"column_end":35},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":698}},{"kind":"Use","ref_id":{"krate":0,"index":795},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5376,"byte_end":5390,"line_start":170,"line_end":170,"column_start":26,"column_end":40},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":698}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":0,"byte_end":10102,"line_start":1,"line_end":308,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":57},{"krate":0,"index":86},{"krate":0,"index":220},{"krate":0,"index":252},{"krate":0,"index":458},{"krate":0,"index":506},{"krate":0,"index":551},{"krate":0,"index":684},{"krate":0,"index":692},{"krate":0,"index":698},{"krate":0,"index":706},{"krate":0,"index":967},{"krate":0,"index":988},{"krate":0,"index":986},{"krate":0,"index":984},{"krate":0,"index":982},{"krate":0,"index":980},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":718},{"krate":0,"index":724},{"krate":0,"index":726}],"decl_id":null,"docs":" A DEFLATE-based stream compression/decompression library","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3465,"byte_end":3487,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3488,"byte_end":3527,"line_start":101,"line_end":101,"column_start":1,"column_end":40}},{"value":"allow(trivial_numeric_casts)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3528,"byte_end":3560,"line_start":102,"line_end":102,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":728},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13079,"byte_end":13082,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"Crc","qualname":"::crc::Crc","value":"Crc {  }","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730}],"decl_id":null,"docs":" The CRC calculated by a [`CrcReader`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13278,"byte_end":13287,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"CrcReader","qualname":"::crc::CrcReader","value":"CrcReader {  }","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736}],"decl_id":null,"docs":" A wrapper around a [`Read`] that calculates the CRC.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13372,"byte_end":13375,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Crc>::new","value":"fn () -> Crc","parent":null,"children":[],"decl_id":null,"docs":" Create a new CRC.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13448,"byte_end":13451,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"sum","qualname":"<Crc>::sum","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" bla\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13650,"byte_end":13656,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"amount","qualname":"<Crc>::amount","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes that have been used to calculate the CRC.\n This value is only accurate if the amount is lower than 2^32.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13757,"byte_end":13763,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"update","qualname":"<Crc>::update","value":"fn (&mut self, data: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update the CRC with the bytes in `data`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14010,"byte_end":14015,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"reset","qualname":"<Crc>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the CRC.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14163,"byte_end":14170,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"combine","qualname":"<Crc>::combine","value":"fn (&mut self, additional_crc: &Crc) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Combine the CRC with the CRC for the subsequent block of bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14573,"byte_end":14576,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<CrcReader<R>>::new","value":"fn (r: R) -> CrcReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CrcReader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14765,"byte_end":14768,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"crc","qualname":"<CrcReader<R>>::crc","value":"fn (&self) -> &Crc","parent":null,"children":[],"decl_id":null,"docs":" Get the Crc for this CrcReader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14880,"byte_end":14890,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CrcReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15012,"byte_end":15019,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<CrcReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader by reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15154,"byte_end":15161,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CrcReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15268,"byte_end":15273,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"reset","qualname":"<CrcReader<R>>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the Crc in this CrcReader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23162,"byte_end":23176,"line_start":45,"line_end":45,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::bufread::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23392,"byte_end":23395,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<R>>::new","value":"fn (r: R, level: ::Compression) -> DeflateEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24056,"byte_end":24061,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<R>>::reset","value":"fn (&mut self, r: R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24231,"byte_end":24238,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24483,"byte_end":24490,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24618,"byte_end":24628,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateEncoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24899,"byte_end":24907,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25141,"byte_end":25150,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":747},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26969,"byte_end":26983,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::bufread::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27271,"byte_end":27274,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"fn (r: R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27814,"byte_end":27819,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"fn (&mut self, r: R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28106,"byte_end":28116,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"reset_data","qualname":"<DeflateDecoder<R>>::reset_data","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder's data","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28236,"byte_end":28243,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28488,"byte_end":28495,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28623,"byte_end":28633,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28902,"byte_end":28910,"line_start":235,"line_end":235,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":29046,"byte_end":29055,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30922,"byte_end":30936,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::read::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":756}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31166,"byte_end":31169,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<R>>::new","value":"fn (r: R, level: ::Compression) -> DeflateEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31901,"byte_end":31906,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<R>>::reset","value":"fn (&mut self, r: R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32102,"byte_end":32109,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32375,"byte_end":32382,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32723,"byte_end":32733,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateEncoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33032,"byte_end":33040,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33275,"byte_end":33284,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":760},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35053,"byte_end":35067,"line_start":168,"line_end":168,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::read::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":762}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35266,"byte_end":35269,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"fn (r: R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35587,"byte_end":35599,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<DeflateDecoder<R>>::new_with_buf","value":"fn (r: R, buf: Vec<u8>) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36319,"byte_end":36324,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"fn (&mut self, r: R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36520,"byte_end":36527,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36793,"byte_end":36800,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37141,"byte_end":37151,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37448,"byte_end":37456,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37593,"byte_end":37602,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":766},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39185,"byte_end":39199,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::write::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":768}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39529,"byte_end":39532,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"fn (w: W, level: ::Compression) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39761,"byte_end":39768,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40045,"byte_end":40052,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40930,"byte_end":40935,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"fn (&mut self, w: W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41700,"byte_end":41710,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DeflateEncoder<W>>::try_finish","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42545,"byte_end":42551,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43241,"byte_end":43253,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<DeflateEncoder<W>>::flush_finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43584,"byte_end":43592,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<W>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compresor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43835,"byte_end":43844,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<W>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45774,"byte_end":45788,"line_start":220,"line_end":220,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::write::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":774}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46078,"byte_end":46081,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<W>>::new","value":"fn (w: W) -> DeflateDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46283,"byte_end":46290,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46567,"byte_end":46574,"line_start":245,"line_end":245,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47355,"byte_end":47360,"line_start":264,"line_end":264,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<W>>::reset","value":"fn (&mut self, w: W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48106,"byte_end":48116,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DeflateDecoder<W>>::try_finish","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48930,"byte_end":48936,"line_start":304,"line_end":304,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateDecoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49303,"byte_end":49311,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<W>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49481,"byte_end":49490,"line_start":320,"line_end":320,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<W>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71711,"byte_end":71720,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::bufread::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72490,"byte_end":72493,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<R>>::new","value":"fn (r: R, level: Compression) -> GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73246,"byte_end":73253,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73520,"byte_end":73527,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73670,"byte_end":73680,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzEncoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":787},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75701,"byte_end":75710,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::bufread::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":76088,"byte_end":76091,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<R>>::new","value":"fn (mut r: R) -> io::Result<GzDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77416,"byte_end":77422,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<R>>::header","value":"fn (&self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77537,"byte_end":77544,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77811,"byte_end":77818,"line_start":354,"line_end":354,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77963,"byte_end":77973,"line_start":359,"line_end":359,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzDecoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80093,"byte_end":80107,"line_start":429,"line_end":429,"column_start":12,"column_end":26},"name":"MultiGzDecoder","qualname":"::gz::bufread::MultiGzDecoder","value":"MultiGzDecoder {  }","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80572,"byte_end":80575,"line_start":445,"line_end":445,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiGzDecoder<R>>::new","value":"fn (mut r: R) -> io::Result<MultiGzDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82404,"byte_end":82410,"line_start":503,"line_end":503,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiGzDecoder<R>>::header","value":"fn (&self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82525,"byte_end":82532,"line_start":508,"line_end":508,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiGzDecoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82799,"byte_end":82806,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiGzDecoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82951,"byte_end":82961,"line_start":521,"line_end":521,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiGzDecoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84592,"byte_end":84601,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::read::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":805}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85151,"byte_end":85154,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<R>>::new","value":"fn (r: R, level: Compression) -> GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85335,"byte_end":85342,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85609,"byte_end":85616,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85759,"byte_end":85769,"line_start":74,"line_end":74,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzEncoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":809},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87229,"byte_end":87238,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::read::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":811}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87558,"byte_end":87561,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<R>>::new","value":"fn (r: R) -> io::Result<GzDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87780,"byte_end":87786,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<R>>::header","value":"fn (&self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87908,"byte_end":87915,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88182,"byte_end":88189,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88334,"byte_end":88344,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzDecoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":815},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90306,"byte_end":90320,"line_start":229,"line_end":229,"column_start":12,"column_end":26},"name":"MultiGzDecoder","qualname":"::gz::read::MultiGzDecoder","value":"MultiGzDecoder {  }","parent":null,"children":[{"krate":0,"index":817}],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90732,"byte_end":90735,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiGzDecoder<R>>::new","value":"fn (r: R) -> io::Result<MultiGzDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90982,"byte_end":90988,"line_start":249,"line_end":249,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiGzDecoder<R>>::header","value":"fn (&self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91110,"byte_end":91117,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiGzDecoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91384,"byte_end":91391,"line_start":262,"line_end":262,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiGzDecoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91536,"byte_end":91546,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiGzDecoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":821},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92853,"byte_end":92862,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::write::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93607,"byte_end":93610,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<W>>::new","value":"fn (w: W, level: Compression) -> GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93767,"byte_end":93774,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94031,"byte_end":94038,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94717,"byte_end":94727,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<GzEncoder<W>>::try_finish","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":96115,"byte_end":96121,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"finish","qualname":"<GzEncoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding this stream, returning the underlying writer once the\n encoding is done.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57765,"byte_end":57771,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Header","qualname":"::gz::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834}],"decl_id":null,"docs":" A structure representing the header of a gzip stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57986,"byte_end":57994,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"filename","qualname":"<Header>::filename","value":"fn (&self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `filename` field of this gzip stream's header, if present.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58162,"byte_end":58167,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"extra","qualname":"<Header>::extra","value":"fn (&self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `extra` field of this gzip stream's header, if present.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58334,"byte_end":58341,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"comment","qualname":"<Header>::comment","value":"fn (&self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `comment` field of this gzip stream's header, if present.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58990,"byte_end":58995,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"mtime","qualname":"<Header>::mtime","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" This gives the most recent modification time of the original file being compressed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59390,"byte_end":59407,"line_start":67,"line_end":67,"column_start":12,"column_end":29},"name":"mtime_as_datetime","qualname":"<Header>::mtime_as_datetime","value":"fn (&self) -> Option<time::SystemTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns the most recent modification time represented by a date-time type.\n Returns `None` if the value of the underlying counter is 0,\n indicating no time stamp is available.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":840},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60472,"byte_end":60479,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"Builder","qualname":"::gz::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844}],"decl_id":null,"docs":" A builder structure to create a new gzip Encoder.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60678,"byte_end":60681,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a new blank builder with no header by default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60901,"byte_end":60906,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"mtime","qualname":"<Builder>::mtime","value":"fn (mut self, mtime: u32) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `mtime` field in the gzip header.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61057,"byte_end":61062,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"extra","qualname":"<Builder>::extra","value":"fn <T> (mut self, extra: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `extra` field in the gzip header.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61334,"byte_end":61342,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"filename","qualname":"<Builder>::filename","value":"fn <T> (mut self, filename: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `filename` field in the gzip header.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61644,"byte_end":61651,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"comment","qualname":"<Builder>::comment","value":"fn <T> (mut self, comment: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `comment` field in the gzip header.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62012,"byte_end":62017,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"write","qualname":"<Builder>::write","value":"fn <W> (self, w: W, lvl: Compression) -> write::GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a writer encoder in the process.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62361,"byte_end":62365,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"name":"read","qualname":"<Builder>::read","value":"fn <R> (self, r: R, lvl: Compression) -> read::GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62714,"byte_end":62722,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"buf_read","qualname":"<Builder>::buf_read","value":"fn <R> (self, r: R, lvl: Compression) -> bufread::GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":857},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104801,"byte_end":104809,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Compress","qualname":"::mem::Compress","value":"Compress {  }","parent":null,"children":[{"krate":0,"index":858}],"decl_id":null,"docs":" Raw in-memory compression stream for blocks of data.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":861},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105454,"byte_end":105464,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"Decompress","qualname":"::mem::Decompress","value":"Decompress {  }","parent":null,"children":[{"krate":0,"index":862}],"decl_id":null,"docs":" Raw in-memory decompression stream for blocks of data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106338,"byte_end":106342,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"None","qualname":"::mem::Flush::None","value":"Flush::None","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" A typical parameter for passing to compression/decompression functions,\n this indicates that the underlying stream to decide how much data to\n accumulate before producing output in order to maximize compression.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":884},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106793,"byte_end":106797,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Sync","qualname":"::mem::Flush::Sync","value":"Flush::Sync","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer and the output is\n aligned on a byte boundary so that the decompressor can get all input\n data available so far.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":887},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107330,"byte_end":107337,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"Partial","qualname":"::mem::Flush::Partial","value":"Flush::Partial","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer, but the output is\n not aligned to a byte boundary.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":890},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107994,"byte_end":107999,"line_start":104,"line_end":104,"column_start":5,"column_end":10},"name":"Block","qualname":"::mem::Flush::Block","value":"Flush::Block","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" A deflate block is completed and emitted, as for `Flush::Sync`, but the\n output is not aligned on a byte boundary and up to seven vits of the\n current block are held to be written as the next byte after the next\n deflate block is completed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":893},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108335,"byte_end":108339,"line_start":111,"line_end":111,"column_start":5,"column_end":9},"name":"Full","qualname":"::mem::Flush::Full","value":"Flush::Full","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" All output is flushed as with `Flush::Sync` and the compression state is\n reset so decompression can restart from this point if previous\n compressed data has been damaged or if random access is desired.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":896},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108567,"byte_end":108573,"line_start":117,"line_end":117,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::Flush::Finish","value":"Flush::Finish","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" Pending input is processed and pending output is flushed.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":880},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106092,"byte_end":106097,"line_start":69,"line_end":69,"column_start":10,"column_end":15},"name":"Flush","qualname":"::mem::Flush","value":"Flush::{None, Sync, Partial, Block, Full, Finish}","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896}],"decl_id":null,"docs":" Values which indicate the form of flushing to be used when compressing or\n decompressing in-memory data.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106083,"byte_end":108602,"line_start":69,"line_end":118,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106083,"byte_end":108602,"line_start":69,"line_end":118,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":908},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108759,"byte_end":108768,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"DataError","qualname":"::mem::DataError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned when a decompression object finds that the input stream of\n bytes was not a valid input stream of bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":914},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109125,"byte_end":109127,"line_start":133,"line_end":133,"column_start":5,"column_end":7},"name":"Ok","qualname":"::mem::Status::Ok","value":"Status::Ok","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Indicates success.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":916},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109606,"byte_end":109614,"line_start":144,"line_end":144,"column_start":5,"column_end":13},"name":"BufError","qualname":"::mem::Status::BufError","value":"Status::BufError","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Indicates that forward progress is not possible due to input or output\n buffers being empty.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":918},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109896,"byte_end":109905,"line_start":151,"line_end":151,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::mem::Status::StreamEnd","value":"Status::StreamEnd","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Indicates that all input has been consumed and all output bytes have\n been written. Decompression/compression should not be called again.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":913},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108933,"byte_end":108939,"line_start":128,"line_end":128,"column_start":10,"column_end":16},"name":"Status","qualname":"::mem::Status","value":"Status::{Ok, BufError, StreamEnd}","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918}],"decl_id":null,"docs":" Possible status results of compressing some data or successfully\n decompressing a block of data.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108924,"byte_end":109908,"line_start":128,"line_end":152,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108924,"byte_end":109908,"line_start":128,"line_end":152,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":110229,"byte_end":110232,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<Compress>::new","value":"fn (level: Compression, zlib_header: bool) -> Compress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for compressing data that it's given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111387,"byte_end":111395,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Compress>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this compression object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111568,"byte_end":111577,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Compress>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this compression object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111807,"byte_end":111812,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"reset","qualname":"<Compress>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Quickly resets this compressor without having to reallocate anything.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":112418,"byte_end":112426,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"compress","qualname":"<Compress>::compress","value":"fn (&mut self, input: &[u8], output: &mut [u8], flush: Flush) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114015,"byte_end":114027,"line_start":251,"line_end":251,"column_start":12,"column_end":24},"name":"compress_vec","qualname":"<Compress>::compress_vec","value":"fn (&mut self, input: &[u8], output: &mut Vec<u8>, flush: Flush) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the extra space of the output, consuming\n only as much input as needed and writing as much output as possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114896,"byte_end":114899,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"new","qualname":"<Decompress>::new","value":"fn (zlib_header: bool) -> Decompress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for decompressing data that it's given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":115805,"byte_end":115813,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Decompress>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this decompression object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":115988,"byte_end":115997,"line_start":306,"line_end":306,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Decompress>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this decompression object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":117167,"byte_end":117177,"line_start":330,"line_end":330,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decompress>::decompress","value":"fn (&mut self, input: &[u8], output: &mut [u8], flush: Flush) -> Result<Status, DataError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":119106,"byte_end":119120,"line_start":374,"line_end":374,"column_start":12,"column_end":26},"name":"decompress_vec","qualname":"<Decompress>::decompress_vec","value":"fn (&mut self, input: &[u8], output: &mut Vec<u8>, flush: Flush) -> Result<Status, DataError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the extra space in the output vector\n specified by `output`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120170,"byte_end":120175,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"name":"reset","qualname":"<Decompress>::reset","value":"fn (&mut self, zlib_header: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the equivalent of replacing this decompression state with a\n freshly allocated copy.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":929},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129977,"byte_end":129988,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::bufread::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130201,"byte_end":130204,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<R>>::new","value":"fn (r: R, level: ::Compression) -> ZlibEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130851,"byte_end":130856,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<R>>::reset","value":"fn (&mut self, r: R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131026,"byte_end":131033,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131278,"byte_end":131285,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131413,"byte_end":131423,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibEncoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131694,"byte_end":131702,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131936,"byte_end":131945,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":936},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133731,"byte_end":133742,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::bufread::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133923,"byte_end":133926,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<R>>::new","value":"fn (r: R) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134556,"byte_end":134561,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<R>>::reset","value":"fn (&mut self, r: R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134731,"byte_end":134738,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134983,"byte_end":134990,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135118,"byte_end":135128,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibDecoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135397,"byte_end":135405,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135541,"byte_end":135550,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":943},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137288,"byte_end":137299,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::read::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":945}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137523,"byte_end":137526,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<R>>::new","value":"fn (r: R, level: ::Compression) -> ZlibEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138246,"byte_end":138251,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<R>>::reset","value":"fn (&mut self, r: R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138447,"byte_end":138454,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138720,"byte_end":138727,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139068,"byte_end":139078,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibEncoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139377,"byte_end":139385,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139620,"byte_end":139629,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":949},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141356,"byte_end":141367,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::read::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":951}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141559,"byte_end":141562,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<R>>::new","value":"fn (r: R) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141889,"byte_end":141901,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<ZlibDecoder<R>>::new_with_buf","value":"fn (r: R, buf: Vec<u8>) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142609,"byte_end":142614,"line_start":201,"line_end":201,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<R>>::reset","value":"fn (&mut self, r: R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142810,"byte_end":142817,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143083,"byte_end":143090,"line_start":215,"line_end":215,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143431,"byte_end":143441,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibDecoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143738,"byte_end":143746,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143883,"byte_end":143892,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145484,"byte_end":145495,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::write::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":957}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145823,"byte_end":145826,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"fn (w: W, level: ::Compression) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146048,"byte_end":146055,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146332,"byte_end":146339,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147154,"byte_end":147159,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"fn (&mut self, w: W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147924,"byte_end":147934,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<ZlibEncoder<W>>::try_finish","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148769,"byte_end":148775,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149465,"byte_end":149477,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<ZlibEncoder<W>>::flush_finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149808,"byte_end":149816,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<W>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compresor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150059,"byte_end":150068,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<W>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":961},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151945,"byte_end":151956,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::write::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":963}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152243,"byte_end":152246,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<W>>::new","value":"fn (w: W) -> ZlibDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152441,"byte_end":152448,"line_start":241,"line_end":241,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152725,"byte_end":152732,"line_start":249,"line_end":249,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153346,"byte_end":153351,"line_start":265,"line_end":265,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<W>>::reset","value":"fn (&mut self, w: W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154132,"byte_end":154142,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<ZlibDecoder<W>>::try_finish","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154956,"byte_end":154962,"line_start":305,"line_end":305,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibDecoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155329,"byte_end":155337,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<W>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155507,"byte_end":155516,"line_start":321,"line_end":321,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<W>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":684},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4254,"byte_end":4258,"line_start":137,"line_end":137,"column_start":9,"column_end":13},"name":"read","qualname":"::read","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"decl_id":null,"docs":" Types which operate over [`Read`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":692},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4705,"byte_end":4710,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"decl_id":null,"docs":" Types which operate over [`Write`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":698},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5097,"byte_end":5104,"line_start":163,"line_end":163,"column_start":9,"column_end":16},"name":"bufread","qualname":"::bufread","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705}],"decl_id":null,"docs":" Types which operate over [`BufRead`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":968},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6403,"byte_end":6407,"line_start":196,"line_end":196,"column_start":5,"column_end":9},"name":"None","qualname":"::Compression::None","value":"Compression::None","parent":{"krate":0,"index":967},"children":[],"decl_id":null,"docs":" No compression is to be performed, this may actually inflate data\n slightly when encoding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":971},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6466,"byte_end":6470,"line_start":198,"line_end":198,"column_start":5,"column_end":9},"name":"Fast","qualname":"::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":967},"children":[],"decl_id":null,"docs":" Optimize for the best speed of encoding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":974},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6533,"byte_end":6537,"line_start":200,"line_end":200,"column_start":5,"column_end":9},"name":"Best","qualname":"::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":967},"children":[],"decl_id":null,"docs":" Optimize for the size of data being encoded.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":977},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6621,"byte_end":6628,"line_start":202,"line_end":202,"column_start":5,"column_end":12},"name":"Default","qualname":"::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":967},"children":[],"decl_id":null,"docs":" Choose the default compression, a balance between speed and size.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":967},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6279,"byte_end":6290,"line_start":193,"line_end":193,"column_start":10,"column_end":21},"name":"Compression","qualname":"::Compression","value":"Compression::{None, Fast, Best, Default}","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977}],"decl_id":null,"docs":" When compressing data, the compression level can be specified by a value in\n this enum.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6270,"byte_end":6635,"line_start":193,"line_end":203,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6270,"byte_end":6635,"line_start":193,"line_end":203,"column_start":1,"column_end":2}}]},{"kind":"Trait","id":{"krate":0,"index":711},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6853,"byte_end":6865,"line_start":213,"line_end":213,"column_start":11,"column_end":23},"name":"FlateReadExt","qualname":"::FlateReadExt","value":"FlateReadExt: Read + Sized","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717}],"decl_id":null,"docs":" A helper trait to create encoder/decoders with method syntax.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6992,"byte_end":7001,"line_start":216,"line_end":216,"column_start":8,"column_end":17},"name":"gz_encode","qualname":"::FlateReadExt::gz_encode","value":"fn (self, lvl: Compression) -> read::GzEncoder<Self>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Consume this reader to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7184,"byte_end":7193,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"gz_decode","qualname":"::FlateReadExt::gz_decode","value":"fn (self) -> io::Result<read::GzDecoder<Self>>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Consume this reader to create a decompression stream of this stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7391,"byte_end":7402,"line_start":227,"line_end":227,"column_start":8,"column_end":19},"name":"zlib_encode","qualname":"::FlateReadExt::zlib_encode","value":"fn (self, lvl: Compression) -> read::ZlibEncoder<Self>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Consume this reader to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7589,"byte_end":7600,"line_start":232,"line_end":232,"column_start":8,"column_end":19},"name":"zlib_decode","qualname":"::FlateReadExt::zlib_decode","value":"fn (self) -> read::ZlibDecoder<Self>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Consume this reader to create a decompression stream of this stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7790,"byte_end":7804,"line_start":238,"line_end":238,"column_start":8,"column_end":22},"name":"deflate_encode","qualname":"::FlateReadExt::deflate_encode","value":"fn (self, lvl: Compression) -> read::DeflateEncoder<Self>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Consume this reader to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7997,"byte_end":8011,"line_start":243,"line_end":243,"column_start":8,"column_end":22},"name":"deflate_decode","qualname":"::FlateReadExt::deflate_decode","value":"fn (self) -> read::DeflateDecoder<Self>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Consume this reader to create a decompression stream of this stream.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":718},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8175,"byte_end":8188,"line_start":249,"line_end":249,"column_start":11,"column_end":24},"name":"FlateWriteExt","qualname":"::FlateWriteExt","value":"FlateWriteExt: Write + Sized","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" A helper trait to create encoder/decoders with method syntax.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8316,"byte_end":8325,"line_start":252,"line_end":252,"column_start":8,"column_end":17},"name":"gz_encode","qualname":"::FlateWriteExt::gz_encode","value":"fn (self, lvl: Compression) -> write::GzEncoder<Self>","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":" Consume this writer to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8777,"byte_end":8788,"line_start":264,"line_end":264,"column_start":8,"column_end":19},"name":"zlib_encode","qualname":"::FlateWriteExt::zlib_encode","value":"fn (self, lvl: Compression) -> write::ZlibEncoder<Self>","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":" Consume this writer to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8977,"byte_end":8988,"line_start":269,"line_end":269,"column_start":8,"column_end":19},"name":"zlib_decode","qualname":"::FlateWriteExt::zlib_decode","value":"fn (self) -> write::ZlibDecoder<Self>","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":" Consume this writer to create a decompression stream of this stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9180,"byte_end":9194,"line_start":275,"line_end":275,"column_start":8,"column_end":22},"name":"deflate_encode","qualname":"::FlateWriteExt::deflate_encode","value":"fn (self, lvl: Compression) -> write::DeflateEncoder<Self>","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":" Consume this writer to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9389,"byte_end":9403,"line_start":280,"line_end":280,"column_start":8,"column_end":22},"name":"deflate_decode","qualname":"::FlateWriteExt::deflate_decode","value":"fn (self) -> write::DeflateDecoder<Self>","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":" Consume this writer to create a decompression stream of this stream.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":10763,"byte_end":10772,"line_start":23,"line_end":23,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11105,"byte_end":11114,"line_start":32,"line_end":32,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11441,"byte_end":11450,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11817,"byte_end":11826,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":12377,"byte_end":12386,"line_start":84,"line_end":84,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13329,"byte_end":13332,"line_start":27,"line_end":27,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14515,"byte_end":14524,"line_start":69,"line_end":69,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14699,"byte_end":14708,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15345,"byte_end":15354,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15563,"byte_end":15572,"line_start":114,"line_end":114,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23235,"byte_end":23249,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23653,"byte_end":23667,"line_start":66,"line_end":66,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25232,"byte_end":25246,"line_start":114,"line_end":114,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25503,"byte_end":25517,"line_start":123,"line_end":123,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27147,"byte_end":27161,"line_start":181,"line_end":181,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27418,"byte_end":27432,"line_start":192,"line_end":192,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":29137,"byte_end":29151,"line_start":245,"line_end":245,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":29410,"byte_end":29424,"line_start":254,"line_end":254,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31009,"byte_end":31023,"line_start":45,"line_end":45,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31348,"byte_end":31362,"line_start":55,"line_end":55,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33364,"byte_end":33378,"line_start":110,"line_end":110,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33597,"byte_end":33611,"line_start":119,"line_end":119,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35142,"byte_end":35156,"line_start":174,"line_end":174,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35773,"byte_end":35787,"line_start":192,"line_end":192,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37682,"byte_end":37696,"line_start":244,"line_end":244,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37917,"byte_end":37931,"line_start":253,"line_end":253,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39267,"byte_end":39281,"line_start":39,"line_end":39,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43931,"byte_end":43945,"line_start":159,"line_end":159,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44378,"byte_end":44392,"line_start":177,"line_end":177,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45859,"byte_end":45873,"line_start":225,"line_end":225,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49577,"byte_end":49591,"line_start":325,"line_end":325,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":50024,"byte_end":50038,"line_start":343,"line_end":343,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":53976,"byte_end":53989,"line_start":114,"line_end":114,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54155,"byte_end":54168,"line_start":120,"line_end":120,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54337,"byte_end":54350,"line_start":128,"line_end":128,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54493,"byte_end":54506,"line_start":136,"line_end":136,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72132,"byte_end":72141,"line_start":162,"line_end":162,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73165,"byte_end":73174,"line_start":193,"line_end":193,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73774,"byte_end":73783,"line_start":213,"line_end":213,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74473,"byte_end":74482,"line_start":237,"line_end":237,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75836,"byte_end":75845,"line_start":289,"line_end":289,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77334,"byte_end":77343,"line_start":339,"line_end":339,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78067,"byte_end":78076,"line_start":364,"line_end":364,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78359,"byte_end":78368,"line_start":376,"line_end":376,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80233,"byte_end":80247,"line_start":436,"line_end":436,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82309,"byte_end":82323,"line_start":501,"line_end":501,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":83055,"byte_end":83069,"line_start":526,"line_end":526,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":83429,"byte_end":83443,"line_start":539,"line_end":539,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84793,"byte_end":84802,"line_start":46,"line_end":46,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85254,"byte_end":85263,"line_start":59,"line_end":59,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85860,"byte_end":85869,"line_start":79,"line_end":79,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86009,"byte_end":86018,"line_start":85,"line_end":85,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87306,"byte_end":87315,"line_start":134,"line_end":134,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87698,"byte_end":87707,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88435,"byte_end":88444,"line_start":172,"line_end":172,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88584,"byte_end":88593,"line_start":178,"line_end":178,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90393,"byte_end":90407,"line_start":233,"line_end":233,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90887,"byte_end":90901,"line_start":247,"line_end":247,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91637,"byte_end":91651,"line_start":272,"line_end":272,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91791,"byte_end":91805,"line_start":278,"line_end":278,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93249,"byte_end":93258,"line_start":53,"line_end":53,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":96479,"byte_end":96488,"line_start":143,"line_end":143,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":97137,"byte_end":97146,"line_start":167,"line_end":167,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":97369,"byte_end":97378,"line_start":176,"line_end":176,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57887,"byte_end":57893,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60595,"byte_end":60602,"line_start":112,"line_end":112,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":98051,"byte_end":98059,"line_start":23,"line_end":23,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":98525,"byte_end":98535,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":100343,"byte_end":100349,"line_start":85,"line_end":85,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":101909,"byte_end":101915,"line_start":145,"line_end":145,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":103931,"byte_end":103937,"line_start":195,"line_end":195,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105705,"byte_end":105711,"line_start":54,"line_end":54,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105753,"byte_end":105759,"line_start":55,"line_end":55,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109915,"byte_end":109923,"line_start":154,"line_end":154,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114671,"byte_end":114681,"line_start":272,"line_end":272,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120791,"byte_end":120800,"line_start":426,"line_end":426,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120894,"byte_end":120899,"line_start":430,"line_end":430,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121028,"byte_end":121037,"line_start":436,"line_end":436,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121161,"byte_end":121172,"line_start":442,"line_end":442,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121299,"byte_end":121312,"line_start":447,"line_end":447,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121449,"byte_end":121455,"line_start":453,"line_end":453,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130047,"byte_end":130058,"line_start":47,"line_end":47,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130451,"byte_end":130462,"line_start":62,"line_end":62,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132027,"byte_end":132038,"line_start":110,"line_end":110,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132292,"byte_end":132303,"line_start":119,"line_end":119,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133802,"byte_end":133813,"line_start":175,"line_end":175,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134163,"byte_end":134174,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135632,"byte_end":135643,"line_start":235,"line_end":235,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135899,"byte_end":135910,"line_start":244,"line_end":244,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137369,"byte_end":137380,"line_start":42,"line_end":42,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137696,"byte_end":137707,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139709,"byte_end":139720,"line_start":107,"line_end":107,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139936,"byte_end":139947,"line_start":116,"line_end":116,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141438,"byte_end":141449,"line_start":172,"line_end":172,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142066,"byte_end":142077,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143972,"byte_end":143983,"line_start":242,"line_end":242,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":144201,"byte_end":144212,"line_start":251,"line_end":251,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145564,"byte_end":145575,"line_start":41,"line_end":41,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150155,"byte_end":150166,"line_start":160,"line_end":160,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150588,"byte_end":150599,"line_start":178,"line_end":178,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152027,"byte_end":152038,"line_start":229,"line_end":229,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155603,"byte_end":155614,"line_start":326,"line_end":326,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":156044,"byte_end":156055,"line_start":344,"line_end":344,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6691,"byte_end":6702,"line_start":206,"line_end":206,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9524,"byte_end":9525,"line_start":285,"line_end":285,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9562,"byte_end":9563,"line_start":286,"line_end":286,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":10763,"byte_end":10772,"line_start":23,"line_end":23,"column_start":31,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":6702}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11105,"byte_end":11114,"line_start":32,"line_end":32,"column_start":15,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":31},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11441,"byte_end":11450,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":31},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11817,"byte_end":11826,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":12377,"byte_end":12386,"line_start":84,"line_end":84,"column_start":27,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":2823}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13329,"byte_end":13332,"line_start":27,"line_end":27,"column_start":6,"column_end":9},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14515,"byte_end":14524,"line_start":69,"line_end":69,"column_start":15,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14699,"byte_end":14708,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15345,"byte_end":15354,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":733},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15563,"byte_end":15572,"line_start":114,"line_end":114,"column_start":30,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":733},"to":{"krate":1,"index":2823}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23235,"byte_end":23249,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23653,"byte_end":23667,"line_start":66,"line_end":66,"column_start":9,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25232,"byte_end":25246,"line_start":114,"line_end":114,"column_start":27,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":740},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25503,"byte_end":25517,"line_start":123,"line_end":123,"column_start":36,"column_end":50},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":740},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27147,"byte_end":27161,"line_start":181,"line_end":181,"column_start":18,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27418,"byte_end":27432,"line_start":192,"line_end":192,"column_start":9,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":29137,"byte_end":29151,"line_start":245,"line_end":245,"column_start":27,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":747},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":29410,"byte_end":29424,"line_start":254,"line_end":254,"column_start":36,"column_end":50},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":747},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31009,"byte_end":31023,"line_start":45,"line_end":45,"column_start":15,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31348,"byte_end":31362,"line_start":55,"line_end":55,"column_start":9,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33364,"byte_end":33378,"line_start":110,"line_end":110,"column_start":24,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33597,"byte_end":33611,"line_start":119,"line_end":119,"column_start":33,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35142,"byte_end":35156,"line_start":174,"line_end":174,"column_start":15,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35773,"byte_end":35787,"line_start":192,"line_end":192,"column_start":9,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37682,"byte_end":37696,"line_start":244,"line_end":244,"column_start":24,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37917,"byte_end":37931,"line_start":253,"line_end":253,"column_start":33,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39267,"byte_end":39281,"line_start":39,"line_end":39,"column_start":16,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43931,"byte_end":43945,"line_start":159,"line_end":159,"column_start":26,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44378,"byte_end":44392,"line_start":177,"line_end":177,"column_start":32,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45859,"byte_end":45873,"line_start":225,"line_end":225,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49577,"byte_end":49591,"line_start":325,"line_end":325,"column_start":26,"column_end":40},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":772},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":50024,"byte_end":50038,"line_start":343,"line_end":343,"column_start":32,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":772},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":53976,"byte_end":53989,"line_start":114,"line_end":114,"column_start":32,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":6702}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54155,"byte_end":54168,"line_start":120,"line_end":120,"column_start":22,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54337,"byte_end":54350,"line_start":128,"line_end":128,"column_start":20,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":1550}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54493,"byte_end":54506,"line_start":136,"line_end":136,"column_start":23,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":1561}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72132,"byte_end":72141,"line_start":162,"line_end":162,"column_start":18,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73165,"byte_end":73174,"line_start":193,"line_end":193,"column_start":9,"column_end":18},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73774,"byte_end":73783,"line_start":213,"line_end":213,"column_start":27,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74473,"byte_end":74482,"line_start":237,"line_end":237,"column_start":36,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75836,"byte_end":75845,"line_start":289,"line_end":289,"column_start":18,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77334,"byte_end":77343,"line_start":339,"line_end":339,"column_start":9,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78067,"byte_end":78076,"line_start":364,"line_end":364,"column_start":27,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":787},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78359,"byte_end":78368,"line_start":376,"line_end":376,"column_start":36,"column_end":45},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":787},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80233,"byte_end":80247,"line_start":436,"line_end":436,"column_start":18,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82309,"byte_end":82323,"line_start":501,"line_end":501,"column_start":9,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":83055,"byte_end":83069,"line_start":526,"line_end":526,"column_start":27,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":795},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":83429,"byte_end":83443,"line_start":539,"line_end":539,"column_start":36,"column_end":50},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":795},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84793,"byte_end":84802,"line_start":46,"line_end":46,"column_start":15,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85254,"byte_end":85263,"line_start":59,"line_end":59,"column_start":9,"column_end":18},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85860,"byte_end":85869,"line_start":79,"line_end":79,"column_start":24,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86009,"byte_end":86018,"line_start":85,"line_end":85,"column_start":33,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87306,"byte_end":87315,"line_start":134,"line_end":134,"column_start":15,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87698,"byte_end":87707,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88435,"byte_end":88444,"line_start":172,"line_end":172,"column_start":24,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":809},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88584,"byte_end":88593,"line_start":178,"line_end":178,"column_start":33,"column_end":42},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":809},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90393,"byte_end":90407,"line_start":233,"line_end":233,"column_start":15,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90887,"byte_end":90901,"line_start":247,"line_end":247,"column_start":9,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91637,"byte_end":91651,"line_start":272,"line_end":272,"column_start":24,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":815},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91791,"byte_end":91805,"line_start":278,"line_end":278,"column_start":33,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":815},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93249,"byte_end":93258,"line_start":53,"line_end":53,"column_start":16,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":96479,"byte_end":96488,"line_start":143,"line_end":143,"column_start":26,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":821},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":97137,"byte_end":97146,"line_start":167,"line_end":167,"column_start":32,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":821},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":97369,"byte_end":97378,"line_start":176,"line_end":176,"column_start":25,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":821},"to":{"krate":2,"index":1572}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57887,"byte_end":57893,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60595,"byte_end":60602,"line_start":112,"line_end":112,"column_start":6,"column_end":13},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":98051,"byte_end":98059,"line_start":23,"line_end":23,"column_start":14,"column_end":22},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":857},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":98525,"byte_end":98535,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":100343,"byte_end":100349,"line_start":85,"line_end":85,"column_start":24,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":101909,"byte_end":101915,"line_start":145,"line_end":145,"column_start":34,"column_end":40},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":847},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":103931,"byte_end":103937,"line_start":195,"line_end":195,"column_start":33,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":1572}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105705,"byte_end":105711,"line_start":54,"line_end":54,"column_start":36,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":1386}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105753,"byte_end":105759,"line_start":55,"line_end":55,"column_start":36,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":1395}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109915,"byte_end":109923,"line_start":154,"line_end":154,"column_start":6,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114671,"byte_end":114681,"line_start":272,"line_end":272,"column_start":6,"column_end":16},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120791,"byte_end":120800,"line_start":426,"line_end":426,"column_start":16,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":908},"to":{"krate":1,"index":1537}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120894,"byte_end":120899,"line_start":430,"line_end":430,"column_start":30,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":1,"index":2379},"to":{"krate":2,"index":2042}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121028,"byte_end":121037,"line_start":436,"line_end":436,"column_start":23,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":908},"to":{"krate":2,"index":6704}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121161,"byte_end":121172,"line_start":442,"line_end":442,"column_start":20,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":874},"to":{"krate":0,"index":521}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121299,"byte_end":121312,"line_start":447,"line_end":447,"column_start":20,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":877},"to":{"krate":0,"index":521}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121449,"byte_end":121455,"line_start":453,"line_end":453,"column_start":29,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":1572}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130047,"byte_end":130058,"line_start":47,"line_end":47,"column_start":18,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130451,"byte_end":130462,"line_start":62,"line_end":62,"column_start":9,"column_end":20},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132027,"byte_end":132038,"line_start":110,"line_end":110,"column_start":27,"column_end":38},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":929},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132292,"byte_end":132303,"line_start":119,"line_end":119,"column_start":36,"column_end":47},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":929},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133802,"byte_end":133813,"line_start":175,"line_end":175,"column_start":18,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134163,"byte_end":134174,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135632,"byte_end":135643,"line_start":235,"line_end":235,"column_start":27,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":936},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135899,"byte_end":135910,"line_start":244,"line_end":244,"column_start":36,"column_end":47},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":936},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137369,"byte_end":137380,"line_start":42,"line_end":42,"column_start":15,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137696,"byte_end":137707,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139709,"byte_end":139720,"line_start":107,"line_end":107,"column_start":24,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":943},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139936,"byte_end":139947,"line_start":116,"line_end":116,"column_start":33,"column_end":44},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":943},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141438,"byte_end":141449,"line_start":172,"line_end":172,"column_start":15,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142066,"byte_end":142077,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143972,"byte_end":143983,"line_start":242,"line_end":242,"column_start":24,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":949},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":144201,"byte_end":144212,"line_start":251,"line_end":251,"column_start":33,"column_end":44},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":949},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145564,"byte_end":145575,"line_start":41,"line_end":41,"column_start":16,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150155,"byte_end":150166,"line_start":160,"line_end":160,"column_start":26,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":955},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150588,"byte_end":150599,"line_start":178,"line_end":178,"column_start":32,"column_end":43},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":955},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152027,"byte_end":152038,"line_start":229,"line_end":229,"column_start":16,"column_end":27},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155603,"byte_end":155614,"line_start":326,"line_end":326,"column_start":26,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":961},"to":{"krate":1,"index":2801}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":156044,"byte_end":156055,"line_start":344,"line_end":344,"column_start":32,"column_end":43},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":961},"to":{"krate":1,"index":2751}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6691,"byte_end":6702,"line_start":206,"line_end":206,"column_start":18,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6867,"byte_end":6871,"line_start":213,"line_end":213,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2751},"to":{"krate":0,"index":711}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6874,"byte_end":6879,"line_start":213,"line_end":213,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":711}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8190,"byte_end":8195,"line_start":249,"line_end":249,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2801},"to":{"krate":0,"index":718}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8198,"byte_end":8203,"line_start":249,"line_end":249,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":718}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9524,"byte_end":9525,"line_start":285,"line_end":285,"column_start":32,"column_end":33},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":725},"to":{"krate":0,"index":711}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9562,"byte_end":9563,"line_start":286,"line_end":286,"column_start":34,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":718}}]}