{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0","program":"/Users/evance.soumaoro/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","spin","/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=382d4af19794e523","-C","extra-filename=-382d4af19794e523","--out-dir","/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps","-L","dependency=/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/evance.soumaoro/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/evance.soumaoro/Desktop/rockstartdev/rust-c8/target/rls/debug/deps/libspin-382d4af19794e523.rmeta"},"prelude":{"crate_id":{"name":"spin","disambiguator":[16516965836647271190,3149607340340228727]},"crate_root":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src","external_crates":[{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9133280923345920065,5169035037401655959]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9811081489243518189,10016862334390338995]}},{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16815776717140451016,2925157999366951619]}}],"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","byte_start":0,"byte_end":243,"line_start":1,"line_end":18,"column_start":1,"column_end":10}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","byte_start":169,"byte_end":170,"line_start":12,"line_end":12,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","byte_start":189,"byte_end":190,"line_start":13,"line_end":13,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","byte_start":206,"byte_end":207,"line_start":14,"line_end":14,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","byte_start":0,"byte_end":243,"line_start":1,"line_end":18,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":75},{"krate":0,"index":140}],"decl_id":null,"docs":" Synchronization primitives based on spinning\n","sig":null,"attributes":[{"value":"crate_type = \"lib\"","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","byte_start":23,"byte_end":45,"line_start":2,"line_end":2,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/lib.rs","byte_start":97,"byte_end":107,"line_start":6,"line_end":6,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":1921,"byte_end":1926,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" This type provides MUTual EXclusion based on spinning.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":2142,"byte_end":2152,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"decl_id":null,"docs":" A guard to which the protected data can be accessed","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":2763,"byte_end":2766,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (user_data: T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new spinlock wrapping the supplied data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":2993,"byte_end":3003,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":4037,"byte_end":4041,"line_start":156,"line_end":156,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Locks the spinlock and returns a guard.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":4560,"byte_end":4572,"line_start":173,"line_end":173,"column_start":19,"column_end":31},"name":"force_unlock","qualname":"<Mutex<T>>::force_unlock","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Force unlock the spinlock.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":4780,"byte_end":4788,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Option<MutexGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to lock the mutex. If it is already locked, it will return None. Otherwise it returns\n a guard within Some.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":87},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":11505,"byte_end":11511,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::rw_lock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":11768,"byte_end":11783,"line_start":56,"line_end":56,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::rw_lock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":" A guard to which the protected data can be read","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":203},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":12004,"byte_end":12020,"line_start":66,"line_end":66,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::rw_lock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"decl_id":null,"docs":" A guard to which the protected data can be written","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":12718,"byte_end":12721,"line_start":96,"line_end":96,"column_start":18,"column_end":21},"name":"new","qualname":"<RwLock<T>>::new","value":"fn (user_data: T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new spinlock wrapping the supplied data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":12691,"byte_end":12700,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":12954,"byte_end":12964,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `RwLock`, returning the underlying data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":14085,"byte_end":14089,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"read","qualname":"<RwLock<T>>::read","value":"fn <'a> (&'a self) -> RwLockReadGuard<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, blocking the current thread\n until it can be acquired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":14064,"byte_end":14073,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":15863,"byte_end":15871,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"fn (&self) -> Option<RwLockReadGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire this lock with shared read access.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":15842,"byte_end":15851,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":16769,"byte_end":16789,"line_start":220,"line_end":220,"column_start":19,"column_end":39},"name":"force_read_decrement","qualname":"<RwLock<T>>::force_read_decrement","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Force decrement the reader count.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":17238,"byte_end":17256,"line_start":230,"line_end":230,"column_start":19,"column_end":37},"name":"force_write_unlock","qualname":"<RwLock<T>>::force_write_unlock","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Force unlock exclusive write access.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":18030,"byte_end":18035,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"write","qualname":"<RwLock<T>>::write","value":"fn <'a> (&'a self) -> RwLockWriteGuard<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Lock this rwlock with exclusive write access, blocking the current\n thread until it can be acquired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":18009,"byte_end":18018,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":19520,"byte_end":19529,"line_start":299,"line_end":299,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"fn (&self) -> Option<RwLockWriteGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to lock this rwlock with exclusive write access.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":19499,"byte_end":19508,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":147},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":26822,"byte_end":26826,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Once","qualname":"::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"decl_id":null,"docs":" A synchronization primitive which can be used to run a one-time global\n initialization. Unlike its std equivalent, this is generalized so that The\n closure returns a value and it is stored. Once therefore acts something like\n 1a future, too.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":167},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":27804,"byte_end":27808,"line_start":53,"line_end":53,"column_start":15,"column_end":19},"name":"INIT","qualname":"::once::Once::<T>::INIT","value":"Self","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Initialization constant of `Once`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":27967,"byte_end":27970,"line_start":59,"line_end":59,"column_start":18,"column_end":21},"name":"new","qualname":"<Once<T>>::new","value":"fn () -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Once` value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":29147,"byte_end":29156,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"call_once","qualname":"<Once<T>>::call_once","value":"fn <'a, F> (&'a self, builder: F) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":" Performs an initialization routine once and only once. The given closure\n will be executed if this is the first time `call_once` has been called,\n and otherwise the routine will *not* be invoked.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":30559,"byte_end":30562,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"try","qualname":"<Once<T>>::try","value":"fn <'a> (&'a self) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer iff the `Once` was previously initialized\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":30845,"byte_end":30849,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"wait","qualname":"<Once<T>>::wait","value":"fn <'a> (&'a self) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Like try, but will spin if the `Once` is in the process of being\n initialized\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":2307,"byte_end":2312,"line_start":89,"line_end":89,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":2358,"byte_end":2363,"line_start":90,"line_end":90,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":2379,"byte_end":2384,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":3227,"byte_end":3232,"line_start":127,"line_end":127,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":5206,"byte_end":5211,"line_start":197,"line_end":197,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":5562,"byte_end":5567,"line_start":211,"line_end":211,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":5682,"byte_end":5692,"line_start":217,"line_end":217,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":5811,"byte_end":5821,"line_start":223,"line_end":223,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":5931,"byte_end":5941,"line_start":228,"line_end":228,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":12177,"byte_end":12183,"line_start":73,"line_end":73,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":12236,"byte_end":12242,"line_start":74,"line_end":74,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":12313,"byte_end":12319,"line_start":78,"line_end":78,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":13193,"byte_end":13199,"line_start":115,"line_end":115,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":19973,"byte_end":19979,"line_start":315,"line_end":315,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":20356,"byte_end":20362,"line_start":329,"line_end":329,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":20484,"byte_end":20499,"line_start":335,"line_end":335,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":20614,"byte_end":20630,"line_start":341,"line_end":341,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":20748,"byte_end":20764,"line_start":347,"line_end":347,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":20868,"byte_end":20883,"line_start":351,"line_end":351,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":21093,"byte_end":21109,"line_start":358,"line_end":358,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":26976,"byte_end":26980,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":27400,"byte_end":27404,"line_start":39,"line_end":39,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":27441,"byte_end":27445,"line_start":40,"line_end":40,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":27737,"byte_end":27741,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":31338,"byte_end":31344,"line_start":163,"line_end":163,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":2307,"byte_end":2312,"line_start":89,"line_end":89,"column_start":40,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":1,"index":1395}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":2358,"byte_end":2363,"line_start":90,"line_end":90,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":34},"to":{"krate":1,"index":1386}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":2379,"byte_end":2384,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":3227,"byte_end":3232,"line_start":127,"line_end":127,"column_start":17,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":5206,"byte_end":5211,"line_start":197,"line_end":197,"column_start":45,"column_end":50},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":34},"to":{"krate":1,"index":6702}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":5562,"byte_end":5567,"line_start":211,"line_end":211,"column_start":39,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":34},"to":{"krate":1,"index":2026}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":5682,"byte_end":5692,"line_start":217,"line_end":217,"column_start":31,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":1550}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":5811,"byte_end":5821,"line_start":223,"line_end":223,"column_start":34,"column_end":44},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":1561}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/mutex.rs","byte_start":5931,"byte_end":5941,"line_start":228,"line_end":228,"column_start":30,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":12177,"byte_end":12183,"line_start":73,"line_end":73,"column_start":40,"column_end":46},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":1386}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":12236,"byte_end":12242,"line_start":74,"line_end":74,"column_start":47,"column_end":53},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":1395}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":12313,"byte_end":12319,"line_start":78,"line_end":78,"column_start":9,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":13193,"byte_end":13199,"line_start":115,"line_end":115,"column_start":17,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":19973,"byte_end":19979,"line_start":315,"line_end":315,"column_start":45,"column_end":51},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":6702}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":20356,"byte_end":20362,"line_start":329,"line_end":329,"column_start":39,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":2026}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":20484,"byte_end":20499,"line_start":335,"line_end":335,"column_start":36,"column_end":51},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":194},"to":{"krate":1,"index":1550}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":20614,"byte_end":20630,"line_start":341,"line_end":341,"column_start":36,"column_end":52},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":1550}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":20748,"byte_end":20764,"line_start":347,"line_end":347,"column_start":39,"column_end":55},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":1561}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":20868,"byte_end":20883,"line_start":351,"line_end":351,"column_start":35,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":194},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/rw_lock.rs","byte_start":21093,"byte_end":21109,"line_start":358,"line_end":358,"column_start":35,"column_end":51},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":26976,"byte_end":26980,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":6702}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":27400,"byte_end":27404,"line_start":39,"line_end":39,"column_start":38,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":1395}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":27441,"byte_end":27445,"line_start":40,"line_end":40,"column_start":31,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":1386}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":27737,"byte_end":27741,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/evance.soumaoro/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.0/src/once.rs","byte_start":31338,"byte_end":31344,"line_start":163,"line_end":163,"column_start":19,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":178},"to":{"krate":1,"index":1572}}]}